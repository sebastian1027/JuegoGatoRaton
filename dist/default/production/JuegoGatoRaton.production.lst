

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Sep 23 22:39:28 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.43
    43                           ; Generated 25/07/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154                           
   155                           	psect	idataBANK1
   156  0B14                     __pidataBANK1:	
   157                           
   158                           ;initializer for _randx
   159  0B14  3401               	retlw	1
   160  0B15  3400               	retlw	0
   161  0B16  3400               	retlw	0
   162  0B17  3400               	retlw	0
   163                           
   164                           ;initializer for _DINAMIC
   165  0B18  3401               	retlw	1
   166  0B19  3400               	retlw	0
   167                           
   168                           ;initializer for _STATIC
   169  0B1A  3404               	retlw	4
   170  0B1B  3400               	retlw	0
   171                           
   172                           	psect	strings
   173  0800                     __pstrings:	
   174  0800                     stringtab:	
   175  0800                     __stringtab:	
   176  0800                     stringcode:	
   177                           ;	String table - string pointers are 1 byte each
   178                           
   179  0800                     stringdir:	
   180  0800  3008               	movlw	high stringdir
   181  0801  008A               	movwf	10
   182  0802  0804               	movf	4,w
   183  0803  0A84               	incf	4,f
   184  0804  0782               	addwf	2,f
   185  0805                     __stringbase:	
   186  0805  3400               	retlw	0
   187  0806                     __end_of__stringtab:	
   188  0806                     exp@coeff:	
   189  0806  3400               	retlw	0
   190  0807  3480               	retlw	128
   191  0808  343F               	retlw	63
   192  0809  3472               	retlw	114
   193  080A  3431               	retlw	49
   194  080B  343F               	retlw	63
   195  080C  34FE               	retlw	254
   196  080D  3475               	retlw	117
   197  080E  343E               	retlw	62
   198  080F  3458               	retlw	88
   199  0810  3463               	retlw	99
   200  0811  343D               	retlw	61
   201  0812  3495               	retlw	149
   202  0813  341D               	retlw	29
   203  0814  343C               	retlw	60
   204  0815  34C5               	retlw	197
   205  0816  34AE               	retlw	174
   206  0817  343A               	retlw	58
   207  0818  3479               	retlw	121
   208  0819  3421               	retlw	33
   209  081A  3439               	retlw	57
   210  081B  3494               	retlw	148
   211  081C  3480               	retlw	128
   212  081D  3437               	retlw	55
   213  081E  3493               	retlw	147
   214  081F  34A7               	retlw	167
   215  0820  3435               	retlw	53
   216  0821  3456               	retlw	86
   217  0822  3415               	retlw	21
   218  0823  3434               	retlw	52
   219  0824                     __end_ofexp@coeff:	
   220  0824                     log@coeff:	
   221  0824  3400               	retlw	0
   222  0825  3400               	retlw	0
   223  0826  3400               	retlw	0
   224  0827  3400               	retlw	0
   225  0828  3480               	retlw	128
   226  0829  343F               	retlw	63
   227  082A  34F0               	retlw	240
   228  082B  34FF               	retlw	255
   229  082C  34BE               	retlw	190
   230  082D  34E2               	retlw	226
   231  082E  34A9               	retlw	169
   232  082F  343E               	retlw	62
   233  0830  3483               	retlw	131
   234  0831  3476               	retlw	118
   235  0832  34BE               	retlw	190
   236  0833  34AE               	retlw	174
   237  0834  342B               	retlw	43
   238  0835  343E               	retlw	62
   239  0836  343C               	retlw	60
   240  0837  34C3               	retlw	195
   241  0838  34BD               	retlw	189
   242  0839  34D2               	retlw	210
   243  083A  3413               	retlw	19
   244  083B  343D               	retlw	61
   245  083C  3478               	retlw	120
   246  083D  34D3               	retlw	211
   247  083E  34BB               	retlw	187
   248  083F                     __end_oflog@coeff:	
   249  0008                     _PORTD	set	8
   250  0008                     _PORTDbits	set	8
   251  0007                     _PORTC	set	7
   252  0006                     _PORTBbits	set	6
   253  000B                     _INTCONbits	set	11
   254  0088                     _TRISD	set	136
   255  0086                     _TRISB	set	134
   256  0087                     _TRISC	set	135
   257  0189                     _ANSELH	set	393
   258  0188                     _ANSEL	set	392
   259                           
   260                           ; #config settings
   261  0000                     
   262                           	psect	cinit
   263  0015                     start_initialization:	
   264  0015                     __initialization:	
   265                           
   266                           ; Initialize objects allocated to BANK1
   267  0015  1383               	bcf	3,7	;select IRP bank0
   268  0016  30BD               	movlw	low (__pdataBANK1+8)
   269  0017  00FD               	movwf	btemp+-1
   270  0018  300B               	movlw	high __pidataBANK1
   271  0019  00FE               	movwf	btemp
   272  001A  3014               	movlw	low __pidataBANK1
   273  001B  00FF               	movwf	btemp+1
   274  001C  30B5               	movlw	low __pdataBANK1
   275  001D  0084               	movwf	4
   276  001E  120A  158A  2320   	fcall	init_ram0
   277                           
   278                           ; Clear objects allocated to BANK1
   279  0021  1683               	bsf	3,5	;RP0=1, select bank1
   280  0022  1303               	bcf	3,6	;RP1=0, select bank1
   281  0023  01BD               	clrf	__pbssBANK1& (0+127)
   282  0024  01BE               	clrf	(__pbssBANK1+1)& (0+127)
   283  0025                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286  0025                     __end_of__initialization:	
   287  0025  0183               	clrf	3
   288  0026  120A  118A  2BBF   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	bssBANK1
   291  00BD                     __pbssBANK1:	
   292  00BD                     _errno:	
   293  00BD                     	ds	2
   294                           
   295                           	psect	dataBANK1
   296  00B5                     __pdataBANK1:	
   297  00B5                     _randx:	
   298  00B5                     	ds	4
   299  00B9                     _DINAMIC:	
   300  00B9                     	ds	2
   301  00BB                     _STATIC:	
   302  00BB                     	ds	2
   303                           
   304                           	psect	inittext
   305  0B1C                     init_fetch0:	
   306                           ;	Called with low address in FSR and high address in W
   307                           
   308  0B1C  087E               	movf	126,w
   309  0B1D  008A               	movwf	10
   310  0B1E  087F               	movf	127,w
   311  0B1F  0082               	movwf	2
   312  0B20                     init_ram0:	
   313                           ;Called with:
   314                           ;	high address of idata address in btemp 
   315                           ;	low address of idata address in btemp+1 
   316                           ;	low address of data in FSR
   317                           ;	high address + 1 of data in btemp-1
   318                           
   319  0B20  231C  120A  158A   	fcall	init_fetch0
   320  0B23  0080               	movwf	0
   321  0B24  0A84               	incf	4,f
   322  0B25  0804               	movf	4,w
   323  0B26  067D               	xorwf	125,w
   324  0B27  1903               	btfsc	3,2
   325  0B28  3400               	retlw	0
   326  0B29  0AFF               	incf	127,f
   327  0B2A  1903               	btfsc	3,2
   328  0B2B  0AFE               	incf	126,f
   329  0B2C  2B20               	goto	init_ram0
   330                           
   331                           	psect	cstackBANK1
   332  00A0                     __pcstackBANK1:	
   333  00A0                     _pow$645:	
   334                           
   335                           ; 3 bytes @ 0x0
   336  00A0                     	ds	3
   337  00A3                     _pow$646:	
   338                           
   339                           ; 3 bytes @ 0x3
   340  00A3                     	ds	3
   341  00A6                     pow@sign:	
   342                           
   343                           ; 1 bytes @ 0x6
   344  00A6                     	ds	1
   345  00A7                     pow@yi:	
   346                           
   347                           ; 4 bytes @ 0x7
   348  00A7                     	ds	4
   349  00AB                     _main$643:	
   350                           
   351                           ; 3 bytes @ 0xB
   352  00AB                     	ds	3
   353  00AE                     _main$644:	
   354                           
   355                           ; 3 bytes @ 0xE
   356  00AE                     	ds	3
   357  00B1                     main@aux:	
   358                           
   359                           ; 2 bytes @ 0x11
   360  00B1                     	ds	2
   361  00B3                     main@aux2:	
   362                           
   363                           ; 2 bytes @ 0x13
   364  00B3                     	ds	2
   365                           
   366                           	psect	cstackCOMMON
   367  0070                     __pcstackCOMMON:	
   368  0070                     ?_isr:	
   369  0070                     ?_validar:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_main:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?___awdiv:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ___awdiv@divisor:	
   379                           ; 2 bytes @ 0x0
   380                           
   381                           
   382                           ; 2 bytes @ 0x0
   383  0070                     	ds	2
   384  0072                     ___awdiv@dividend:	
   385                           
   386                           ; 2 bytes @ 0x2
   387  0072                     	ds	2
   388  0074                     ??___awdiv:	
   389                           
   390                           ; 1 bytes @ 0x4
   391  0074                     	ds	1
   392  0075                     ___awdiv@counter:	
   393                           
   394                           ; 1 bytes @ 0x5
   395  0075                     	ds	1
   396  0076                     ___awdiv@sign:	
   397                           
   398                           ; 1 bytes @ 0x6
   399  0076                     	ds	1
   400  0077                     ___awdiv@quotient:	
   401                           
   402                           ; 2 bytes @ 0x7
   403  0077                     	ds	2
   404  0079                     ??_isr:	
   405                           
   406                           ; 1 bytes @ 0x9
   407  0079                     	ds	4
   408                           
   409                           	psect	cstackBANK0
   410  0020                     __pcstackBANK0:	
   411  0020                     ?___ftge:	
   412  0020                     ??_validar:	
   413                           ; 1 bit 
   414                           
   415  0020                     ?___bmul:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0020                     ?___ftpack:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0020                     ?_frexp:	
   422                           ; 3 bytes @ 0x0
   423                           
   424  0020                     ?___ftneg:	
   425                           ; 3 bytes @ 0x0
   426                           
   427  0020                     ?___lmul:	
   428                           ; 3 bytes @ 0x0
   429                           
   430  0020                     ___bmul@multiplicand:	
   431                           ; 4 bytes @ 0x0
   432                           
   433  0020                     ___ftpack@arg:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0020                     ___ftge@ff1:	
   437                           ; 3 bytes @ 0x0
   438                           
   439  0020                     ___ftneg@f1:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0020                     frexp@value:	
   443                           ; 3 bytes @ 0x0
   444                           
   445  0020                     ___lmul@multiplier:	
   446                           ; 3 bytes @ 0x0
   447                           
   448                           
   449                           ; 4 bytes @ 0x0
   450  0020                     	ds	1
   451  0021                     ??___bmul:	
   452                           
   453                           ; 1 bytes @ 0x1
   454  0021                     	ds	1
   455  0022                     ___bmul@product:	
   456                           
   457                           ; 1 bytes @ 0x2
   458  0022                     	ds	1
   459  0023                     ??___ftneg:	
   460  0023                     ___bmul@multiplier:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0023                     ___ftpack@exp:	
   464                           ; 1 bytes @ 0x3
   465                           
   466  0023                     frexp@eptr:	
   467                           ; 1 bytes @ 0x3
   468                           
   469  0023                     ___ftge@ff2:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 3 bytes @ 0x3
   474  0023                     	ds	1
   475  0024                     ??_frexp:	
   476  0024                     ___ftpack@sign:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0024                     ___lmul@multiplicand:	
   480                           ; 1 bytes @ 0x4
   481                           
   482                           
   483                           ; 4 bytes @ 0x4
   484  0024                     	ds	1
   485  0025                     ??___ftpack:	
   486                           
   487                           ; 1 bytes @ 0x5
   488  0025                     	ds	1
   489  0026                     ??___ftge:	
   490                           
   491                           ; 1 bytes @ 0x6
   492  0026                     	ds	2
   493  0028                     ??___lmul:	
   494  0028                     ?___awtoft:	
   495                           ; 1 bytes @ 0x8
   496                           
   497  0028                     ?___ftdiv:	
   498                           ; 3 bytes @ 0x8
   499                           
   500  0028                     ?___lltoft:	
   501                           ; 3 bytes @ 0x8
   502                           
   503  0028                     ___awtoft@c:	
   504                           ; 3 bytes @ 0x8
   505                           
   506  0028                     ___ftdiv@f2:	
   507                           ; 2 bytes @ 0x8
   508                           
   509  0028                     ___lltoft@c:	
   510                           ; 3 bytes @ 0x8
   511                           
   512                           
   513                           ; 4 bytes @ 0x8
   514  0028                     	ds	1
   515  0029                     ___lmul@product:	
   516                           
   517                           ; 4 bytes @ 0x9
   518  0029                     	ds	2
   519  002B                     ??___awtoft:	
   520  002B                     ___ftdiv@f1:	
   521                           ; 1 bytes @ 0xB
   522                           
   523                           
   524                           ; 3 bytes @ 0xB
   525  002B                     	ds	1
   526  002C                     ??___lltoft:	
   527                           
   528                           ; 1 bytes @ 0xC
   529  002C                     	ds	1
   530  002D                     ?_rand:	
   531  002D                     ___awtoft@sign:	
   532                           ; 2 bytes @ 0xD
   533                           
   534  002D                     ___lltoft@exp:	
   535                           ; 1 bytes @ 0xD
   536                           
   537                           
   538                           ; 1 bytes @ 0xD
   539  002D                     	ds	1
   540  002E                     ??___ftdiv:	
   541  002E                     ?___ftmul:	
   542                           ; 1 bytes @ 0xE
   543                           
   544  002E                     ?___fttol:	
   545                           ; 3 bytes @ 0xE
   546                           
   547  002E                     ___ftmul@f1:	
   548                           ; 4 bytes @ 0xE
   549                           
   550  002E                     ___fttol@f1:	
   551                           ; 3 bytes @ 0xE
   552                           
   553                           
   554                           ; 3 bytes @ 0xE
   555  002E                     	ds	1
   556  002F                     ??_rand:	
   557                           
   558                           ; 1 bytes @ 0xF
   559  002F                     	ds	2
   560  0031                     ___ftmul@f2:	
   561                           
   562                           ; 3 bytes @ 0x11
   563  0031                     	ds	1
   564  0032                     ??___fttol:	
   565  0032                     ___ftdiv@cntr:	
   566                           ; 1 bytes @ 0x12
   567                           
   568                           
   569                           ; 1 bytes @ 0x12
   570  0032                     	ds	1
   571  0033                     ___ftdiv@f3:	
   572                           
   573                           ; 3 bytes @ 0x13
   574  0033                     	ds	1
   575  0034                     ??___ftmul:	
   576  0034                     ?___awmod:	
   577                           ; 1 bytes @ 0x14
   578                           
   579  0034                     ___awmod@divisor:	
   580                           ; 2 bytes @ 0x14
   581                           
   582                           
   583                           ; 2 bytes @ 0x14
   584  0034                     	ds	2
   585  0036                     ___ftdiv@exp:	
   586  0036                     ___fttol@sign1:	
   587                           ; 1 bytes @ 0x16
   588                           
   589  0036                     ___awmod@dividend:	
   590                           ; 1 bytes @ 0x16
   591                           
   592                           
   593                           ; 2 bytes @ 0x16
   594  0036                     	ds	1
   595  0037                     ___ftdiv@sign:	
   596  0037                     ___fttol@lval:	
   597                           ; 1 bytes @ 0x17
   598                           
   599                           
   600                           ; 4 bytes @ 0x17
   601  0037                     	ds	1
   602  0038                     ??___awmod:	
   603  0038                     ___ftmul@exp:	
   604                           ; 1 bytes @ 0x18
   605                           
   606                           
   607                           ; 1 bytes @ 0x18
   608  0038                     	ds	1
   609  0039                     ___awmod@counter:	
   610  0039                     ___ftmul@f3_as_product:	
   611                           ; 1 bytes @ 0x19
   612                           
   613                           
   614                           ; 3 bytes @ 0x19
   615  0039                     	ds	1
   616  003A                     ___awmod@sign:	
   617                           
   618                           ; 1 bytes @ 0x1A
   619  003A                     	ds	1
   620  003B                     ___fttol@exp1:	
   621                           
   622                           ; 1 bytes @ 0x1B
   623  003B                     	ds	1
   624  003C                     ?___altoft:	
   625  003C                     ___ftmul@cntr:	
   626                           ; 3 bytes @ 0x1C
   627                           
   628  003C                     ___altoft@c:	
   629                           ; 1 bytes @ 0x1C
   630                           
   631                           
   632                           ; 4 bytes @ 0x1C
   633  003C                     	ds	1
   634  003D                     ___ftmul@sign:	
   635                           
   636                           ; 1 bytes @ 0x1D
   637  003D                     	ds	1
   638  003E                     ?___ftadd:	
   639  003E                     ___ftadd@f1:	
   640                           ; 3 bytes @ 0x1E
   641                           
   642                           
   643                           ; 3 bytes @ 0x1E
   644  003E                     	ds	2
   645  0040                     ??___altoft:	
   646                           
   647                           ; 1 bytes @ 0x20
   648  0040                     	ds	1
   649  0041                     ___ftadd@f2:	
   650                           
   651                           ; 3 bytes @ 0x21
   652  0041                     	ds	1
   653  0042                     ___altoft@exp:	
   654                           
   655                           ; 1 bytes @ 0x22
   656  0042                     	ds	1
   657  0043                     ___altoft@sign:	
   658                           
   659                           ; 1 bytes @ 0x23
   660  0043                     	ds	1
   661  0044                     ??___ftadd:	
   662                           
   663                           ; 1 bytes @ 0x24
   664  0044                     	ds	4
   665  0048                     ___ftadd@sign:	
   666                           
   667                           ; 1 bytes @ 0x28
   668  0048                     	ds	1
   669  0049                     ___ftadd@exp2:	
   670                           
   671                           ; 1 bytes @ 0x29
   672  0049                     	ds	1
   673  004A                     ___ftadd@exp1:	
   674                           
   675                           ; 1 bytes @ 0x2A
   676  004A                     	ds	1
   677  004B                     ?_floor:	
   678  004B                     ?_eval_poly:	
   679                           ; 3 bytes @ 0x2B
   680                           
   681  004B                     ?___ftsub:	
   682                           ; 3 bytes @ 0x2B
   683                           
   684  004B                     ___ftsub@f2:	
   685                           ; 3 bytes @ 0x2B
   686                           
   687  004B                     floor@x:	
   688                           ; 3 bytes @ 0x2B
   689                           
   690  004B                     eval_poly@x:	
   691                           ; 3 bytes @ 0x2B
   692                           
   693                           
   694                           ; 3 bytes @ 0x2B
   695  004B                     	ds	3
   696  004E                     ??_floor:	
   697  004E                     eval_poly@d:	
   698                           ; 1 bytes @ 0x2E
   699                           
   700  004E                     ___ftsub@f1:	
   701                           ; 1 bytes @ 0x2E
   702                           
   703                           
   704                           ; 3 bytes @ 0x2E
   705  004E                     	ds	1
   706  004F                     eval_poly@n:	
   707  004F                     floor@i:	
   708                           ; 2 bytes @ 0x2F
   709                           
   710                           
   711                           ; 3 bytes @ 0x2F
   712  004F                     	ds	2
   713  0051                     ??_eval_poly:	
   714  0051                     ??___ftsub:	
   715                           ; 1 bytes @ 0x31
   716                           
   717                           
   718                           ; 1 bytes @ 0x31
   719  0051                     	ds	1
   720  0052                     floor@expon:	
   721  0052                     eval_poly@res:	
   722                           ; 2 bytes @ 0x32
   723                           
   724                           
   725                           ; 3 bytes @ 0x32
   726  0052                     	ds	3
   727  0055                     ?_log:	
   728  0055                     ?_ldexp:	
   729                           ; 3 bytes @ 0x35
   730                           
   731  0055                     ldexp@value:	
   732                           ; 3 bytes @ 0x35
   733                           
   734  0055                     log@x:	
   735                           ; 3 bytes @ 0x35
   736                           
   737                           
   738                           ; 3 bytes @ 0x35
   739  0055                     	ds	3
   740  0058                     ??_log:	
   741  0058                     ldexp@newexp:	
   742                           ; 1 bytes @ 0x38
   743                           
   744                           
   745                           ; 2 bytes @ 0x38
   746  0058                     	ds	1
   747  0059                     log@exponent:	
   748                           
   749                           ; 2 bytes @ 0x39
   750  0059                     	ds	1
   751  005A                     ??_ldexp:	
   752                           
   753                           ; 1 bytes @ 0x3A
   754  005A                     	ds	2
   755  005C                     ?_exp:	
   756  005C                     exp@x:	
   757                           ; 3 bytes @ 0x3C
   758                           
   759                           
   760                           ; 3 bytes @ 0x3C
   761  005C                     	ds	3
   762  005F                     ??_exp:	
   763                           
   764                           ; 1 bytes @ 0x3F
   765  005F                     	ds	1
   766  0060                     _exp$647:	
   767                           
   768                           ; 3 bytes @ 0x40
   769  0060                     	ds	3
   770  0063                     exp@exponent:	
   771                           
   772                           ; 2 bytes @ 0x43
   773  0063                     	ds	2
   774  0065                     exp@sign:	
   775                           
   776                           ; 1 bytes @ 0x45
   777  0065                     	ds	1
   778  0066                     ?_pow:	
   779  0066                     pow@x:	
   780                           ; 3 bytes @ 0x46
   781                           
   782                           
   783                           ; 3 bytes @ 0x46
   784  0066                     	ds	3
   785  0069                     pow@y:	
   786                           
   787                           ; 3 bytes @ 0x49
   788  0069                     	ds	3
   789  006C                     ??_pow:	
   790                           
   791                           ; 1 bytes @ 0x4C
   792  006C                     	ds	1
   793  006D                     ??_main:	
   794                           
   795                           ; 1 bytes @ 0x4D
   796  006D                     	ds	2
   797                           
   798                           	psect	maintext
   799  03BF                     __pmaintext:	
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   802 ;;
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 36 in file "JuegoGatoRaton.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  aux2            2   19[BANK1 ] int 
   810 ;;  aux             2   17[BANK1 ] int 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : B00/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       0      10       0       0
   822 ;;      Temps:          0       2       0       0       0
   823 ;;      Totals:         0       2      10       0       0
   824 ;;Total ram usage:       12 bytes
   825 ;; Hardware stack levels required when called:    7
   826 ;; This function calls:
   827 ;;		___awmod
   828 ;;		___awtoft
   829 ;;		___fttol
   830 ;;		_pow
   831 ;;		_rand
   832 ;;		_validar
   833 ;; This function is called by:
   834 ;;		Startup code after reset
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _main
   840  03BF                     _main:	
   841                           
   842                           ;JuegoGatoRaton.c: 37: TRISC = 0;
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   846  03BF  1683               	bsf	3,5	;RP0=1, select bank1
   847  03C0  1303               	bcf	3,6	;RP1=0, select bank1
   848  03C1  0187               	clrf	7	;volatile
   849                           
   850                           ;JuegoGatoRaton.c: 38: PORTC = 1;
   851  03C2  3001               	movlw	1
   852  03C3  1283               	bcf	3,5	;RP0=0, select bank0
   853  03C4  1303               	bcf	3,6	;RP1=0, select bank0
   854  03C5  0087               	movwf	7	;volatile
   855                           
   856                           ;JuegoGatoRaton.c: 39: TRISB = 0xFF;
   857  03C6  30FF               	movlw	255
   858  03C7  1683               	bsf	3,5	;RP0=1, select bank1
   859  03C8  1303               	bcf	3,6	;RP1=0, select bank1
   860  03C9  0086               	movwf	6	;volatile
   861                           
   862                           ;JuegoGatoRaton.c: 40: ANSEL = 0;
   863  03CA  1683               	bsf	3,5	;RP0=1, select bank3
   864  03CB  1703               	bsf	3,6	;RP1=1, select bank3
   865  03CC  0188               	clrf	8	;volatile
   866                           
   867                           ;JuegoGatoRaton.c: 41: ANSELH = 0;
   868  03CD  0189               	clrf	9	;volatile
   869                           
   870                           ;JuegoGatoRaton.c: 42: TRISD = 0;
   871  03CE  1683               	bsf	3,5	;RP0=1, select bank1
   872  03CF  1303               	bcf	3,6	;RP1=0, select bank1
   873  03D0  0188               	clrf	8	;volatile
   874                           
   875                           ;JuegoGatoRaton.c: 43: PORTD = 0;
   876  03D1  1283               	bcf	3,5	;RP0=0, select bank0
   877  03D2  1303               	bcf	3,6	;RP1=0, select bank0
   878  03D3  0188               	clrf	8	;volatile
   879                           
   880                           ;JuegoGatoRaton.c: 45: INTCONbits.GIE = 1;
   881  03D4  178B               	bsf	11,7	;volatile
   882                           
   883                           ;JuegoGatoRaton.c: 46: INTCONbits.INTE = 1;
   884  03D5  160B               	bsf	11,4	;volatile
   885                           
   886                           ;JuegoGatoRaton.c: 49: INTCONbits.INTF = 0;
   887  03D6  108B               	bcf	11,1	;volatile
   888                           
   889                           ;JuegoGatoRaton.c: 50: int aux;
   890                           ;JuegoGatoRaton.c: 51: int aux2=0;
   891  03D7  1683               	bsf	3,5	;RP0=1, select bank1
   892  03D8  1303               	bcf	3,6	;RP1=0, select bank1
   893  03D9  01B3               	clrf	main@aux2^(0+128)
   894  03DA  01B4               	clrf	(main@aux2+1)^(0+128)
   895  03DB                     l2040:	
   896                           ;JuegoGatoRaton.c: 53: do
   897                           
   898                           ;JuegoGatoRaton.c: 52: while (1){
   899                           
   900                           
   901                           ;JuegoGatoRaton.c: 54: {STATIC = rand()%7;
   902  03DB  3007               	movlw	7
   903  03DC  1283               	bcf	3,5	;RP0=0, select bank0
   904  03DD  1303               	bcf	3,6	;RP1=0, select bank0
   905  03DE  00B4               	movwf	___awmod@divisor
   906  03DF  3000               	movlw	0
   907  03E0  00B5               	movwf	___awmod@divisor+1
   908  03E1  120A  158A  2600  120A  118A  	fcall	_rand
   909  03E6  1283               	bcf	3,5	;RP0=0, select bank0
   910  03E7  1303               	bcf	3,6	;RP1=0, select bank0
   911  03E8  082E               	movf	?_rand+1,w
   912  03E9  00B7               	movwf	___awmod@dividend+1
   913  03EA  082D               	movf	?_rand,w
   914  03EB  00B6               	movwf	___awmod@dividend
   915  03EC  120A  118A  27A8  120A  118A  	fcall	___awmod
   916  03F1  1283               	bcf	3,5	;RP0=0, select bank0
   917  03F2  1303               	bcf	3,6	;RP1=0, select bank0
   918  03F3  0835               	movf	?___awmod+1,w
   919  03F4  1683               	bsf	3,5	;RP0=1, select bank1
   920  03F5  1303               	bcf	3,6	;RP1=0, select bank1
   921  03F6  00BC               	movwf	(_STATIC+1)^(0+128)
   922  03F7  1283               	bcf	3,5	;RP0=0, select bank0
   923  03F8  1303               	bcf	3,6	;RP1=0, select bank0
   924  03F9  0834               	movf	?___awmod,w
   925  03FA  1683               	bsf	3,5	;RP0=1, select bank1
   926  03FB  1303               	bcf	3,6	;RP1=0, select bank1
   927  03FC  00BB               	movwf	_STATIC^(0+128)
   928                           
   929                           ;JuegoGatoRaton.c: 55: STATIC = pow(2, STATIC);
   930  03FD  083C               	movf	(_STATIC+1)^(0+128),w
   931  03FE  1283               	bcf	3,5	;RP0=0, select bank0
   932  03FF  1303               	bcf	3,6	;RP1=0, select bank0
   933  0400  00A9               	movwf	___awtoft@c+1
   934  0401  1683               	bsf	3,5	;RP0=1, select bank1
   935  0402  1303               	bcf	3,6	;RP1=0, select bank1
   936  0403  083B               	movf	_STATIC^(0+128),w
   937  0404  1283               	bcf	3,5	;RP0=0, select bank0
   938  0405  1303               	bcf	3,6	;RP1=0, select bank0
   939  0406  00A8               	movwf	___awtoft@c
   940  0407  120A  158A  2361  120A  118A  	fcall	___awtoft
   941  040C  1283               	bcf	3,5	;RP0=0, select bank0
   942  040D  1303               	bcf	3,6	;RP1=0, select bank0
   943  040E  0828               	movf	?___awtoft,w
   944  040F  1683               	bsf	3,5	;RP0=1, select bank1
   945  0410  1303               	bcf	3,6	;RP1=0, select bank1
   946  0411  00AB               	movwf	_main$643^(0+128)
   947  0412  1283               	bcf	3,5	;RP0=0, select bank0
   948  0413  1303               	bcf	3,6	;RP1=0, select bank0
   949  0414  0829               	movf	?___awtoft+1,w
   950  0415  1683               	bsf	3,5	;RP0=1, select bank1
   951  0416  1303               	bcf	3,6	;RP1=0, select bank1
   952  0417  00AC               	movwf	(_main$643+1)^(0+128)
   953  0418  1283               	bcf	3,5	;RP0=0, select bank0
   954  0419  1303               	bcf	3,6	;RP1=0, select bank0
   955  041A  082A               	movf	?___awtoft+2,w
   956  041B  1683               	bsf	3,5	;RP0=1, select bank1
   957  041C  1303               	bcf	3,6	;RP1=0, select bank1
   958  041D  00AD               	movwf	(_main$643+2)^(0+128)
   959                           
   960                           ;JuegoGatoRaton.c: 55: STATIC = pow(2, STATIC);
   961  041E  082B               	movf	_main$643^(0+128),w
   962  041F  1283               	bcf	3,5	;RP0=0, select bank0
   963  0420  1303               	bcf	3,6	;RP1=0, select bank0
   964  0421  00E9               	movwf	pow@y
   965  0422  1683               	bsf	3,5	;RP0=1, select bank1
   966  0423  1303               	bcf	3,6	;RP1=0, select bank1
   967  0424  082C               	movf	(_main$643+1)^(0+128),w
   968  0425  1283               	bcf	3,5	;RP0=0, select bank0
   969  0426  1303               	bcf	3,6	;RP1=0, select bank0
   970  0427  00EA               	movwf	pow@y+1
   971  0428  1683               	bsf	3,5	;RP0=1, select bank1
   972  0429  1303               	bcf	3,6	;RP1=0, select bank1
   973  042A  082D               	movf	(_main$643+2)^(0+128),w
   974  042B  1283               	bcf	3,5	;RP0=0, select bank0
   975  042C  1303               	bcf	3,6	;RP1=0, select bank0
   976  042D  00EB               	movwf	pow@y+2
   977  042E  3000               	movlw	0
   978  042F  00E6               	movwf	pow@x
   979  0430  3000               	movlw	0
   980  0431  00E7               	movwf	pow@x+1
   981  0432  3040               	movlw	64
   982  0433  00E8               	movwf	pow@x+2
   983  0434  120A  118A  2029  120A  118A  	fcall	_pow
   984  0439  1283               	bcf	3,5	;RP0=0, select bank0
   985  043A  1303               	bcf	3,6	;RP1=0, select bank0
   986  043B  0866               	movf	?_pow,w
   987  043C  1683               	bsf	3,5	;RP0=1, select bank1
   988  043D  1303               	bcf	3,6	;RP1=0, select bank1
   989  043E  00AE               	movwf	_main$644^(0+128)
   990  043F  1283               	bcf	3,5	;RP0=0, select bank0
   991  0440  1303               	bcf	3,6	;RP1=0, select bank0
   992  0441  0867               	movf	?_pow+1,w
   993  0442  1683               	bsf	3,5	;RP0=1, select bank1
   994  0443  1303               	bcf	3,6	;RP1=0, select bank1
   995  0444  00AF               	movwf	(_main$644+1)^(0+128)
   996  0445  1283               	bcf	3,5	;RP0=0, select bank0
   997  0446  1303               	bcf	3,6	;RP1=0, select bank0
   998  0447  0868               	movf	?_pow+2,w
   999  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1000  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1001  044A  00B0               	movwf	(_main$644+2)^(0+128)
  1002                           
  1003                           ;JuegoGatoRaton.c: 55: STATIC = pow(2, STATIC);
  1004  044B  082E               	movf	_main$644^(0+128),w
  1005  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1006  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1007  044E  00AE               	movwf	___fttol@f1
  1008  044F  1683               	bsf	3,5	;RP0=1, select bank1
  1009  0450  1303               	bcf	3,6	;RP1=0, select bank1
  1010  0451  082F               	movf	(_main$644+1)^(0+128),w
  1011  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0454  00AF               	movwf	___fttol@f1+1
  1014  0455  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0456  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0457  0830               	movf	(_main$644+2)^(0+128),w
  1017  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1019  045A  00B0               	movwf	___fttol@f1+2
  1020  045B  120A  158A  2772  120A  118A  	fcall	___fttol
  1021  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0462  082F               	movf	?___fttol+1,w
  1024  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0465  00BC               	movwf	(_STATIC+1)^(0+128)
  1027  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0468  082E               	movf	?___fttol,w
  1030  0469  1683               	bsf	3,5	;RP0=1, select bank1
  1031  046A  1303               	bcf	3,6	;RP1=0, select bank1
  1032  046B  00BB               	movwf	_STATIC^(0+128)
  1033                           
  1034                           ;JuegoGatoRaton.c: 56: }while(STATIC == DINAMIC);
  1035  046C  083A               	movf	(_DINAMIC+1)^(0+128),w
  1036  046D  063C               	xorwf	(_STATIC+1)^(0+128),w
  1037  046E  1D03               	skipz
  1038  046F  2C72               	goto	u2835
  1039  0470  0839               	movf	_DINAMIC^(0+128),w
  1040  0471  063B               	xorwf	_STATIC^(0+128),w
  1041  0472                     u2835:	
  1042  0472  1903               	skipnz
  1043  0473  2BDB               	goto	l2040
  1044                           
  1045                           ;JuegoGatoRaton.c: 57: aux = 0;
  1046  0474  01B1               	clrf	main@aux^(0+128)
  1047  0475  01B2               	clrf	(main@aux+1)^(0+128)
  1048  0476                     l2068:	
  1049                           ;JuegoGatoRaton.c: 58: while(aux<5){
  1050                           
  1051  0476  0832               	movf	(main@aux+1)^(0+128),w
  1052  0477  3A80               	xorlw	128
  1053  0478  00FF               	movwf	127
  1054  0479  3080               	movlw	128
  1055  047A  027F               	subwf	127,w
  1056  047B  1D03               	skipz
  1057  047C  2C7F               	goto	u2845
  1058  047D  3005               	movlw	5
  1059  047E  0231               	subwf	main@aux^(0+128),w
  1060  047F                     u2845:	
  1061  047F  1803               	btfsc	3,0
  1062  0480  2BDB               	goto	l2040
  1063                           
  1064                           ;JuegoGatoRaton.c: 59: validar();
  1065  0481  120A  158A  2386  120A  118A  	fcall	_validar
  1066                           
  1067                           ;JuegoGatoRaton.c: 60: _delay((unsigned long)((50)*(4000000/4000.0)));
  1068  0486  3041               	movlw	65
  1069  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0489  00EE               	movwf	??_main+1
  1072  048A  30ED               	movlw	237
  1073  048B  00ED               	movwf	??_main
  1074  048C                     u2857:	
  1075  048C  0BED               	decfsz	??_main,f
  1076  048D  2C8C               	goto	u2857
  1077  048E  0BEE               	decfsz	??_main+1,f
  1078  048F  2C8C               	goto	u2857
  1079  0490  2C91               	nop2
  1080                           
  1081                           ;JuegoGatoRaton.c: 61: aux2 = STATIC;
  1082  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0493  083C               	movf	(_STATIC+1)^(0+128),w
  1085  0494  00B4               	movwf	(main@aux2+1)^(0+128)
  1086  0495  083B               	movf	_STATIC^(0+128),w
  1087  0496  00B3               	movwf	main@aux2^(0+128)
  1088                           
  1089                           ;JuegoGatoRaton.c: 62: STATIC = 0;
  1090  0497  01BB               	clrf	_STATIC^(0+128)
  1091  0498  01BC               	clrf	(_STATIC+1)^(0+128)
  1092                           
  1093                           ;JuegoGatoRaton.c: 63: validar();
  1094  0499  120A  158A  2386  120A  118A  	fcall	_validar
  1095                           
  1096                           ;JuegoGatoRaton.c: 64: _delay((unsigned long)((50)*(4000000/4000.0)));
  1097  049E  3041               	movlw	65
  1098  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1099  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1100  04A1  00EE               	movwf	??_main+1
  1101  04A2  30ED               	movlw	237
  1102  04A3  00ED               	movwf	??_main
  1103  04A4                     u2867:	
  1104  04A4  0BED               	decfsz	??_main,f
  1105  04A5  2CA4               	goto	u2867
  1106  04A6  0BEE               	decfsz	??_main+1,f
  1107  04A7  2CA4               	goto	u2867
  1108  04A8  2CA9               	nop2
  1109                           
  1110                           ;JuegoGatoRaton.c: 65: STATIC = aux2;
  1111  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1112  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1113  04AB  0834               	movf	(main@aux2+1)^(0+128),w
  1114  04AC  00BC               	movwf	(_STATIC+1)^(0+128)
  1115  04AD  0833               	movf	main@aux2^(0+128),w
  1116  04AE  00BB               	movwf	_STATIC^(0+128)
  1117                           
  1118                           ;JuegoGatoRaton.c: 66: aux++;
  1119  04AF  3001               	movlw	1
  1120  04B0  07B1               	addwf	main@aux^(0+128),f
  1121  04B1  1803               	skipnc
  1122  04B2  0AB2               	incf	(main@aux+1)^(0+128),f
  1123  04B3  3000               	movlw	0
  1124  04B4  07B2               	addwf	(main@aux+1)^(0+128),f
  1125  04B5  2C76               	goto	l2068
  1126  04B6                     __end_of_main:	
  1127                           
  1128                           	psect	text1
  1129  0B86                     __ptext1:	
  1130 ;; *************** function _validar *****************
  1131 ;; Defined at:
  1132 ;;		line 26 in file "JuegoGatoRaton.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       3       0       0       0
  1149 ;;      Totals:         0       3       0       0       0
  1150 ;;Total ram usage:        3 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _validar
  1162  0B86                     _validar:	
  1163                           
  1164                           ;JuegoGatoRaton.c: 27: if(STATIC==DINAMIC){
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _validar: [wreg+status,2+status,0]
  1168  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  1169  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  1170  0B88  083A               	movf	(_DINAMIC+1)^(0+128),w
  1171  0B89  063C               	xorwf	(_STATIC+1)^(0+128),w
  1172  0B8A  1D03               	skipz
  1173  0B8B  2B8E               	goto	u2505
  1174  0B8C  0839               	movf	_DINAMIC^(0+128),w
  1175  0B8D  063B               	xorwf	_STATIC^(0+128),w
  1176  0B8E                     u2505:	
  1177  0B8E  1D03               	skipz
  1178  0B8F  2BA7               	goto	l1842
  1179                           
  1180                           ;JuegoGatoRaton.c: 28: PORTC = STATIC;
  1181  0B90  083B               	movf	_STATIC^(0+128),w
  1182  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0B93  0087               	movwf	7	;volatile
  1185                           
  1186                           ;JuegoGatoRaton.c: 29: PORTDbits.RD0 = 1;
  1187  0B94  1408               	bsf	8,0	;volatile
  1188                           
  1189                           ;JuegoGatoRaton.c: 30: _delay((unsigned long)((3000)*(4000000/4000.0)));
  1190  0B95  3010               	movlw	16
  1191  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0B98  00A2               	movwf	??_validar+2
  1194  0B99  3039               	movlw	57
  1195  0B9A  00A1               	movwf	??_validar+1
  1196  0B9B  300D               	movlw	13
  1197  0B9C  00A0               	movwf	??_validar
  1198  0B9D                     u2877:	
  1199  0B9D  0BA0               	decfsz	??_validar,f
  1200  0B9E  2B9D               	goto	u2877
  1201  0B9F  0BA1               	decfsz	??_validar+1,f
  1202  0BA0  2B9D               	goto	u2877
  1203  0BA1  0BA2               	decfsz	??_validar+2,f
  1204  0BA2  2B9D               	goto	u2877
  1205                           
  1206                           ;JuegoGatoRaton.c: 31: PORTDbits.RD0 = 0;
  1207  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0BA5  1008               	bcf	8,0	;volatile
  1210                           
  1211                           ;JuegoGatoRaton.c: 32: }
  1212  0BA6  0008               	return
  1213  0BA7                     l1842:	
  1214                           
  1215                           ;JuegoGatoRaton.c: 33: else
  1216                           ;JuegoGatoRaton.c: 34: PORTC = STATIC + DINAMIC;
  1217  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  1218  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  1219  0BA9  0839               	movf	_DINAMIC^(0+128),w
  1220  0BAA  073B               	addwf	_STATIC^(0+128),w
  1221  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0BAD  0087               	movwf	7	;volatile
  1224  0BAE  0008               	return
  1225  0BAF                     __end_of_validar:	
  1226                           
  1227                           	psect	text2
  1228  0E00                     __ptext2:	
  1229 ;; *************** function _rand *****************
  1230 ;; Defined at:
  1231 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2   13[BANK0 ] int 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0, pclath, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       2       0       0       0
  1246 ;;      Locals:         0       0       0       0       0
  1247 ;;      Temps:          0       5       0       0       0
  1248 ;;      Totals:         0       7       0       0       0
  1249 ;;Total ram usage:        7 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    3
  1252 ;; This function calls:
  1253 ;;		___lmul
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _rand
  1261  0E00                     _rand:	
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1265  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0E02  0838               	movf	(_randx+3)^(0+128),w
  1268  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0E05  00A3               	movwf	___lmul@multiplier+3
  1271  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  1272  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  1273  0E08  0837               	movf	(_randx+2)^(0+128),w
  1274  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0E0B  00A2               	movwf	___lmul@multiplier+2
  1277  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  1279  0E0E  0836               	movf	(_randx+1)^(0+128),w
  1280  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0E11  00A1               	movwf	___lmul@multiplier+1
  1283  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  1284  0E13  1303               	bcf	3,6	;RP1=0, select bank1
  1285  0E14  0835               	movf	_randx^(0+128),w
  1286  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0E17  00A0               	movwf	___lmul@multiplier
  1289  0E18  3041               	movlw	65
  1290  0E19  00A7               	movwf	___lmul@multiplicand+3
  1291  0E1A  30C6               	movlw	198
  1292  0E1B  00A6               	movwf	___lmul@multiplicand+2
  1293  0E1C  304E               	movlw	78
  1294  0E1D  00A5               	movwf	___lmul@multiplicand+1
  1295  0E1E  306D               	movlw	109
  1296  0E1F  00A4               	movwf	___lmul@multiplicand
  1297  0E20  120A  158A  2415  120A  158A  	fcall	___lmul
  1298  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0E27  0823               	movf	?___lmul+3,w
  1301  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0E2A  00B8               	movwf	(_randx+3)^(0+128)
  1304  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0E2D  0822               	movf	?___lmul+2,w
  1307  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  1308  0E2F  1303               	bcf	3,6	;RP1=0, select bank1
  1309  0E30  00B7               	movwf	(_randx+2)^(0+128)
  1310  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0E33  0821               	movf	?___lmul+1,w
  1313  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0E35  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0E36  00B6               	movwf	(_randx+1)^(0+128)
  1316  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0E39  0820               	movf	?___lmul,w
  1319  0E3A  1683               	bsf	3,5	;RP0=1, select bank1
  1320  0E3B  1303               	bcf	3,6	;RP1=0, select bank1
  1321  0E3C  00B5               	movwf	_randx^(0+128)
  1322  0E3D  3039               	movlw	57
  1323  0E3E  07B5               	addwf	_randx^(0+128),f
  1324  0E3F  3030               	movlw	48
  1325  0E40  1803               	skipnc
  1326  0E41  3031               	movlw	49
  1327  0E42  07B6               	addwf	(_randx+1)^(0+128),f
  1328  0E43  3000               	movlw	0
  1329  0E44  1803               	skipnc
  1330  0E45  3001               	movlw	1
  1331  0E46  07B7               	addwf	(_randx+2)^(0+128),f
  1332  0E47  3000               	movlw	0
  1333  0E48  1803               	skipnc
  1334  0E49  3001               	movlw	1
  1335  0E4A  07B8               	addwf	(_randx+3)^(0+128),f
  1336  0E4B  0835               	movf	_randx^(0+128),w
  1337  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0E4E  00AF               	movwf	??_rand
  1340  0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0E50  1303               	bcf	3,6	;RP1=0, select bank1
  1342  0E51  0836               	movf	(_randx+1)^(0+128),w
  1343  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0E54  00B0               	movwf	??_rand+1
  1346  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0E57  0837               	movf	(_randx+2)^(0+128),w
  1349  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0E5A  00B1               	movwf	??_rand+2
  1352  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  1353  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  1354  0E5D  0838               	movf	(_randx+3)^(0+128),w
  1355  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0E60  00B2               	movwf	??_rand+3
  1358  0E61  3010               	movlw	16
  1359  0E62  00B3               	movwf	??_rand+4
  1360  0E63                     u2515:	
  1361  0E63  0D32               	rlf	??_rand+3,w
  1362  0E64  0CB2               	rrf	??_rand+3,f
  1363  0E65  0CB1               	rrf	??_rand+2,f
  1364  0E66  0CB0               	rrf	??_rand+1,f
  1365  0E67  0CAF               	rrf	??_rand,f
  1366  0E68  0BB3               	decfsz	??_rand+4,f
  1367  0E69  2E63               	goto	u2515
  1368  0E6A  30FF               	movlw	255
  1369  0E6B  052F               	andwf	??_rand,w
  1370  0E6C  00AD               	movwf	?_rand
  1371  0E6D  307F               	movlw	127
  1372  0E6E  0530               	andwf	??_rand+1,w
  1373  0E6F  00AE               	movwf	?_rand+1
  1374  0E70  0008               	return
  1375  0E71                     __end_of_rand:	
  1376                           
  1377                           	psect	text3
  1378  0C15                     __ptext3:	
  1379 ;; *************** function ___lmul *****************
  1380 ;; Defined at:
  1381 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1384 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  product         4    9[BANK0 ] unsigned long 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  4    0[BANK0 ] unsigned long 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       8       0       0       0
  1397 ;;      Locals:         0       4       0       0       0
  1398 ;;      Temps:          0       1       0       0       0
  1399 ;;      Totals:         0      13       0       0       0
  1400 ;;Total ram usage:       13 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_rand
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function ___lmul
  1412  0C15                     ___lmul:	
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1416  0C15  3000               	movlw	0
  1417  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0C18  00AC               	movwf	___lmul@product+3
  1420  0C19  3000               	movlw	0
  1421  0C1A  00AB               	movwf	___lmul@product+2
  1422  0C1B  3000               	movlw	0
  1423  0C1C  00AA               	movwf	___lmul@product+1
  1424  0C1D  3000               	movlw	0
  1425  0C1E  00A9               	movwf	___lmul@product
  1426  0C1F                     l1744:	
  1427  0C1F  1C20               	btfss	___lmul@multiplier,0
  1428  0C20  2C35               	goto	l1748
  1429  0C21  0824               	movf	___lmul@multiplicand,w
  1430  0C22  07A9               	addwf	___lmul@product,f
  1431  0C23  0825               	movf	___lmul@multiplicand+1,w
  1432  0C24  1103               	clrz
  1433  0C25  1803               	skipnc
  1434  0C26  3E01               	addlw	1
  1435  0C27  1D03               	btfss	3,2
  1436  0C28  07AA               	addwf	___lmul@product+1,f
  1437  0C29  0826               	movf	___lmul@multiplicand+2,w
  1438  0C2A  1103               	clrz
  1439  0C2B  1803               	skipnc
  1440  0C2C  3E01               	addlw	1
  1441  0C2D  1D03               	btfss	3,2
  1442  0C2E  07AB               	addwf	___lmul@product+2,f
  1443  0C2F  0827               	movf	___lmul@multiplicand+3,w
  1444  0C30  1103               	clrz
  1445  0C31  1803               	skipnc
  1446  0C32  3E01               	addlw	1
  1447  0C33  1D03               	btfss	3,2
  1448  0C34  07AC               	addwf	___lmul@product+3,f
  1449  0C35                     l1748:	
  1450  0C35  3001               	movlw	1
  1451  0C36  00A8               	movwf	??___lmul
  1452  0C37                     u2355:	
  1453  0C37  1003               	clrc
  1454  0C38  0DA4               	rlf	___lmul@multiplicand,f
  1455  0C39  0DA5               	rlf	___lmul@multiplicand+1,f
  1456  0C3A  0DA6               	rlf	___lmul@multiplicand+2,f
  1457  0C3B  0DA7               	rlf	___lmul@multiplicand+3,f
  1458  0C3C  0BA8               	decfsz	??___lmul,f
  1459  0C3D  2C37               	goto	u2355
  1460  0C3E  3001               	movlw	1
  1461  0C3F                     u2365:	
  1462  0C3F  1003               	clrc
  1463  0C40  0CA3               	rrf	___lmul@multiplier+3,f
  1464  0C41  0CA2               	rrf	___lmul@multiplier+2,f
  1465  0C42  0CA1               	rrf	___lmul@multiplier+1,f
  1466  0C43  0CA0               	rrf	___lmul@multiplier,f
  1467  0C44  3EFF               	addlw	-1
  1468  0C45  1D03               	skipz
  1469  0C46  2C3F               	goto	u2365
  1470  0C47  0823               	movf	___lmul@multiplier+3,w
  1471  0C48  0422               	iorwf	___lmul@multiplier+2,w
  1472  0C49  0421               	iorwf	___lmul@multiplier+1,w
  1473  0C4A  0420               	iorwf	___lmul@multiplier,w
  1474  0C4B  1D03               	skipz
  1475  0C4C  2C1F               	goto	l1744
  1476  0C4D  082C               	movf	___lmul@product+3,w
  1477  0C4E  00A3               	movwf	?___lmul+3
  1478  0C4F  082B               	movf	___lmul@product+2,w
  1479  0C50  00A2               	movwf	?___lmul+2
  1480  0C51  082A               	movf	___lmul@product+1,w
  1481  0C52  00A1               	movwf	?___lmul+1
  1482  0C53  0829               	movf	___lmul@product,w
  1483  0C54  00A0               	movwf	?___lmul
  1484  0C55  0008               	return
  1485  0C56                     __end_of___lmul:	
  1486                           
  1487                           	psect	text4
  1488  0029                     __ptext4:	
  1489 ;; *************** function _pow *****************
  1490 ;; Defined at:
  1491 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  x               3   70[BANK0 ] unsigned long 
  1494 ;;  y               3   73[BANK0 ] unsigned long 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  yi              4    7[BANK1 ] unsigned long 
  1497 ;;  sign            1    6[BANK1 ] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  3   70[BANK0 ] unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       6       0       0       0
  1508 ;;      Locals:         0       0      11       0       0
  1509 ;;      Temps:          0       1       0       0       0
  1510 ;;      Totals:         0       7      11       0       0
  1511 ;;Total ram usage:       18 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    6
  1514 ;; This function calls:
  1515 ;;		___ftge
  1516 ;;		___ftmul
  1517 ;;		___ftneg
  1518 ;;		___fttol
  1519 ;;		___lltoft
  1520 ;;		_exp
  1521 ;;		_log
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _pow
  1529  0029                     _pow:	
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1533  0029  1683               	bsf	3,5	;RP0=1, select bank1
  1534  002A  1303               	bcf	3,6	;RP1=0, select bank1
  1535  002B  01A6               	clrf	pow@sign^(0+128)
  1536  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1537  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1538  002E  0868               	movf	pow@x+2,w
  1539  002F  0467               	iorwf	pow@x+1,w
  1540  0030  0466               	iorwf	pow@x,w
  1541  0031  1D03               	skipz
  1542  0032  2855               	goto	l1862
  1543  0033  3000               	movlw	0
  1544  0034  00A0               	movwf	___ftge@ff1
  1545  0035  3000               	movlw	0
  1546  0036  00A1               	movwf	___ftge@ff1+1
  1547  0037  3000               	movlw	0
  1548  0038  00A2               	movwf	___ftge@ff1+2
  1549  0039  0869               	movf	pow@y,w
  1550  003A  00A3               	movwf	___ftge@ff2
  1551  003B  086A               	movf	pow@y+1,w
  1552  003C  00A4               	movwf	___ftge@ff2+1
  1553  003D  086B               	movf	pow@y+2,w
  1554  003E  00A5               	movwf	___ftge@ff2+2
  1555  003F  120A  158A  2533  120A  118A  	fcall	___ftge
  1556  0044  1C03               	btfss	3,0
  1557  0045  284C               	goto	l503
  1558  0046  3021               	movlw	33
  1559  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1560  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1561  0049  00BD               	movwf	_errno^(0+128)
  1562  004A  3000               	movlw	0
  1563  004B  00BE               	movwf	(_errno^(0+128)+1)
  1564  004C                     l503:	
  1565  004C  3000               	movlw	0
  1566  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1567  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1568  004F  00E6               	movwf	?_pow
  1569  0050  3000               	movlw	0
  1570  0051  00E7               	movwf	?_pow+1
  1571  0052  3000               	movlw	0
  1572  0053  00E8               	movwf	?_pow+2
  1573  0054  0008               	return
  1574  0055                     l1862:	
  1575  0055  086B               	movf	pow@y+2,w
  1576  0056  046A               	iorwf	pow@y+1,w
  1577  0057  0469               	iorwf	pow@y,w
  1578  0058  1D03               	skipz
  1579  0059  2861               	goto	l1868
  1580  005A  3000               	movlw	0
  1581  005B  00E6               	movwf	?_pow
  1582  005C  3080               	movlw	128
  1583  005D  00E7               	movwf	?_pow+1
  1584  005E  303F               	movlw	63
  1585  005F  00E8               	movwf	?_pow+2
  1586  0060  0008               	return
  1587  0061                     l1868:	
  1588  0061  0866               	movf	pow@x,w
  1589  0062  00A0               	movwf	___ftge@ff1
  1590  0063  0867               	movf	pow@x+1,w
  1591  0064  00A1               	movwf	___ftge@ff1+1
  1592  0065  0868               	movf	pow@x+2,w
  1593  0066  00A2               	movwf	___ftge@ff1+2
  1594  0067  3000               	movlw	0
  1595  0068  00A3               	movwf	___ftge@ff2
  1596  0069  3000               	movlw	0
  1597  006A  00A4               	movwf	___ftge@ff2+1
  1598  006B  3000               	movlw	0
  1599  006C  00A5               	movwf	___ftge@ff2+2
  1600  006D  120A  158A  2533  120A  118A  	fcall	___ftge
  1601  0072  1803               	btfsc	3,0
  1602  0073  28F1               	goto	l1880
  1603  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0076  0869               	movf	pow@y,w
  1606  0077  00AE               	movwf	___fttol@f1
  1607  0078  086A               	movf	pow@y+1,w
  1608  0079  00AF               	movwf	___fttol@f1+1
  1609  007A  086B               	movf	pow@y+2,w
  1610  007B  00B0               	movwf	___fttol@f1+2
  1611  007C  120A  158A  2772  120A  118A  	fcall	___fttol
  1612  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0083  0831               	movf	?___fttol+3,w
  1615  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1616  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1617  0086  00AA               	movwf	(pow@yi+3)^(0+128)
  1618  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0089  0830               	movf	?___fttol+2,w
  1621  008A  1683               	bsf	3,5	;RP0=1, select bank1
  1622  008B  1303               	bcf	3,6	;RP1=0, select bank1
  1623  008C  00A9               	movwf	(pow@yi+2)^(0+128)
  1624  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1625  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1626  008F  082F               	movf	?___fttol+1,w
  1627  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0092  00A8               	movwf	(pow@yi+1)^(0+128)
  1630  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0095  082E               	movf	?___fttol,w
  1633  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0098  00A7               	movwf	pow@yi^(0+128)
  1636  0099  082A               	movf	(pow@yi+3)^(0+128),w
  1637  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1638  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1639  009C  00AB               	movwf	___lltoft@c+3
  1640  009D  1683               	bsf	3,5	;RP0=1, select bank1
  1641  009E  1303               	bcf	3,6	;RP1=0, select bank1
  1642  009F  0829               	movf	(pow@yi+2)^(0+128),w
  1643  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1644  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1645  00A2  00AA               	movwf	___lltoft@c+2
  1646  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1647  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1648  00A5  0828               	movf	(pow@yi+1)^(0+128),w
  1649  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1650  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1651  00A8  00A9               	movwf	___lltoft@c+1
  1652  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1653  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1654  00AB  0827               	movf	pow@yi^(0+128),w
  1655  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1656  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1657  00AE  00A8               	movwf	___lltoft@c
  1658  00AF  120A  158A  23AF  120A  118A  	fcall	___lltoft
  1659  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1660  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1661  00B6  086B               	movf	pow@y+2,w
  1662  00B7  062A               	xorwf	?___lltoft+2,w
  1663  00B8  1D03               	skipz
  1664  00B9  28C0               	goto	u2565
  1665  00BA  086A               	movf	pow@y+1,w
  1666  00BB  0629               	xorwf	?___lltoft+1,w
  1667  00BC  1D03               	skipz
  1668  00BD  28C0               	goto	u2565
  1669  00BE  0869               	movf	pow@y,w
  1670  00BF  0628               	xorwf	?___lltoft,w
  1671  00C0                     u2565:	
  1672  00C0  1903               	skipnz
  1673  00C1  28D1               	goto	l1876
  1674  00C2  3021               	movlw	33
  1675  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1676  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1677  00C5  00BD               	movwf	_errno^(0+128)
  1678  00C6  3000               	movlw	0
  1679  00C7  00BE               	movwf	(_errno^(0+128)+1)
  1680  00C8  3000               	movlw	0
  1681  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1682  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1683  00CB  00E6               	movwf	?_pow
  1684  00CC  3000               	movlw	0
  1685  00CD  00E7               	movwf	?_pow+1
  1686  00CE  3000               	movlw	0
  1687  00CF  00E8               	movwf	?_pow+2
  1688  00D0  0008               	return
  1689  00D1                     l1876:	
  1690  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1691  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1692  00D3  0827               	movf	pow@yi^(0+128),w
  1693  00D4  3901               	andlw	1
  1694  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1695  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1696  00D7  00EC               	movwf	??_pow
  1697  00D8  086C               	movf	??_pow,w
  1698  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1699  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1700  00DB  00A6               	movwf	pow@sign^(0+128)
  1701  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1702  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1703  00DE  0866               	movf	pow@x,w
  1704  00DF  00A0               	movwf	___ftneg@f1
  1705  00E0  0867               	movf	pow@x+1,w
  1706  00E1  00A1               	movwf	___ftneg@f1+1
  1707  00E2  0868               	movf	pow@x+2,w
  1708  00E3  00A2               	movwf	___ftneg@f1+2
  1709  00E4  120A  118A  27F5  120A  118A  	fcall	___ftneg
  1710  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1711  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1712  00EB  0820               	movf	?___ftneg,w
  1713  00EC  00E6               	movwf	pow@x
  1714  00ED  0821               	movf	?___ftneg+1,w
  1715  00EE  00E7               	movwf	pow@x+1
  1716  00EF  0822               	movf	?___ftneg+2,w
  1717  00F0  00E8               	movwf	pow@x+2
  1718  00F1                     l1880:	
  1719  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1720  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1721  00F3  0866               	movf	pow@x,w
  1722  00F4  00D5               	movwf	log@x
  1723  00F5  0867               	movf	pow@x+1,w
  1724  00F6  00D6               	movwf	log@x+1
  1725  00F7  0868               	movf	pow@x+2,w
  1726  00F8  00D7               	movwf	log@x+2
  1727  00F9  120A  118A  2589  120A  118A  	fcall	_log
  1728  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1729  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0100  0855               	movf	?_log,w
  1731  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0103  00A0               	movwf	_pow$645^(0+128)
  1734  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0106  0856               	movf	?_log+1,w
  1737  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1738  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1739  0109  00A1               	movwf	(_pow$645+1)^(0+128)
  1740  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1741  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1742  010C  0857               	movf	?_log+2,w
  1743  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1744  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1745  010F  00A2               	movwf	(_pow$645+2)^(0+128)
  1746  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0112  0869               	movf	pow@y,w
  1749  0113  00AE               	movwf	___ftmul@f1
  1750  0114  086A               	movf	pow@y+1,w
  1751  0115  00AF               	movwf	___ftmul@f1+1
  1752  0116  086B               	movf	pow@y+2,w
  1753  0117  00B0               	movwf	___ftmul@f1+2
  1754  0118  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0119  1303               	bcf	3,6	;RP1=0, select bank1
  1756  011A  0820               	movf	_pow$645^(0+128),w
  1757  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1758  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1759  011D  00B1               	movwf	___ftmul@f2
  1760  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1761  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0120  0821               	movf	(_pow$645+1)^(0+128),w
  1763  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0123  00B2               	movwf	___ftmul@f2+1
  1766  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1767  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0126  0822               	movf	(_pow$645+2)^(0+128),w
  1769  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0129  00B3               	movwf	___ftmul@f2+2
  1772  012A  120A  118A  24B6  120A  118A  	fcall	___ftmul
  1773  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0131  082E               	movf	?___ftmul,w
  1776  0132  1683               	bsf	3,5	;RP0=1, select bank1
  1777  0133  1303               	bcf	3,6	;RP1=0, select bank1
  1778  0134  00A3               	movwf	_pow$646^(0+128)
  1779  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0137  082F               	movf	?___ftmul+1,w
  1782  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1784  013A  00A4               	movwf	(_pow$646+1)^(0+128)
  1785  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1786  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1787  013D  0830               	movf	?___ftmul+2,w
  1788  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1789  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1790  0140  00A5               	movwf	(_pow$646+2)^(0+128)
  1791  0141  0823               	movf	_pow$646^(0+128),w
  1792  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0144  00DC               	movwf	exp@x
  1795  0145  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0146  1303               	bcf	3,6	;RP1=0, select bank1
  1797  0147  0824               	movf	(_pow$646+1)^(0+128),w
  1798  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1800  014A  00DD               	movwf	exp@x+1
  1801  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1802  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1803  014D  0825               	movf	(_pow$646+2)^(0+128),w
  1804  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1805  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0150  00DE               	movwf	exp@x+2
  1807  0151  120A  118A  2177  120A  118A  	fcall	_exp
  1808  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0158  085C               	movf	?_exp,w
  1811  0159  00E6               	movwf	pow@x
  1812  015A  085D               	movf	?_exp+1,w
  1813  015B  00E7               	movwf	pow@x+1
  1814  015C  085E               	movf	?_exp+2,w
  1815  015D  00E8               	movwf	pow@x+2
  1816  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1817  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1818  0160  0826               	movf	pow@sign^(0+128),w
  1819  0161  1903               	btfsc	3,2
  1820  0162  0008               	return
  1821  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0165  0866               	movf	pow@x,w
  1824  0166  00A0               	movwf	___ftneg@f1
  1825  0167  0867               	movf	pow@x+1,w
  1826  0168  00A1               	movwf	___ftneg@f1+1
  1827  0169  0868               	movf	pow@x+2,w
  1828  016A  00A2               	movwf	___ftneg@f1+2
  1829  016B  120A  118A  27F5   	fcall	___ftneg
  1830  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1831  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0170  0820               	movf	?___ftneg,w
  1833  0171  00E6               	movwf	?_pow
  1834  0172  0821               	movf	?___ftneg+1,w
  1835  0173  00E7               	movwf	?_pow+1
  1836  0174  0822               	movf	?___ftneg+2,w
  1837  0175  00E8               	movwf	?_pow+2
  1838  0176  0008               	return
  1839  0177                     __end_of_pow:	
  1840                           
  1841                           	psect	text5
  1842  0589                     __ptext5:	
  1843 ;; *************** function _log *****************
  1844 ;; Defined at:
  1845 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  x               3   53[BANK0 ] unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  exponent        2   57[BANK0 ] int 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  3   53[BANK0 ] int 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       3       0       0       0
  1860 ;;      Locals:         0       2       0       0       0
  1861 ;;      Temps:          0       1       0       0       0
  1862 ;;      Totals:         0       6       0       0       0
  1863 ;;Total ram usage:        6 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    5
  1866 ;; This function calls:
  1867 ;;		___awtoft
  1868 ;;		___ftadd
  1869 ;;		___ftge
  1870 ;;		___ftmul
  1871 ;;		_eval_poly
  1872 ;;		_frexp
  1873 ;; This function is called by:
  1874 ;;		_pow
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _log
  1880  0589                     _log:	
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1884  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1885  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1886  058B  0855               	movf	log@x,w
  1887  058C  00A0               	movwf	___ftge@ff1
  1888  058D  0856               	movf	log@x+1,w
  1889  058E  00A1               	movwf	___ftge@ff1+1
  1890  058F  0857               	movf	log@x+2,w
  1891  0590  00A2               	movwf	___ftge@ff1+2
  1892  0591  3000               	movlw	0
  1893  0592  00A3               	movwf	___ftge@ff2
  1894  0593  3000               	movlw	0
  1895  0594  00A4               	movwf	___ftge@ff2+1
  1896  0595  3000               	movlw	0
  1897  0596  00A5               	movwf	___ftge@ff2+2
  1898  0597  120A  158A  2533  120A  118A  	fcall	___ftge
  1899  059C  1803               	btfsc	3,0
  1900  059D  2DAD               	goto	l1772
  1901  059E  3021               	movlw	33
  1902  059F  1683               	bsf	3,5	;RP0=1, select bank1
  1903  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1904  05A1  00BD               	movwf	_errno^(0+128)
  1905  05A2  3000               	movlw	0
  1906  05A3  00BE               	movwf	(_errno^(0+128)+1)
  1907  05A4  3000               	movlw	0
  1908  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1909  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1910  05A7  00D5               	movwf	?_log
  1911  05A8  3000               	movlw	0
  1912  05A9  00D6               	movwf	?_log+1
  1913  05AA  3000               	movlw	0
  1914  05AB  00D7               	movwf	?_log+2
  1915  05AC  0008               	return
  1916  05AD                     l1772:	
  1917  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1918  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1919  05AF  0857               	movf	log@x+2,w
  1920  05B0  0456               	iorwf	log@x+1,w
  1921  05B1  0455               	iorwf	log@x,w
  1922  05B2  1D03               	skipz
  1923  05B3  2DC3               	goto	l1778
  1924  05B4  3022               	movlw	34
  1925  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  1926  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  1927  05B7  00BD               	movwf	_errno^(0+128)
  1928  05B8  3000               	movlw	0
  1929  05B9  00BE               	movwf	(_errno^(0+128)+1)
  1930  05BA  3000               	movlw	0
  1931  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1932  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1933  05BD  00D5               	movwf	?_log
  1934  05BE  3000               	movlw	0
  1935  05BF  00D6               	movwf	?_log+1
  1936  05C0  3000               	movlw	0
  1937  05C1  00D7               	movwf	?_log+2
  1938  05C2  0008               	return
  1939  05C3                     l1778:	
  1940  05C3  3000               	movlw	0
  1941  05C4  00BE               	movwf	___ftadd@f1
  1942  05C5  3080               	movlw	128
  1943  05C6  00BF               	movwf	___ftadd@f1+1
  1944  05C7  30BF               	movlw	191
  1945  05C8  00C0               	movwf	___ftadd@f1+2
  1946  05C9  3000               	movlw	0
  1947  05CA  00AE               	movwf	___ftmul@f1
  1948  05CB  3000               	movlw	0
  1949  05CC  00AF               	movwf	___ftmul@f1+1
  1950  05CD  3040               	movlw	64
  1951  05CE  00B0               	movwf	___ftmul@f1+2
  1952  05CF  3059               	movlw	(low (log@exponent| 0))& (0+255)
  1953  05D0  00D8               	movwf	??_log
  1954  05D1  0858               	movf	??_log,w
  1955  05D2  00A3               	movwf	frexp@eptr
  1956  05D3  0855               	movf	log@x,w
  1957  05D4  00A0               	movwf	frexp@value
  1958  05D5  0856               	movf	log@x+1,w
  1959  05D6  00A1               	movwf	frexp@value+1
  1960  05D7  0857               	movf	log@x+2,w
  1961  05D8  00A2               	movwf	frexp@value+2
  1962  05D9  120A  158A  2498  120A  118A  	fcall	_frexp
  1963  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1964  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1965  05E0  0820               	movf	?_frexp,w
  1966  05E1  00B1               	movwf	___ftmul@f2
  1967  05E2  0821               	movf	?_frexp+1,w
  1968  05E3  00B2               	movwf	___ftmul@f2+1
  1969  05E4  0822               	movf	?_frexp+2,w
  1970  05E5  00B3               	movwf	___ftmul@f2+2
  1971  05E6  120A  118A  24B6  120A  118A  	fcall	___ftmul
  1972  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1973  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1974  05ED  082E               	movf	?___ftmul,w
  1975  05EE  00C1               	movwf	___ftadd@f2
  1976  05EF  082F               	movf	?___ftmul+1,w
  1977  05F0  00C2               	movwf	___ftadd@f2+1
  1978  05F1  0830               	movf	?___ftmul+2,w
  1979  05F2  00C3               	movwf	___ftadd@f2+2
  1980  05F3  120A  118A  22B6  120A  118A  	fcall	___ftadd
  1981  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1982  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1983  05FA  083E               	movf	?___ftadd,w
  1984  05FB  00D5               	movwf	log@x
  1985  05FC  083F               	movf	?___ftadd+1,w
  1986  05FD  00D6               	movwf	log@x+1
  1987  05FE  0840               	movf	?___ftadd+2,w
  1988  05FF  00D7               	movwf	log@x+2
  1989  0600  30FF               	movlw	255
  1990  0601  07D9               	addwf	log@exponent,f
  1991  0602  1803               	skipnc
  1992  0603  0ADA               	incf	log@exponent+1,f
  1993  0604  30FF               	movlw	255
  1994  0605  07DA               	addwf	log@exponent+1,f
  1995  0606  0855               	movf	log@x,w
  1996  0607  00CB               	movwf	eval_poly@x
  1997  0608  0856               	movf	log@x+1,w
  1998  0609  00CC               	movwf	eval_poly@x+1
  1999  060A  0857               	movf	log@x+2,w
  2000  060B  00CD               	movwf	eval_poly@x+2
  2001  060C  301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  2002  060D  00D8               	movwf	??_log
  2003  060E  0858               	movf	??_log,w
  2004  060F  00CE               	movwf	eval_poly@d
  2005  0610  3008               	movlw	8
  2006  0611  00CF               	movwf	eval_poly@n
  2007  0612  3000               	movlw	0
  2008  0613  00D0               	movwf	eval_poly@n+1
  2009  0614  120A  158A  2671  120A  118A  	fcall	_eval_poly
  2010  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2011  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2012  061B  084B               	movf	?_eval_poly,w
  2013  061C  00D5               	movwf	log@x
  2014  061D  084C               	movf	?_eval_poly+1,w
  2015  061E  00D6               	movwf	log@x+1
  2016  061F  084D               	movf	?_eval_poly+2,w
  2017  0620  00D7               	movwf	log@x+2
  2018  0621  0855               	movf	log@x,w
  2019  0622  00BE               	movwf	___ftadd@f1
  2020  0623  0856               	movf	log@x+1,w
  2021  0624  00BF               	movwf	___ftadd@f1+1
  2022  0625  0857               	movf	log@x+2,w
  2023  0626  00C0               	movwf	___ftadd@f1+2
  2024  0627  3072               	movlw	114
  2025  0628  00AE               	movwf	___ftmul@f1
  2026  0629  3031               	movlw	49
  2027  062A  00AF               	movwf	___ftmul@f1+1
  2028  062B  303F               	movlw	63
  2029  062C  00B0               	movwf	___ftmul@f1+2
  2030  062D  085A               	movf	log@exponent+1,w
  2031  062E  00A9               	movwf	___awtoft@c+1
  2032  062F  0859               	movf	log@exponent,w
  2033  0630  00A8               	movwf	___awtoft@c
  2034  0631  120A  158A  2361  120A  118A  	fcall	___awtoft
  2035  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0638  0828               	movf	?___awtoft,w
  2038  0639  00B1               	movwf	___ftmul@f2
  2039  063A  0829               	movf	?___awtoft+1,w
  2040  063B  00B2               	movwf	___ftmul@f2+1
  2041  063C  082A               	movf	?___awtoft+2,w
  2042  063D  00B3               	movwf	___ftmul@f2+2
  2043  063E  120A  118A  24B6  120A  118A  	fcall	___ftmul
  2044  0643  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0644  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0645  082E               	movf	?___ftmul,w
  2047  0646  00C1               	movwf	___ftadd@f2
  2048  0647  082F               	movf	?___ftmul+1,w
  2049  0648  00C2               	movwf	___ftadd@f2+1
  2050  0649  0830               	movf	?___ftmul+2,w
  2051  064A  00C3               	movwf	___ftadd@f2+2
  2052  064B  120A  118A  22B6   	fcall	___ftadd
  2053  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2054  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0650  083E               	movf	?___ftadd,w
  2056  0651  00D5               	movwf	?_log
  2057  0652  083F               	movf	?___ftadd+1,w
  2058  0653  00D6               	movwf	?_log+1
  2059  0654  0840               	movf	?___ftadd+2,w
  2060  0655  00D7               	movwf	?_log+2
  2061  0656  0008               	return
  2062  0657                     __end_of_log:	
  2063                           
  2064                           	psect	text6
  2065  0177                     __ptext6:	
  2066 ;; *************** function _exp *****************
  2067 ;; Defined at:
  2068 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  x               3   60[BANK0 ] int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  exponent        2   67[BANK0 ] int 
  2073 ;;  sign            1   69[BANK0 ] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  3   60[BANK0 ] unsigned char 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       3       0       0       0
  2084 ;;      Locals:         0       6       0       0       0
  2085 ;;      Temps:          0       1       0       0       0
  2086 ;;      Totals:         0      10       0       0       0
  2087 ;;Total ram usage:       10 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    5
  2090 ;; This function calls:
  2091 ;;		___awtoft
  2092 ;;		___ftdiv
  2093 ;;		___ftge
  2094 ;;		___ftmul
  2095 ;;		___ftneg
  2096 ;;		___ftsub
  2097 ;;		___fttol
  2098 ;;		_eval_poly
  2099 ;;		_floor
  2100 ;;		_ldexp
  2101 ;; This function is called by:
  2102 ;;		_pow
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _exp
  2108  0177                     _exp:	
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2112  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0179  085E               	movf	exp@x+2,w
  2115  017A  045D               	iorwf	exp@x+1,w
  2116  017B  045C               	iorwf	exp@x,w
  2117  017C  1D03               	skipz
  2118  017D  2985               	goto	l1794
  2119  017E  3000               	movlw	0
  2120  017F  00DC               	movwf	?_exp
  2121  0180  3080               	movlw	128
  2122  0181  00DD               	movwf	?_exp+1
  2123  0182  303F               	movlw	63
  2124  0183  00DE               	movwf	?_exp+2
  2125  0184  0008               	return
  2126  0185                     l1794:	
  2127  0185  3072               	movlw	114
  2128  0186  00A0               	movwf	___ftge@ff1
  2129  0187  3031               	movlw	49
  2130  0188  00A1               	movwf	___ftge@ff1+1
  2131  0189  3044               	movlw	68
  2132  018A  00A2               	movwf	___ftge@ff1+2
  2133  018B  085C               	movf	exp@x,w
  2134  018C  00A3               	movwf	___ftge@ff2
  2135  018D  085D               	movf	exp@x+1,w
  2136  018E  00A4               	movwf	___ftge@ff2+1
  2137  018F  085E               	movf	exp@x+2,w
  2138  0190  00A5               	movwf	___ftge@ff2+2
  2139  0191  120A  158A  2533  120A  118A  	fcall	___ftge
  2140  0196  1803               	btfsc	3,0
  2141  0197  29A7               	goto	l1800
  2142  0198  3022               	movlw	34
  2143  0199  1683               	bsf	3,5	;RP0=1, select bank1
  2144  019A  1303               	bcf	3,6	;RP1=0, select bank1
  2145  019B  00BD               	movwf	_errno^(0+128)
  2146  019C  3000               	movlw	0
  2147  019D  00BE               	movwf	(_errno^(0+128)+1)
  2148  019E  30FF               	movlw	255
  2149  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2150  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2151  01A1  00DC               	movwf	?_exp
  2152  01A2  307F               	movlw	127
  2153  01A3  00DD               	movwf	?_exp+1
  2154  01A4  307F               	movlw	127
  2155  01A5  00DE               	movwf	?_exp+2
  2156  01A6  0008               	return
  2157  01A7                     l1800:	
  2158  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2159  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2160  01A9  085C               	movf	exp@x,w
  2161  01AA  00A0               	movwf	___ftge@ff1
  2162  01AB  085D               	movf	exp@x+1,w
  2163  01AC  00A1               	movwf	___ftge@ff1+1
  2164  01AD  085E               	movf	exp@x+2,w
  2165  01AE  00A2               	movwf	___ftge@ff1+2
  2166  01AF  3049               	movlw	73
  2167  01B0  00A3               	movwf	___ftge@ff2
  2168  01B1  303A               	movlw	58
  2169  01B2  00A4               	movwf	___ftge@ff2+1
  2170  01B3  30C4               	movlw	196
  2171  01B4  00A5               	movwf	___ftge@ff2+2
  2172  01B5  120A  158A  2533  120A  118A  	fcall	___ftge
  2173  01BA  1803               	btfsc	3,0
  2174  01BB  29CB               	goto	l1806
  2175  01BC  3022               	movlw	34
  2176  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2177  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2178  01BF  00BD               	movwf	_errno^(0+128)
  2179  01C0  3000               	movlw	0
  2180  01C1  00BE               	movwf	(_errno^(0+128)+1)
  2181  01C2  3000               	movlw	0
  2182  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2183  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2184  01C5  00DC               	movwf	?_exp
  2185  01C6  3000               	movlw	0
  2186  01C7  00DD               	movwf	?_exp+1
  2187  01C8  3000               	movlw	0
  2188  01C9  00DE               	movwf	?_exp+2
  2189  01CA  0008               	return
  2190  01CB                     l1806:	
  2191  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2192  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2193  01CD  085C               	movf	exp@x,w
  2194  01CE  00A0               	movwf	___ftge@ff1
  2195  01CF  085D               	movf	exp@x+1,w
  2196  01D0  00A1               	movwf	___ftge@ff1+1
  2197  01D1  085E               	movf	exp@x+2,w
  2198  01D2  00A2               	movwf	___ftge@ff1+2
  2199  01D3  3000               	movlw	0
  2200  01D4  00A3               	movwf	___ftge@ff2
  2201  01D5  3000               	movlw	0
  2202  01D6  00A4               	movwf	___ftge@ff2+1
  2203  01D7  3000               	movlw	0
  2204  01D8  00A5               	movwf	___ftge@ff2+2
  2205  01D9  120A  158A  2533  120A  118A  	fcall	___ftge
  2206  01DE  1803               	btfsc	3,0
  2207  01DF  29E2               	goto	u2450
  2208  01E0  3001               	movlw	1
  2209  01E1  29E3               	goto	u2460
  2210  01E2                     u2450:	
  2211  01E2  3000               	movlw	0
  2212  01E3                     u2460:	
  2213  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2214  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2215  01E5  00DF               	movwf	??_exp
  2216  01E6  085F               	movf	??_exp,w
  2217  01E7  00E5               	movwf	exp@sign
  2218  01E8  0865               	movf	exp@sign,w
  2219  01E9  1903               	btfsc	3,2
  2220  01EA  29FE               	goto	l1812
  2221  01EB  085C               	movf	exp@x,w
  2222  01EC  00A0               	movwf	___ftneg@f1
  2223  01ED  085D               	movf	exp@x+1,w
  2224  01EE  00A1               	movwf	___ftneg@f1+1
  2225  01EF  085E               	movf	exp@x+2,w
  2226  01F0  00A2               	movwf	___ftneg@f1+2
  2227  01F1  120A  118A  27F5  120A  118A  	fcall	___ftneg
  2228  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2229  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2230  01F8  0820               	movf	?___ftneg,w
  2231  01F9  00DC               	movwf	exp@x
  2232  01FA  0821               	movf	?___ftneg+1,w
  2233  01FB  00DD               	movwf	exp@x+1
  2234  01FC  0822               	movf	?___ftneg+2,w
  2235  01FD  00DE               	movwf	exp@x+2
  2236  01FE                     l1812:	
  2237  01FE  30AA               	movlw	170
  2238  01FF  00AE               	movwf	___ftmul@f1
  2239  0200  30B8               	movlw	184
  2240  0201  00AF               	movwf	___ftmul@f1+1
  2241  0202  303F               	movlw	63
  2242  0203  00B0               	movwf	___ftmul@f1+2
  2243  0204  085C               	movf	exp@x,w
  2244  0205  00B1               	movwf	___ftmul@f2
  2245  0206  085D               	movf	exp@x+1,w
  2246  0207  00B2               	movwf	___ftmul@f2+1
  2247  0208  085E               	movf	exp@x+2,w
  2248  0209  00B3               	movwf	___ftmul@f2+2
  2249  020A  120A  118A  24B6  120A  118A  	fcall	___ftmul
  2250  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0211  082E               	movf	?___ftmul,w
  2253  0212  00DC               	movwf	exp@x
  2254  0213  082F               	movf	?___ftmul+1,w
  2255  0214  00DD               	movwf	exp@x+1
  2256  0215  0830               	movf	?___ftmul+2,w
  2257  0216  00DE               	movwf	exp@x+2
  2258  0217  085C               	movf	exp@x,w
  2259  0218  00CB               	movwf	floor@x
  2260  0219  085D               	movf	exp@x+1,w
  2261  021A  00CC               	movwf	floor@x+1
  2262  021B  085E               	movf	exp@x+2,w
  2263  021C  00CD               	movwf	floor@x+2
  2264  021D  120A  118A  270F  120A  118A  	fcall	_floor
  2265  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0224  084B               	movf	?_floor,w
  2268  0225  00E0               	movwf	_exp$647
  2269  0226  084C               	movf	?_floor+1,w
  2270  0227  00E1               	movwf	_exp$647+1
  2271  0228  084D               	movf	?_floor+2,w
  2272  0229  00E2               	movwf	_exp$647+2
  2273  022A  0860               	movf	_exp$647,w
  2274  022B  00AE               	movwf	___fttol@f1
  2275  022C  0861               	movf	_exp$647+1,w
  2276  022D  00AF               	movwf	___fttol@f1+1
  2277  022E  0862               	movf	_exp$647+2,w
  2278  022F  00B0               	movwf	___fttol@f1+2
  2279  0230  120A  158A  2772  120A  118A  	fcall	___fttol
  2280  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0237  082F               	movf	?___fttol+1,w
  2283  0238  00E4               	movwf	exp@exponent+1
  2284  0239  082E               	movf	?___fttol,w
  2285  023A  00E3               	movwf	exp@exponent
  2286  023B  0864               	movf	exp@exponent+1,w
  2287  023C  00A9               	movwf	___awtoft@c+1
  2288  023D  0863               	movf	exp@exponent,w
  2289  023E  00A8               	movwf	___awtoft@c
  2290  023F  120A  158A  2361  120A  118A  	fcall	___awtoft
  2291  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0246  0828               	movf	?___awtoft,w
  2294  0247  00CB               	movwf	___ftsub@f2
  2295  0248  0829               	movf	?___awtoft+1,w
  2296  0249  00CC               	movwf	___ftsub@f2+1
  2297  024A  082A               	movf	?___awtoft+2,w
  2298  024B  00CD               	movwf	___ftsub@f2+2
  2299  024C  085C               	movf	exp@x,w
  2300  024D  00CE               	movwf	___ftsub@f1
  2301  024E  085D               	movf	exp@x+1,w
  2302  024F  00CF               	movwf	___ftsub@f1+1
  2303  0250  085E               	movf	exp@x+2,w
  2304  0251  00D0               	movwf	___ftsub@f1+2
  2305  0252  120A  158A  2340  120A  118A  	fcall	___ftsub
  2306  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0259  084B               	movf	?___ftsub,w
  2309  025A  00DC               	movwf	exp@x
  2310  025B  084C               	movf	?___ftsub+1,w
  2311  025C  00DD               	movwf	exp@x+1
  2312  025D  084D               	movf	?___ftsub+2,w
  2313  025E  00DE               	movwf	exp@x+2
  2314  025F  085C               	movf	exp@x,w
  2315  0260  00CB               	movwf	eval_poly@x
  2316  0261  085D               	movf	exp@x+1,w
  2317  0262  00CC               	movwf	eval_poly@x+1
  2318  0263  085E               	movf	exp@x+2,w
  2319  0264  00CD               	movwf	eval_poly@x+2
  2320  0265  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  2321  0266  00DF               	movwf	??_exp
  2322  0267  085F               	movf	??_exp,w
  2323  0268  00CE               	movwf	eval_poly@d
  2324  0269  3009               	movlw	9
  2325  026A  00CF               	movwf	eval_poly@n
  2326  026B  3000               	movlw	0
  2327  026C  00D0               	movwf	eval_poly@n+1
  2328  026D  120A  158A  2671  120A  118A  	fcall	_eval_poly
  2329  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0274  084B               	movf	?_eval_poly,w
  2332  0275  00D5               	movwf	ldexp@value
  2333  0276  084C               	movf	?_eval_poly+1,w
  2334  0277  00D6               	movwf	ldexp@value+1
  2335  0278  084D               	movf	?_eval_poly+2,w
  2336  0279  00D7               	movwf	ldexp@value+2
  2337  027A  0864               	movf	exp@exponent+1,w
  2338  027B  00D9               	movwf	ldexp@newexp+1
  2339  027C  0863               	movf	exp@exponent,w
  2340  027D  00D8               	movwf	ldexp@newexp
  2341  027E  120A  158A  26EA  120A  118A  	fcall	_ldexp
  2342  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0285  0855               	movf	?_ldexp,w
  2345  0286  00DC               	movwf	exp@x
  2346  0287  0856               	movf	?_ldexp+1,w
  2347  0288  00DD               	movwf	exp@x+1
  2348  0289  0857               	movf	?_ldexp+2,w
  2349  028A  00DE               	movwf	exp@x+2
  2350  028B  0865               	movf	exp@sign,w
  2351  028C  1903               	btfsc	3,2
  2352  028D  0008               	return
  2353  028E  0A5C               	incf	exp@x,w
  2354  028F  307F               	movlw	127
  2355  0290  1903               	skipnz
  2356  0291  065D               	xorwf	exp@x+1,w
  2357  0292  307F               	movlw	127
  2358  0293  1903               	skipnz
  2359  0294  065E               	xorwf	exp@x+2,w
  2360  0295  1D03               	btfss	3,2
  2361  0296  2A9E               	goto	l1830
  2362  0297  3000               	movlw	0
  2363  0298  00DC               	movwf	?_exp
  2364  0299  3000               	movlw	0
  2365  029A  00DD               	movwf	?_exp+1
  2366  029B  3000               	movlw	0
  2367  029C  00DE               	movwf	?_exp+2
  2368  029D  0008               	return
  2369  029E                     l1830:	
  2370  029E  085C               	movf	exp@x,w
  2371  029F  00A8               	movwf	___ftdiv@f2
  2372  02A0  085D               	movf	exp@x+1,w
  2373  02A1  00A9               	movwf	___ftdiv@f2+1
  2374  02A2  085E               	movf	exp@x+2,w
  2375  02A3  00AA               	movwf	___ftdiv@f2+2
  2376  02A4  3000               	movlw	0
  2377  02A5  00AB               	movwf	___ftdiv@f1
  2378  02A6  3080               	movlw	128
  2379  02A7  00AC               	movwf	___ftdiv@f1+1
  2380  02A8  303F               	movlw	63
  2381  02A9  00AD               	movwf	___ftdiv@f1+2
  2382  02AA  120A  118A  2657   	fcall	___ftdiv
  2383  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2384  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2385  02AF  0828               	movf	?___ftdiv,w
  2386  02B0  00DC               	movwf	?_exp
  2387  02B1  0829               	movf	?___ftdiv+1,w
  2388  02B2  00DD               	movwf	?_exp+1
  2389  02B3  082A               	movf	?___ftdiv+2,w
  2390  02B4  00DE               	movwf	?_exp+2
  2391  02B5  0008               	return
  2392  02B6                     __end_of_exp:	
  2393                           
  2394                           	psect	text7
  2395  0EEA                     __ptext7:	
  2396 ;; *************** function _ldexp *****************
  2397 ;; Defined at:
  2398 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  value           3   53[BANK0 ] unsigned char 
  2401 ;;  newexp          2   56[BANK0 ] int 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  3   53[BANK0 ] int 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       5       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       2       0       0       0
  2416 ;;      Totals:         0       7       0       0       0
  2417 ;;Total ram usage:        7 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		___ftge
  2422 ;; This function is called by:
  2423 ;;		_exp
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _ldexp
  2429  0EEA                     _ldexp:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2433  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0EEC  0857               	movf	ldexp@value+2,w
  2436  0EED  0456               	iorwf	ldexp@value+1,w
  2437  0EEE  0455               	iorwf	ldexp@value,w
  2438  0EEF  1D03               	skipz
  2439  0EF0  2EF8               	goto	l1710
  2440  0EF1  3000               	movlw	0
  2441  0EF2  00D5               	movwf	?_ldexp
  2442  0EF3  3000               	movlw	0
  2443  0EF4  00D6               	movwf	?_ldexp+1
  2444  0EF5  3000               	movlw	0
  2445  0EF6  00D7               	movwf	?_ldexp+2
  2446  0EF7  0008               	return
  2447  0EF8                     l1710:	
  2448  0EF8  0857               	movf	ldexp@value+2,w
  2449  0EF9  397F               	andlw	127
  2450  0EFA  00DA               	movwf	??_ldexp
  2451  0EFB  01DB               	clrf	??_ldexp+1
  2452  0EFC  1003               	clrc
  2453  0EFD  0DDA               	rlf	??_ldexp,f
  2454  0EFE  0DDB               	rlf	??_ldexp+1,f
  2455  0EFF  085A               	movf	??_ldexp,w
  2456  0F00  07D8               	addwf	ldexp@newexp,f
  2457  0F01  1803               	skipnc
  2458  0F02  0AD9               	incf	ldexp@newexp+1,f
  2459  0F03  085B               	movf	??_ldexp+1,w
  2460  0F04  07D9               	addwf	ldexp@newexp+1,f
  2461  0F05  0D56               	rlf	ldexp@value+1,w
  2462  0F06  0D56               	rlf	ldexp@value+1,w
  2463  0F07  3901               	andlw	1
  2464  0F08  00DA               	movwf	??_ldexp
  2465  0F09  01DB               	clrf	??_ldexp+1
  2466  0F0A  085A               	movf	??_ldexp,w
  2467  0F0B  07D8               	addwf	ldexp@newexp,f
  2468  0F0C  1803               	skipnc
  2469  0F0D  0AD9               	incf	ldexp@newexp+1,f
  2470  0F0E  085B               	movf	??_ldexp+1,w
  2471  0F0F  07D9               	addwf	ldexp@newexp+1,f
  2472  0F10  1FD9               	btfss	ldexp@newexp+1,7
  2473  0F11  2F21               	goto	l1720
  2474  0F12  3022               	movlw	34
  2475  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0F14  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0F15  00BD               	movwf	_errno^(0+128)
  2478  0F16  3000               	movlw	0
  2479  0F17  00BE               	movwf	(_errno^(0+128)+1)
  2480  0F18  3000               	movlw	0
  2481  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0F1B  00D5               	movwf	?_ldexp
  2484  0F1C  3000               	movlw	0
  2485  0F1D  00D6               	movwf	?_ldexp+1
  2486  0F1E  3000               	movlw	0
  2487  0F1F  00D7               	movwf	?_ldexp+2
  2488  0F20  0008               	return
  2489  0F21                     l1720:	
  2490  0F21  0859               	movf	ldexp@newexp+1,w
  2491  0F22  3A80               	xorlw	128
  2492  0F23  00FF               	movwf	127
  2493  0F24  3081               	movlw	129
  2494  0F25  027F               	subwf	127,w
  2495  0F26  1D03               	skipz
  2496  0F27  2F2A               	goto	u2315
  2497  0F28  3000               	movlw	0
  2498  0F29  0258               	subwf	ldexp@newexp,w
  2499  0F2A                     u2315:	
  2500  0F2A  1C03               	skipc
  2501  0F2B  2F59               	goto	l1736
  2502  0F2C  3022               	movlw	34
  2503  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  2504  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  2505  0F2F  00BD               	movwf	_errno^(0+128)
  2506  0F30  3000               	movlw	0
  2507  0F31  00BE               	movwf	(_errno^(0+128)+1)
  2508  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0F34  0855               	movf	ldexp@value,w
  2511  0F35  00A0               	movwf	___ftge@ff1
  2512  0F36  0856               	movf	ldexp@value+1,w
  2513  0F37  00A1               	movwf	___ftge@ff1+1
  2514  0F38  0857               	movf	ldexp@value+2,w
  2515  0F39  00A2               	movwf	___ftge@ff1+2
  2516  0F3A  3000               	movlw	0
  2517  0F3B  00A3               	movwf	___ftge@ff2
  2518  0F3C  3000               	movlw	0
  2519  0F3D  00A4               	movwf	___ftge@ff2+1
  2520  0F3E  3000               	movlw	0
  2521  0F3F  00A5               	movwf	___ftge@ff2+2
  2522  0F40  120A  158A  2533  120A  158A  	fcall	___ftge
  2523  0F45  1803               	btfsc	3,0
  2524  0F46  2F50               	goto	l1732
  2525  0F47  30FF               	movlw	255
  2526  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0F4A  00D5               	movwf	?_ldexp
  2529  0F4B  307F               	movlw	127
  2530  0F4C  00D6               	movwf	?_ldexp+1
  2531  0F4D  30FF               	movlw	255
  2532  0F4E  00D7               	movwf	?_ldexp+2
  2533  0F4F  0008               	return
  2534  0F50                     l1732:	
  2535  0F50  30FF               	movlw	255
  2536  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0F53  00D5               	movwf	?_ldexp
  2539  0F54  307F               	movlw	127
  2540  0F55  00D6               	movwf	?_ldexp+1
  2541  0F56  307F               	movlw	127
  2542  0F57  00D7               	movwf	?_ldexp+2
  2543  0F58  0008               	return
  2544  0F59                     l1736:	
  2545  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0F5B  0859               	movf	ldexp@newexp+1,w
  2548  0F5C  00DB               	movwf	??_ldexp+1
  2549  0F5D  0858               	movf	ldexp@newexp,w
  2550  0F5E  00DA               	movwf	??_ldexp
  2551  0F5F  0D5B               	rlf	??_ldexp+1,w
  2552  0F60  0CDB               	rrf	??_ldexp+1,f
  2553  0F61  0CDA               	rrf	??_ldexp,f
  2554  0F62  0857               	movf	ldexp@value+2,w
  2555  0F63  065A               	xorwf	??_ldexp,w
  2556  0F64  3980               	andlw	-128
  2557  0F65  065A               	xorwf	??_ldexp,w
  2558  0F66  00D7               	movwf	ldexp@value+2
  2559  0F67  0858               	movf	ldexp@newexp,w
  2560  0F68  3901               	andlw	1
  2561  0F69  00DA               	movwf	??_ldexp
  2562  0F6A  0CDA               	rrf	??_ldexp,f
  2563  0F6B  0CDA               	rrf	??_ldexp,f
  2564  0F6C  0856               	movf	ldexp@value+1,w
  2565  0F6D  065A               	xorwf	??_ldexp,w
  2566  0F6E  397F               	andlw	-129
  2567  0F6F  065A               	xorwf	??_ldexp,w
  2568  0F70  00D6               	movwf	ldexp@value+1
  2569  0F71  0008               	return
  2570  0F72                     __end_of_ldexp:	
  2571                           
  2572                           	psect	text8
  2573  070F                     __ptext8:	
  2574 ;; *************** function _floor *****************
  2575 ;; Defined at:
  2576 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  x               3   43[BANK0 ] int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  i               3   47[BANK0 ] int 
  2581 ;;  expon           2   50[BANK0 ] int 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  3   43[BANK0 ] int 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       3       0       0       0
  2592 ;;      Locals:         0       5       0       0       0
  2593 ;;      Temps:          0       1       0       0       0
  2594 ;;      Totals:         0       9       0       0       0
  2595 ;;Total ram usage:        9 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    4
  2598 ;; This function calls:
  2599 ;;		___altoft
  2600 ;;		___ftadd
  2601 ;;		___ftge
  2602 ;;		___fttol
  2603 ;;		_frexp
  2604 ;; This function is called by:
  2605 ;;		_exp
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _floor
  2611  070F                     _floor:	
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2615  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0711  084B               	movf	floor@x,w
  2618  0712  00A0               	movwf	frexp@value
  2619  0713  084C               	movf	floor@x+1,w
  2620  0714  00A1               	movwf	frexp@value+1
  2621  0715  084D               	movf	floor@x+2,w
  2622  0716  00A2               	movwf	frexp@value+2
  2623  0717  3052               	movlw	(low (floor@expon| 0))& (0+255)
  2624  0718  00CE               	movwf	??_floor
  2625  0719  084E               	movf	??_floor,w
  2626  071A  00A3               	movwf	frexp@eptr
  2627  071B  120A  158A  2498  120A  118A  	fcall	_frexp
  2628  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0722  1FD3               	btfss	floor@expon+1,7
  2631  0723  2F49               	goto	l1680
  2632  0724  084B               	movf	floor@x,w
  2633  0725  00A0               	movwf	___ftge@ff1
  2634  0726  084C               	movf	floor@x+1,w
  2635  0727  00A1               	movwf	___ftge@ff1+1
  2636  0728  084D               	movf	floor@x+2,w
  2637  0729  00A2               	movwf	___ftge@ff1+2
  2638  072A  3000               	movlw	0
  2639  072B  00A3               	movwf	___ftge@ff2
  2640  072C  3000               	movlw	0
  2641  072D  00A4               	movwf	___ftge@ff2+1
  2642  072E  3000               	movlw	0
  2643  072F  00A5               	movwf	___ftge@ff2+2
  2644  0730  120A  158A  2533  120A  118A  	fcall	___ftge
  2645  0735  1803               	btfsc	3,0
  2646  0736  2F40               	goto	l1676
  2647  0737  3000               	movlw	0
  2648  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2650  073A  00CB               	movwf	?_floor
  2651  073B  3080               	movlw	128
  2652  073C  00CC               	movwf	?_floor+1
  2653  073D  30BF               	movlw	191
  2654  073E  00CD               	movwf	?_floor+2
  2655  073F  0008               	return
  2656  0740                     l1676:	
  2657  0740  3000               	movlw	0
  2658  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0743  00CB               	movwf	?_floor
  2661  0744  3000               	movlw	0
  2662  0745  00CC               	movwf	?_floor+1
  2663  0746  3000               	movlw	0
  2664  0747  00CD               	movwf	?_floor+2
  2665  0748  0008               	return
  2666  0749                     l1680:	
  2667  0749  3000               	movlw	0
  2668  074A  0253               	subwf	floor@expon+1,w
  2669  074B  3015               	movlw	21
  2670  074C  1903               	skipnz
  2671  074D  0252               	subwf	floor@expon,w
  2672  074E  1803               	btfsc	3,0
  2673  074F  0008               	return
  2674  0750  084B               	movf	floor@x,w
  2675  0751  00AE               	movwf	___fttol@f1
  2676  0752  084C               	movf	floor@x+1,w
  2677  0753  00AF               	movwf	___fttol@f1+1
  2678  0754  084D               	movf	floor@x+2,w
  2679  0755  00B0               	movwf	___fttol@f1+2
  2680  0756  120A  158A  2772  120A  118A  	fcall	___fttol
  2681  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2682  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2683  075D  0831               	movf	?___fttol+3,w
  2684  075E  00BF               	movwf	___altoft@c+3
  2685  075F  0830               	movf	?___fttol+2,w
  2686  0760  00BE               	movwf	___altoft@c+2
  2687  0761  082F               	movf	?___fttol+1,w
  2688  0762  00BD               	movwf	___altoft@c+1
  2689  0763  082E               	movf	?___fttol,w
  2690  0764  00BC               	movwf	___altoft@c
  2691  0765  120A  158A  2456  120A  118A  	fcall	___altoft
  2692  076A  1283               	bcf	3,5	;RP0=0, select bank0
  2693  076B  1303               	bcf	3,6	;RP1=0, select bank0
  2694  076C  083C               	movf	?___altoft,w
  2695  076D  00CF               	movwf	floor@i
  2696  076E  083D               	movf	?___altoft+1,w
  2697  076F  00D0               	movwf	floor@i+1
  2698  0770  083E               	movf	?___altoft+2,w
  2699  0771  00D1               	movwf	floor@i+2
  2700  0772  084B               	movf	floor@x,w
  2701  0773  00A0               	movwf	___ftge@ff1
  2702  0774  084C               	movf	floor@x+1,w
  2703  0775  00A1               	movwf	___ftge@ff1+1
  2704  0776  084D               	movf	floor@x+2,w
  2705  0777  00A2               	movwf	___ftge@ff1+2
  2706  0778  084F               	movf	floor@i,w
  2707  0779  00A3               	movwf	___ftge@ff2
  2708  077A  0850               	movf	floor@i+1,w
  2709  077B  00A4               	movwf	___ftge@ff2+1
  2710  077C  0851               	movf	floor@i+2,w
  2711  077D  00A5               	movwf	___ftge@ff2+2
  2712  077E  120A  158A  2533  120A  118A  	fcall	___ftge
  2713  0783  1803               	btfsc	3,0
  2714  0784  2F9F               	goto	l1690
  2715  0785  3000               	movlw	0
  2716  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0788  00BE               	movwf	___ftadd@f1
  2719  0789  3080               	movlw	128
  2720  078A  00BF               	movwf	___ftadd@f1+1
  2721  078B  30BF               	movlw	191
  2722  078C  00C0               	movwf	___ftadd@f1+2
  2723  078D  084F               	movf	floor@i,w
  2724  078E  00C1               	movwf	___ftadd@f2
  2725  078F  0850               	movf	floor@i+1,w
  2726  0790  00C2               	movwf	___ftadd@f2+1
  2727  0791  0851               	movf	floor@i+2,w
  2728  0792  00C3               	movwf	___ftadd@f2+2
  2729  0793  120A  118A  22B6   	fcall	___ftadd
  2730  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0798  083E               	movf	?___ftadd,w
  2733  0799  00CB               	movwf	?_floor
  2734  079A  083F               	movf	?___ftadd+1,w
  2735  079B  00CC               	movwf	?_floor+1
  2736  079C  0840               	movf	?___ftadd+2,w
  2737  079D  00CD               	movwf	?_floor+2
  2738  079E  0008               	return
  2739  079F                     l1690:	
  2740  079F  1283               	bcf	3,5	;RP0=0, select bank0
  2741  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2742  07A1  084F               	movf	floor@i,w
  2743  07A2  00CB               	movwf	?_floor
  2744  07A3  0850               	movf	floor@i+1,w
  2745  07A4  00CC               	movwf	?_floor+1
  2746  07A5  0851               	movf	floor@i+2,w
  2747  07A6  00CD               	movwf	?_floor+2
  2748  07A7  0008               	return
  2749  07A8                     __end_of_floor:	
  2750                           
  2751                           	psect	text9
  2752  0C98                     __ptext9:	
  2753 ;; *************** function _frexp *****************
  2754 ;; Defined at:
  2755 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  value           3    0[BANK0 ] int 
  2758 ;;  eptr            1    3[BANK0 ] PTR int 
  2759 ;;		 -> log@exponent(2), floor@expon(2), 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  3    0[BANK0 ] PTR int 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         0       4       0       0       0
  2772 ;;      Locals:         0       0       0       0       0
  2773 ;;      Temps:          0       2       0       0       0
  2774 ;;      Totals:         0       6       0       0       0
  2775 ;;Total ram usage:        6 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    2
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_floor
  2782 ;;		_log
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _frexp
  2788  0C98                     _frexp:	
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2792  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0C9A  0822               	movf	frexp@value+2,w
  2795  0C9B  0421               	iorwf	frexp@value+1,w
  2796  0C9C  0420               	iorwf	frexp@value,w
  2797  0C9D  1D03               	skipz
  2798  0C9E  2CAC               	goto	l1584
  2799  0C9F  0823               	movf	frexp@eptr,w
  2800  0CA0  0084               	movwf	4
  2801  0CA1  1383               	bcf	3,7	;select IRP bank0
  2802  0CA2  0180               	clrf	0
  2803  0CA3  0A84               	incf	4,f
  2804  0CA4  0180               	clrf	0
  2805  0CA5  3000               	movlw	0
  2806  0CA6  00A0               	movwf	?_frexp
  2807  0CA7  3000               	movlw	0
  2808  0CA8  00A1               	movwf	?_frexp+1
  2809  0CA9  3000               	movlw	0
  2810  0CAA  00A2               	movwf	?_frexp+2
  2811  0CAB  0008               	return
  2812  0CAC                     l1584:	
  2813  0CAC  0822               	movf	frexp@value+2,w
  2814  0CAD  397F               	andlw	127
  2815  0CAE  00A4               	movwf	??_frexp
  2816  0CAF  01A5               	clrf	??_frexp+1
  2817  0CB0  1003               	clrc
  2818  0CB1  0DA4               	rlf	??_frexp,f
  2819  0CB2  0DA5               	rlf	??_frexp+1,f
  2820  0CB3  0823               	movf	frexp@eptr,w
  2821  0CB4  0084               	movwf	4
  2822  0CB5  0824               	movf	??_frexp,w
  2823  0CB6  1383               	bcf	3,7	;select IRP bank0
  2824  0CB7  0080               	movwf	0
  2825  0CB8  0A84               	incf	4,f
  2826  0CB9  0825               	movf	??_frexp+1,w
  2827  0CBA  0080               	movwf	0
  2828  0CBB  0D21               	rlf	frexp@value+1,w
  2829  0CBC  0D21               	rlf	frexp@value+1,w
  2830  0CBD  3901               	andlw	1
  2831  0CBE  00A4               	movwf	??_frexp
  2832  0CBF  01A5               	clrf	??_frexp+1
  2833  0CC0  0823               	movf	frexp@eptr,w
  2834  0CC1  0084               	movwf	4
  2835  0CC2  0824               	movf	??_frexp,w
  2836  0CC3  0480               	iorwf	0,f
  2837  0CC4  0A84               	incf	4,f
  2838  0CC5  0825               	movf	??_frexp+1,w
  2839  0CC6  0480               	iorwf	0,f
  2840  0CC7  0823               	movf	frexp@eptr,w
  2841  0CC8  0084               	movwf	4
  2842  0CC9  3082               	movlw	130
  2843  0CCA  0780               	addwf	0,f
  2844  0CCB  0F84               	incfsz	4,f
  2845  0CCC  0800               	movf	0,w
  2846  0CCD  1803               	skipnc
  2847  0CCE  0A00               	incf	0,w
  2848  0CCF  00FF               	movwf	127
  2849  0CD0  30FF               	movlw	255
  2850  0CD1  077F               	addwf	127,w
  2851  0CD2  0080               	movwf	0
  2852  0CD3  0384               	decf	4,f
  2853  0CD4  0822               	movf	frexp@value+2,w
  2854  0CD5  3980               	andlw	-128
  2855  0CD6  383F               	iorlw	63
  2856  0CD7  00A2               	movwf	frexp@value+2
  2857  0CD8  13A1               	bcf	frexp@value+1,7
  2858  0CD9  0008               	return
  2859  0CDA                     __end_of_frexp:	
  2860                           
  2861                           	psect	text10
  2862  0F72                     __ptext10:	
  2863 ;; *************** function ___fttol *****************
  2864 ;; Defined at:
  2865 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  f1              3   14[BANK0 ] float 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  lval            4   23[BANK0 ] unsigned long 
  2870 ;;  exp1            1   27[BANK0 ] unsigned char 
  2871 ;;  sign1           1   22[BANK0 ] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  4   14[BANK0 ] long 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       4       0       0       0
  2882 ;;      Locals:         0       6       0       0       0
  2883 ;;      Temps:          0       4       0       0       0
  2884 ;;      Totals:         0      14       0       0       0
  2885 ;;Total ram usage:       14 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;;		_pow
  2893 ;;		_exp
  2894 ;;		_floor
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function ___fttol
  2900  0F72                     ___fttol:	
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2904  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0F74  082E               	movf	___fttol@f1,w
  2907  0F75  00B2               	movwf	??___fttol
  2908  0F76  082F               	movf	___fttol@f1+1,w
  2909  0F77  00B3               	movwf	??___fttol+1
  2910  0F78  0830               	movf	___fttol@f1+2,w
  2911  0F79  00B4               	movwf	??___fttol+2
  2912  0F7A  1003               	clrc
  2913  0F7B  0D33               	rlf	??___fttol+1,w
  2914  0F7C  0D34               	rlf	??___fttol+2,w
  2915  0F7D  00B5               	movwf	??___fttol+3
  2916  0F7E  0835               	movf	??___fttol+3,w
  2917  0F7F  00BB               	movwf	___fttol@exp1
  2918  0F80  083B               	movf	___fttol@exp1,w
  2919  0F81  1D03               	btfss	3,2
  2920  0F82  2F8C               	goto	l1540
  2921  0F83  3000               	movlw	0
  2922  0F84  00B1               	movwf	?___fttol+3
  2923  0F85  3000               	movlw	0
  2924  0F86  00B0               	movwf	?___fttol+2
  2925  0F87  3000               	movlw	0
  2926  0F88  00AF               	movwf	?___fttol+1
  2927  0F89  3000               	movlw	0
  2928  0F8A  00AE               	movwf	?___fttol
  2929  0F8B  0008               	return
  2930  0F8C                     l1540:	
  2931  0F8C  082E               	movf	___fttol@f1,w
  2932  0F8D  00B2               	movwf	??___fttol
  2933  0F8E  082F               	movf	___fttol@f1+1,w
  2934  0F8F  00B3               	movwf	??___fttol+1
  2935  0F90  0830               	movf	___fttol@f1+2,w
  2936  0F91  00B4               	movwf	??___fttol+2
  2937  0F92  3017               	movlw	23
  2938  0F93                     u2035:	
  2939  0F93  1003               	clrc
  2940  0F94  0CB4               	rrf	??___fttol+2,f
  2941  0F95  0CB3               	rrf	??___fttol+1,f
  2942  0F96  0CB2               	rrf	??___fttol,f
  2943  0F97  3EFF               	addlw	-1
  2944  0F98  1D03               	skipz
  2945  0F99  2F93               	goto	u2035
  2946  0F9A  0832               	movf	??___fttol,w
  2947  0F9B  00B5               	movwf	??___fttol+3
  2948  0F9C  0835               	movf	??___fttol+3,w
  2949  0F9D  00B6               	movwf	___fttol@sign1
  2950  0F9E  17AF               	bsf	___fttol@f1+1,7
  2951  0F9F  30FF               	movlw	255
  2952  0FA0  05AE               	andwf	___fttol@f1,f
  2953  0FA1  30FF               	movlw	255
  2954  0FA2  05AF               	andwf	___fttol@f1+1,f
  2955  0FA3  3000               	movlw	0
  2956  0FA4  05B0               	andwf	___fttol@f1+2,f
  2957  0FA5  082E               	movf	___fttol@f1,w
  2958  0FA6  00B7               	movwf	___fttol@lval
  2959  0FA7  082F               	movf	___fttol@f1+1,w
  2960  0FA8  00B8               	movwf	___fttol@lval+1
  2961  0FA9  0830               	movf	___fttol@f1+2,w
  2962  0FAA  00B9               	movwf	___fttol@lval+2
  2963  0FAB  01BA               	clrf	___fttol@lval+3
  2964  0FAC  308E               	movlw	142
  2965  0FAD  02BB               	subwf	___fttol@exp1,f
  2966  0FAE  1FBB               	btfss	___fttol@exp1,7
  2967  0FAF  2FCE               	goto	l1560
  2968  0FB0  083B               	movf	___fttol@exp1,w
  2969  0FB1  3A80               	xorlw	128
  2970  0FB2  3E8F               	addlw	143
  2971  0FB3  1803               	skipnc
  2972  0FB4  2FBE               	goto	l1558
  2973  0FB5  3000               	movlw	0
  2974  0FB6  00B1               	movwf	?___fttol+3
  2975  0FB7  3000               	movlw	0
  2976  0FB8  00B0               	movwf	?___fttol+2
  2977  0FB9  3000               	movlw	0
  2978  0FBA  00AF               	movwf	?___fttol+1
  2979  0FBB  3000               	movlw	0
  2980  0FBC  00AE               	movwf	?___fttol
  2981  0FBD  0008               	return
  2982  0FBE                     l1558:	
  2983  0FBE  3001               	movlw	1
  2984  0FBF                     u2065:	
  2985  0FBF  1003               	clrc
  2986  0FC0  0CBA               	rrf	___fttol@lval+3,f
  2987  0FC1  0CB9               	rrf	___fttol@lval+2,f
  2988  0FC2  0CB8               	rrf	___fttol@lval+1,f
  2989  0FC3  0CB7               	rrf	___fttol@lval,f
  2990  0FC4  3EFF               	addlw	-1
  2991  0FC5  1D03               	skipz
  2992  0FC6  2FBF               	goto	u2065
  2993  0FC7  3001               	movlw	1
  2994  0FC8  00B2               	movwf	??___fttol
  2995  0FC9  0832               	movf	??___fttol,w
  2996  0FCA  07BB               	addwf	___fttol@exp1,f
  2997  0FCB  1903               	btfsc	3,2
  2998  0FCC  2FE9               	goto	l1568
  2999  0FCD  2FBE               	goto	l1558
  3000  0FCE                     l1560:	
  3001  0FCE  3018               	movlw	24
  3002  0FCF  023B               	subwf	___fttol@exp1,w
  3003  0FD0  1C03               	skipc
  3004  0FD1  2FE6               	goto	l391
  3005  0FD2  3000               	movlw	0
  3006  0FD3  00B1               	movwf	?___fttol+3
  3007  0FD4  3000               	movlw	0
  3008  0FD5  00B0               	movwf	?___fttol+2
  3009  0FD6  3000               	movlw	0
  3010  0FD7  00AF               	movwf	?___fttol+1
  3011  0FD8  3000               	movlw	0
  3012  0FD9  00AE               	movwf	?___fttol
  3013  0FDA  0008               	return
  3014  0FDB                     l1566:	
  3015  0FDB  3001               	movlw	1
  3016  0FDC  00B2               	movwf	??___fttol
  3017  0FDD                     u2095:	
  3018  0FDD  1003               	clrc
  3019  0FDE  0DB7               	rlf	___fttol@lval,f
  3020  0FDF  0DB8               	rlf	___fttol@lval+1,f
  3021  0FE0  0DB9               	rlf	___fttol@lval+2,f
  3022  0FE1  0DBA               	rlf	___fttol@lval+3,f
  3023  0FE2  0BB2               	decfsz	??___fttol,f
  3024  0FE3  2FDD               	goto	u2095
  3025  0FE4  3001               	movlw	1
  3026  0FE5  02BB               	subwf	___fttol@exp1,f
  3027  0FE6                     l391:	
  3028  0FE6  083B               	movf	___fttol@exp1,w
  3029  0FE7  1D03               	btfss	3,2
  3030  0FE8  2FDB               	goto	l1566
  3031  0FE9                     l1568:	
  3032  0FE9  0836               	movf	___fttol@sign1,w
  3033  0FEA  1903               	btfsc	3,2
  3034  0FEB  2FF7               	goto	l1572
  3035  0FEC  09B7               	comf	___fttol@lval,f
  3036  0FED  09B8               	comf	___fttol@lval+1,f
  3037  0FEE  09B9               	comf	___fttol@lval+2,f
  3038  0FEF  09BA               	comf	___fttol@lval+3,f
  3039  0FF0  0AB7               	incf	___fttol@lval,f
  3040  0FF1  1903               	skipnz
  3041  0FF2  0AB8               	incf	___fttol@lval+1,f
  3042  0FF3  1903               	skipnz
  3043  0FF4  0AB9               	incf	___fttol@lval+2,f
  3044  0FF5  1903               	skipnz
  3045  0FF6  0ABA               	incf	___fttol@lval+3,f
  3046  0FF7                     l1572:	
  3047  0FF7  083A               	movf	___fttol@lval+3,w
  3048  0FF8  00B1               	movwf	?___fttol+3
  3049  0FF9  0839               	movf	___fttol@lval+2,w
  3050  0FFA  00B0               	movwf	?___fttol+2
  3051  0FFB  0838               	movf	___fttol@lval+1,w
  3052  0FFC  00AF               	movwf	?___fttol+1
  3053  0FFD  0837               	movf	___fttol@lval,w
  3054  0FFE  00AE               	movwf	?___fttol
  3055  0FFF  0008               	return
  3056  1000                     __end_of___fttol:	
  3057                           
  3058                           	psect	text11
  3059  0D33                     __ptext11:	
  3060 ;; *************** function ___ftge *****************
  3061 ;; Defined at:
  3062 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  ff1             3    0[BANK0 ] float 
  3065 ;;  ff2             3    3[BANK0 ] float 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       6       0       0       0
  3078 ;;      Locals:         0       0       0       0       0
  3079 ;;      Temps:          0       6       0       0       0
  3080 ;;      Totals:         0      12       0       0       0
  3081 ;;Total ram usage:       12 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    2
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_pow
  3088 ;;		_exp
  3089 ;;		_floor
  3090 ;;		_ldexp
  3091 ;;		_log
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function ___ftge
  3097  0D33                     ___ftge:	
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3101  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0D35  1FA2               	btfss	___ftge@ff1+2,7
  3104  0D36  2D5C               	goto	l1468
  3105  0D37  3000               	movlw	0
  3106  0D38  00A6               	movwf	??___ftge
  3107  0D39  3000               	movlw	0
  3108  0D3A  00A7               	movwf	??___ftge+1
  3109  0D3B  3080               	movlw	128
  3110  0D3C  00A8               	movwf	??___ftge+2
  3111  0D3D  0920               	comf	___ftge@ff1,w
  3112  0D3E  00A9               	movwf	??___ftge+3
  3113  0D3F  0921               	comf	___ftge@ff1+1,w
  3114  0D40  00AA               	movwf	??___ftge+4
  3115  0D41  0922               	comf	___ftge@ff1+2,w
  3116  0D42  00AB               	movwf	??___ftge+5
  3117  0D43  0AA9               	incf	??___ftge+3,f
  3118  0D44  1903               	skipnz
  3119  0D45  0AAA               	incf	??___ftge+4,f
  3120  0D46  1903               	skipnz
  3121  0D47  0AAB               	incf	??___ftge+5,f
  3122  0D48  0829               	movf	??___ftge+3,w
  3123  0D49  07A6               	addwf	??___ftge,f
  3124  0D4A  082A               	movf	??___ftge+4,w
  3125  0D4B  1803               	skipnc
  3126  0D4C  0F2A               	incfsz	??___ftge+4,w
  3127  0D4D  2D4F               	goto	u1841
  3128  0D4E  2D50               	goto	u1842
  3129  0D4F                     u1841:	
  3130  0D4F  07A7               	addwf	??___ftge+1,f
  3131  0D50                     u1842:	
  3132  0D50  082B               	movf	??___ftge+5,w
  3133  0D51  1803               	skipnc
  3134  0D52  0F2B               	incfsz	??___ftge+5,w
  3135  0D53  2D55               	goto	u1843
  3136  0D54  2D56               	goto	u1844
  3137  0D55                     u1843:	
  3138  0D55  07A8               	addwf	??___ftge+2,f
  3139  0D56                     u1844:	
  3140  0D56  0826               	movf	??___ftge,w
  3141  0D57  00A0               	movwf	___ftge@ff1
  3142  0D58  0827               	movf	??___ftge+1,w
  3143  0D59  00A1               	movwf	___ftge@ff1+1
  3144  0D5A  0828               	movf	??___ftge+2,w
  3145  0D5B  00A2               	movwf	___ftge@ff1+2
  3146  0D5C                     l1468:	
  3147  0D5C  1FA5               	btfss	___ftge@ff2+2,7
  3148  0D5D  2D83               	goto	l1472
  3149  0D5E  3000               	movlw	0
  3150  0D5F  00A6               	movwf	??___ftge
  3151  0D60  3000               	movlw	0
  3152  0D61  00A7               	movwf	??___ftge+1
  3153  0D62  3080               	movlw	128
  3154  0D63  00A8               	movwf	??___ftge+2
  3155  0D64  0923               	comf	___ftge@ff2,w
  3156  0D65  00A9               	movwf	??___ftge+3
  3157  0D66  0924               	comf	___ftge@ff2+1,w
  3158  0D67  00AA               	movwf	??___ftge+4
  3159  0D68  0925               	comf	___ftge@ff2+2,w
  3160  0D69  00AB               	movwf	??___ftge+5
  3161  0D6A  0AA9               	incf	??___ftge+3,f
  3162  0D6B  1903               	skipnz
  3163  0D6C  0AAA               	incf	??___ftge+4,f
  3164  0D6D  1903               	skipnz
  3165  0D6E  0AAB               	incf	??___ftge+5,f
  3166  0D6F  0829               	movf	??___ftge+3,w
  3167  0D70  07A6               	addwf	??___ftge,f
  3168  0D71  082A               	movf	??___ftge+4,w
  3169  0D72  1803               	skipnc
  3170  0D73  0F2A               	incfsz	??___ftge+4,w
  3171  0D74  2D76               	goto	u1861
  3172  0D75  2D77               	goto	u1862
  3173  0D76                     u1861:	
  3174  0D76  07A7               	addwf	??___ftge+1,f
  3175  0D77                     u1862:	
  3176  0D77  082B               	movf	??___ftge+5,w
  3177  0D78  1803               	skipnc
  3178  0D79  0F2B               	incfsz	??___ftge+5,w
  3179  0D7A  2D7C               	goto	u1863
  3180  0D7B  2D7D               	goto	u1864
  3181  0D7C                     u1863:	
  3182  0D7C  07A8               	addwf	??___ftge+2,f
  3183  0D7D                     u1864:	
  3184  0D7D  0826               	movf	??___ftge,w
  3185  0D7E  00A3               	movwf	___ftge@ff2
  3186  0D7F  0827               	movf	??___ftge+1,w
  3187  0D80  00A4               	movwf	___ftge@ff2+1
  3188  0D81  0828               	movf	??___ftge+2,w
  3189  0D82  00A5               	movwf	___ftge@ff2+2
  3190  0D83                     l1472:	
  3191  0D83  3080               	movlw	128
  3192  0D84  06A2               	xorwf	___ftge@ff1+2,f
  3193  0D85  3080               	movlw	128
  3194  0D86  06A5               	xorwf	___ftge@ff2+2,f
  3195  0D87  0825               	movf	___ftge@ff2+2,w
  3196  0D88  0222               	subwf	___ftge@ff1+2,w
  3197  0D89  1D03               	skipz
  3198  0D8A  0008               	return
  3199  0D8B  0824               	movf	___ftge@ff2+1,w
  3200  0D8C  0221               	subwf	___ftge@ff1+1,w
  3201  0D8D  1D03               	skipz
  3202  0D8E  0008               	return
  3203  0D8F  0823               	movf	___ftge@ff2,w
  3204  0D90  0220               	subwf	___ftge@ff1,w
  3205  0D91  0008               	return
  3206  0D92                     __end_of___ftge:	
  3207                           
  3208                           	psect	text12
  3209  0C56                     __ptext12:	
  3210 ;; *************** function ___altoft *****************
  3211 ;; Defined at:
  3212 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  c               4   28[BANK0 ] long 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  sign            1   35[BANK0 ] unsigned char 
  3217 ;;  exp             1   34[BANK0 ] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  3   28[BANK0 ] float 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       4       0       0       0
  3228 ;;      Locals:         0       2       0       0       0
  3229 ;;      Temps:          0       2       0       0       0
  3230 ;;      Totals:         0       8       0       0       0
  3231 ;;Total ram usage:        8 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    3
  3234 ;; This function calls:
  3235 ;;		___ftpack
  3236 ;; This function is called by:
  3237 ;;		_floor
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function ___altoft
  3243  0C56                     ___altoft:	
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3247  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0C58  01C3               	clrf	___altoft@sign
  3250  0C59  308E               	movlw	142
  3251  0C5A  00C0               	movwf	??___altoft
  3252  0C5B  0840               	movf	??___altoft,w
  3253  0C5C  00C2               	movwf	___altoft@exp
  3254  0C5D  1FBF               	btfss	___altoft@c+3,7
  3255  0C5E  2C6C               	goto	l1388
  3256  0C5F  09BC               	comf	___altoft@c,f
  3257  0C60  09BD               	comf	___altoft@c+1,f
  3258  0C61  09BE               	comf	___altoft@c+2,f
  3259  0C62  09BF               	comf	___altoft@c+3,f
  3260  0C63  0ABC               	incf	___altoft@c,f
  3261  0C64  1903               	skipnz
  3262  0C65  0ABD               	incf	___altoft@c+1,f
  3263  0C66  1903               	skipnz
  3264  0C67  0ABE               	incf	___altoft@c+2,f
  3265  0C68  1903               	skipnz
  3266  0C69  0ABF               	incf	___altoft@c+3,f
  3267  0C6A  01C3               	clrf	___altoft@sign
  3268  0C6B  0AC3               	incf	___altoft@sign,f
  3269  0C6C                     l1388:	
  3270  0C6C  30FF               	movlw	255
  3271  0C6D  053F               	andwf	___altoft@c+3,w
  3272  0C6E  1903               	btfsc	3,2
  3273  0C6F  2C7E               	goto	l1390
  3274  0C70  3001               	movlw	1
  3275  0C71                     u1575:	
  3276  0C71  1003               	clrc
  3277  0C72  0CBF               	rrf	___altoft@c+3,f
  3278  0C73  0CBE               	rrf	___altoft@c+2,f
  3279  0C74  0CBD               	rrf	___altoft@c+1,f
  3280  0C75  0CBC               	rrf	___altoft@c,f
  3281  0C76  3EFF               	addlw	-1
  3282  0C77  1D03               	skipz
  3283  0C78  2C71               	goto	u1575
  3284  0C79  3001               	movlw	1
  3285  0C7A  00C0               	movwf	??___altoft
  3286  0C7B  0840               	movf	??___altoft,w
  3287  0C7C  07C2               	addwf	___altoft@exp,f
  3288  0C7D  2C6C               	goto	l1388
  3289  0C7E                     l1390:	
  3290  0C7E  083C               	movf	___altoft@c,w
  3291  0C7F  00A0               	movwf	___ftpack@arg
  3292  0C80  083D               	movf	___altoft@c+1,w
  3293  0C81  00A1               	movwf	___ftpack@arg+1
  3294  0C82  083E               	movf	___altoft@c+2,w
  3295  0C83  00A2               	movwf	___ftpack@arg+2
  3296  0C84  0842               	movf	___altoft@exp,w
  3297  0C85  00C0               	movwf	??___altoft
  3298  0C86  0840               	movf	??___altoft,w
  3299  0C87  00A3               	movwf	___ftpack@exp
  3300  0C88  0843               	movf	___altoft@sign,w
  3301  0C89  00C1               	movwf	??___altoft+1
  3302  0C8A  0841               	movf	??___altoft+1,w
  3303  0C8B  00A4               	movwf	___ftpack@sign
  3304  0C8C  120A  158A  2592   	fcall	___ftpack
  3305  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0C91  0820               	movf	?___ftpack,w
  3308  0C92  00BC               	movwf	?___altoft
  3309  0C93  0821               	movf	?___ftpack+1,w
  3310  0C94  00BD               	movwf	?___altoft+1
  3311  0C95  0822               	movf	?___ftpack+2,w
  3312  0C96  00BE               	movwf	?___altoft+2
  3313  0C97  0008               	return
  3314  0C98                     __end_of___altoft:	
  3315                           
  3316                           	psect	text13
  3317  0E71                     __ptext13:	
  3318 ;; *************** function _eval_poly *****************
  3319 ;; Defined at:
  3320 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  x               3   43[BANK0 ] float 
  3323 ;;  d               1   46[BANK0 ] PTR const 
  3324 ;;		 -> log@coeff(27), exp@coeff(30), 
  3325 ;;  n               2   47[BANK0 ] int 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  res             3   50[BANK0 ] int 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  3   43[BANK0 ] int 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       6       0       0       0
  3338 ;;      Locals:         0       3       0       0       0
  3339 ;;      Temps:          0       1       0       0       0
  3340 ;;      Totals:         0      10       0       0       0
  3341 ;;Total ram usage:       10 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    4
  3344 ;; This function calls:
  3345 ;;		___bmul
  3346 ;;		___ftadd
  3347 ;;		___ftmul
  3348 ;; This function is called by:
  3349 ;;		_exp
  3350 ;;		_log
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _eval_poly
  3356  0E71                     _eval_poly:	
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3360  0E71  3003               	movlw	3
  3361  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0E74  00D1               	movwf	??_eval_poly
  3364  0E75  0851               	movf	??_eval_poly,w
  3365  0E76  00A0               	movwf	___bmul@multiplicand
  3366  0E77  084F               	movf	eval_poly@n,w
  3367  0E78  120A  158A  232D  120A  158A  	fcall	___bmul
  3368  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0E7F  074E               	addwf	eval_poly@d,w
  3371  0E80  0084               	movwf	4
  3372  0E81  120A  158A  2000  120A  158A  	fcall	stringdir
  3373  0E86  00D2               	movwf	eval_poly@res
  3374  0E87  120A  158A  2000  120A  158A  	fcall	stringdir
  3375  0E8C  00D3               	movwf	eval_poly@res+1
  3376  0E8D  120A  158A  2000  120A  158A  	fcall	stringdir
  3377  0E92                     L2:	
  3378  0E92  00D4               	movwf	eval_poly@res+2
  3379  0E93  084F               	movf	eval_poly@n,w
  3380  0E94  0450               	iorwf	eval_poly@n+1,w
  3381  0E95  1903               	btfsc	3,2
  3382  0E96  2EE3               	goto	l1700
  3383  0E97  3003               	movlw	3
  3384  0E98  00D1               	movwf	??_eval_poly
  3385  0E99  0851               	movf	??_eval_poly,w
  3386  0E9A  00A0               	movwf	___bmul@multiplicand
  3387  0E9B  30FF               	movlw	255
  3388  0E9C  07CF               	addwf	eval_poly@n,f
  3389  0E9D  1803               	skipnc
  3390  0E9E  0AD0               	incf	eval_poly@n+1,f
  3391  0E9F  30FF               	movlw	255
  3392  0EA0  07D0               	addwf	eval_poly@n+1,f
  3393  0EA1  084F               	movf	eval_poly@n,w
  3394  0EA2  120A  158A  232D  120A  158A  	fcall	___bmul
  3395  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0EA9  074E               	addwf	eval_poly@d,w
  3398  0EAA  0084               	movwf	4
  3399  0EAB  120A  158A  2000  120A  158A  	fcall	stringdir
  3400  0EB0  00BE               	movwf	___ftadd@f1
  3401  0EB1  120A  158A  2000  120A  158A  	fcall	stringdir
  3402  0EB6  00BF               	movwf	___ftadd@f1+1
  3403  0EB7  120A  158A  2000  120A  158A  	fcall	stringdir
  3404  0EBC  00C0               	movwf	___ftadd@f1+2
  3405  0EBD  0852               	movf	eval_poly@res,w
  3406  0EBE  00AE               	movwf	___ftmul@f1
  3407  0EBF  0853               	movf	eval_poly@res+1,w
  3408  0EC0  00AF               	movwf	___ftmul@f1+1
  3409  0EC1  0854               	movf	eval_poly@res+2,w
  3410  0EC2  00B0               	movwf	___ftmul@f1+2
  3411  0EC3  084B               	movf	eval_poly@x,w
  3412  0EC4  00B1               	movwf	___ftmul@f2
  3413  0EC5  084C               	movf	eval_poly@x+1,w
  3414  0EC6  00B2               	movwf	___ftmul@f2+1
  3415  0EC7  084D               	movf	eval_poly@x+2,w
  3416  0EC8  00B3               	movwf	___ftmul@f2+2
  3417  0EC9  120A  118A  24B6  120A  158A  	fcall	___ftmul
  3418  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0ED0  082E               	movf	?___ftmul,w
  3421  0ED1  00C1               	movwf	___ftadd@f2
  3422  0ED2  082F               	movf	?___ftmul+1,w
  3423  0ED3  00C2               	movwf	___ftadd@f2+1
  3424  0ED4  0830               	movf	?___ftmul+2,w
  3425  0ED5  00C3               	movwf	___ftadd@f2+2
  3426  0ED6  120A  118A  22B6  120A  158A  	fcall	___ftadd
  3427  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0EDD  083E               	movf	?___ftadd,w
  3430  0EDE  00D2               	movwf	eval_poly@res
  3431  0EDF  083F               	movf	?___ftadd+1,w
  3432  0EE0  00D3               	movwf	eval_poly@res+1
  3433  0EE1  0840               	movf	?___ftadd+2,w
  3434  0EE2  2E92               	goto	L2
  3435  0EE3                     l1700:	
  3436  0EE3  0852               	movf	eval_poly@res,w
  3437  0EE4  00CB               	movwf	?_eval_poly
  3438  0EE5  0853               	movf	eval_poly@res+1,w
  3439  0EE6  00CC               	movwf	?_eval_poly+1
  3440  0EE7  0854               	movf	eval_poly@res+2,w
  3441  0EE8  00CD               	movwf	?_eval_poly+2
  3442  0EE9  0008               	return
  3443  0EEA                     __end_of_eval_poly:	
  3444                           
  3445                           	psect	text14
  3446  04B6                     __ptext14:	
  3447 ;; *************** function ___ftmul *****************
  3448 ;; Defined at:
  3449 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  f1              3   14[BANK0 ] float 
  3452 ;;  f2              3   17[BANK0 ] float 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  3455 ;;  sign            1   29[BANK0 ] unsigned char 
  3456 ;;  cntr            1   28[BANK0 ] unsigned char 
  3457 ;;  exp             1   24[BANK0 ] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  3   14[BANK0 ] float 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       6       0       0       0
  3468 ;;      Locals:         0       6       0       0       0
  3469 ;;      Temps:          0       4       0       0       0
  3470 ;;      Totals:         0      16       0       0       0
  3471 ;;Total ram usage:       16 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		___ftpack
  3476 ;; This function is called by:
  3477 ;;		_pow
  3478 ;;		_exp
  3479 ;;		_log
  3480 ;;		_eval_poly
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function ___ftmul
  3486  04B6                     ___ftmul:	
  3487                           
  3488                           ;incstack = 0
  3489                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3490  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3491  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3492  04B8  082E               	movf	___ftmul@f1,w
  3493  04B9  00B4               	movwf	??___ftmul
  3494  04BA  082F               	movf	___ftmul@f1+1,w
  3495  04BB  00B5               	movwf	??___ftmul+1
  3496  04BC  0830               	movf	___ftmul@f1+2,w
  3497  04BD  00B6               	movwf	??___ftmul+2
  3498  04BE  1003               	clrc
  3499  04BF  0D35               	rlf	??___ftmul+1,w
  3500  04C0  0D36               	rlf	??___ftmul+2,w
  3501  04C1  00B7               	movwf	??___ftmul+3
  3502  04C2  0837               	movf	??___ftmul+3,w
  3503  04C3  00B8               	movwf	___ftmul@exp
  3504  04C4  0838               	movf	___ftmul@exp,w
  3505  04C5  1D03               	btfss	3,2
  3506  04C6  2CCE               	goto	l1490
  3507  04C7  3000               	movlw	0
  3508  04C8  00AE               	movwf	?___ftmul
  3509  04C9  3000               	movlw	0
  3510  04CA  00AF               	movwf	?___ftmul+1
  3511  04CB  3000               	movlw	0
  3512  04CC  00B0               	movwf	?___ftmul+2
  3513  04CD  0008               	return
  3514  04CE                     l1490:	
  3515  04CE  0831               	movf	___ftmul@f2,w
  3516  04CF  00B4               	movwf	??___ftmul
  3517  04D0  0832               	movf	___ftmul@f2+1,w
  3518  04D1  00B5               	movwf	??___ftmul+1
  3519  04D2  0833               	movf	___ftmul@f2+2,w
  3520  04D3  00B6               	movwf	??___ftmul+2
  3521  04D4  1003               	clrc
  3522  04D5  0D35               	rlf	??___ftmul+1,w
  3523  04D6  0D36               	rlf	??___ftmul+2,w
  3524  04D7  00B7               	movwf	??___ftmul+3
  3525  04D8  0837               	movf	??___ftmul+3,w
  3526  04D9  00BD               	movwf	___ftmul@sign
  3527  04DA  083D               	movf	___ftmul@sign,w
  3528  04DB  1D03               	btfss	3,2
  3529  04DC  2CE4               	goto	l1496
  3530  04DD  3000               	movlw	0
  3531  04DE  00AE               	movwf	?___ftmul
  3532  04DF  3000               	movlw	0
  3533  04E0  00AF               	movwf	?___ftmul+1
  3534  04E1  3000               	movlw	0
  3535  04E2  00B0               	movwf	?___ftmul+2
  3536  04E3  0008               	return
  3537  04E4                     l1496:	
  3538  04E4  083D               	movf	___ftmul@sign,w
  3539  04E5  3E7B               	addlw	123
  3540  04E6  00B4               	movwf	??___ftmul
  3541  04E7  0834               	movf	??___ftmul,w
  3542  04E8  07B8               	addwf	___ftmul@exp,f
  3543  04E9  082E               	movf	___ftmul@f1,w
  3544  04EA  00B4               	movwf	??___ftmul
  3545  04EB  082F               	movf	___ftmul@f1+1,w
  3546  04EC  00B5               	movwf	??___ftmul+1
  3547  04ED  0830               	movf	___ftmul@f1+2,w
  3548  04EE  00B6               	movwf	??___ftmul+2
  3549  04EF  3010               	movlw	16
  3550  04F0                     u1905:	
  3551  04F0  1003               	clrc
  3552  04F1  0CB6               	rrf	??___ftmul+2,f
  3553  04F2  0CB5               	rrf	??___ftmul+1,f
  3554  04F3  0CB4               	rrf	??___ftmul,f
  3555  04F4  3EFF               	addlw	-1
  3556  04F5  1D03               	skipz
  3557  04F6  2CF0               	goto	u1905
  3558  04F7  0834               	movf	??___ftmul,w
  3559  04F8  00B7               	movwf	??___ftmul+3
  3560  04F9  0837               	movf	??___ftmul+3,w
  3561  04FA  00BD               	movwf	___ftmul@sign
  3562  04FB  0831               	movf	___ftmul@f2,w
  3563  04FC  00B4               	movwf	??___ftmul
  3564  04FD  0832               	movf	___ftmul@f2+1,w
  3565  04FE  00B5               	movwf	??___ftmul+1
  3566  04FF  0833               	movf	___ftmul@f2+2,w
  3567  0500  00B6               	movwf	??___ftmul+2
  3568  0501  3010               	movlw	16
  3569  0502                     u1915:	
  3570  0502  1003               	clrc
  3571  0503  0CB6               	rrf	??___ftmul+2,f
  3572  0504  0CB5               	rrf	??___ftmul+1,f
  3573  0505  0CB4               	rrf	??___ftmul,f
  3574  0506  3EFF               	addlw	-1
  3575  0507  1D03               	skipz
  3576  0508  2D02               	goto	u1915
  3577  0509  0834               	movf	??___ftmul,w
  3578  050A  00B7               	movwf	??___ftmul+3
  3579  050B  0837               	movf	??___ftmul+3,w
  3580  050C  06BD               	xorwf	___ftmul@sign,f
  3581  050D  3080               	movlw	128
  3582  050E  00B4               	movwf	??___ftmul
  3583  050F  0834               	movf	??___ftmul,w
  3584  0510  05BD               	andwf	___ftmul@sign,f
  3585  0511  17AF               	bsf	___ftmul@f1+1,7
  3586  0512  17B2               	bsf	___ftmul@f2+1,7
  3587  0513  30FF               	movlw	255
  3588  0514  05B1               	andwf	___ftmul@f2,f
  3589  0515  30FF               	movlw	255
  3590  0516  05B2               	andwf	___ftmul@f2+1,f
  3591  0517  3000               	movlw	0
  3592  0518  05B3               	andwf	___ftmul@f2+2,f
  3593  0519  3000               	movlw	0
  3594  051A  00B9               	movwf	___ftmul@f3_as_product
  3595  051B  3000               	movlw	0
  3596  051C  00BA               	movwf	___ftmul@f3_as_product+1
  3597  051D  3000               	movlw	0
  3598  051E  00BB               	movwf	___ftmul@f3_as_product+2
  3599  051F  3007               	movlw	7
  3600  0520  00B4               	movwf	??___ftmul
  3601  0521  0834               	movf	??___ftmul,w
  3602  0522  00BC               	movwf	___ftmul@cntr
  3603  0523                     l1508:	
  3604  0523  1C2E               	btfss	___ftmul@f1,0
  3605  0524  2D33               	goto	l1512
  3606  0525  0831               	movf	___ftmul@f2,w
  3607  0526  07B9               	addwf	___ftmul@f3_as_product,f
  3608  0527  0832               	movf	___ftmul@f2+1,w
  3609  0528  1103               	clrz
  3610  0529  1803               	skipnc
  3611  052A  0A32               	incf	___ftmul@f2+1,w
  3612  052B  1D03               	btfss	3,2
  3613  052C  07BA               	addwf	___ftmul@f3_as_product+1,f
  3614  052D  0833               	movf	___ftmul@f2+2,w
  3615  052E  1103               	clrz
  3616  052F  1803               	skipnc
  3617  0530  0A33               	incf	___ftmul@f2+2,w
  3618  0531  1D03               	btfss	3,2
  3619  0532  07BB               	addwf	___ftmul@f3_as_product+2,f
  3620  0533                     l1512:	
  3621  0533  3001               	movlw	1
  3622  0534                     u1945:	
  3623  0534  1003               	clrc
  3624  0535  0CB0               	rrf	___ftmul@f1+2,f
  3625  0536  0CAF               	rrf	___ftmul@f1+1,f
  3626  0537  0CAE               	rrf	___ftmul@f1,f
  3627  0538  3EFF               	addlw	-1
  3628  0539  1D03               	skipz
  3629  053A  2D34               	goto	u1945
  3630  053B  3001               	movlw	1
  3631  053C                     u1955:	
  3632  053C  1003               	clrc
  3633  053D  0DB1               	rlf	___ftmul@f2,f
  3634  053E  0DB2               	rlf	___ftmul@f2+1,f
  3635  053F  0DB3               	rlf	___ftmul@f2+2,f
  3636  0540  3EFF               	addlw	-1
  3637  0541  1D03               	skipz
  3638  0542  2D3C               	goto	u1955
  3639  0543  3001               	movlw	1
  3640  0544  02BC               	subwf	___ftmul@cntr,f
  3641  0545  1D03               	btfss	3,2
  3642  0546  2D23               	goto	l1508
  3643  0547  3009               	movlw	9
  3644  0548  00B4               	movwf	??___ftmul
  3645  0549  0834               	movf	??___ftmul,w
  3646  054A  00BC               	movwf	___ftmul@cntr
  3647  054B                     l1520:	
  3648  054B  1C2E               	btfss	___ftmul@f1,0
  3649  054C  2D5B               	goto	l1524
  3650  054D  0831               	movf	___ftmul@f2,w
  3651  054E  07B9               	addwf	___ftmul@f3_as_product,f
  3652  054F  0832               	movf	___ftmul@f2+1,w
  3653  0550  1103               	clrz
  3654  0551  1803               	skipnc
  3655  0552  0A32               	incf	___ftmul@f2+1,w
  3656  0553  1D03               	btfss	3,2
  3657  0554  07BA               	addwf	___ftmul@f3_as_product+1,f
  3658  0555  0833               	movf	___ftmul@f2+2,w
  3659  0556  1103               	clrz
  3660  0557  1803               	skipnc
  3661  0558  0A33               	incf	___ftmul@f2+2,w
  3662  0559  1D03               	btfss	3,2
  3663  055A  07BB               	addwf	___ftmul@f3_as_product+2,f
  3664  055B                     l1524:	
  3665  055B  3001               	movlw	1
  3666  055C                     u1995:	
  3667  055C  1003               	clrc
  3668  055D  0CB0               	rrf	___ftmul@f1+2,f
  3669  055E  0CAF               	rrf	___ftmul@f1+1,f
  3670  055F  0CAE               	rrf	___ftmul@f1,f
  3671  0560  3EFF               	addlw	-1
  3672  0561  1D03               	skipz
  3673  0562  2D5C               	goto	u1995
  3674  0563  3001               	movlw	1
  3675  0564                     u2005:	
  3676  0564  1003               	clrc
  3677  0565  0CBB               	rrf	___ftmul@f3_as_product+2,f
  3678  0566  0CBA               	rrf	___ftmul@f3_as_product+1,f
  3679  0567  0CB9               	rrf	___ftmul@f3_as_product,f
  3680  0568  3EFF               	addlw	-1
  3681  0569  1D03               	skipz
  3682  056A  2D64               	goto	u2005
  3683  056B  3001               	movlw	1
  3684  056C  02BC               	subwf	___ftmul@cntr,f
  3685  056D  1D03               	btfss	3,2
  3686  056E  2D4B               	goto	l1520
  3687  056F  0839               	movf	___ftmul@f3_as_product,w
  3688  0570  00A0               	movwf	___ftpack@arg
  3689  0571  083A               	movf	___ftmul@f3_as_product+1,w
  3690  0572  00A1               	movwf	___ftpack@arg+1
  3691  0573  083B               	movf	___ftmul@f3_as_product+2,w
  3692  0574  00A2               	movwf	___ftpack@arg+2
  3693  0575  0838               	movf	___ftmul@exp,w
  3694  0576  00B4               	movwf	??___ftmul
  3695  0577  0834               	movf	??___ftmul,w
  3696  0578  00A3               	movwf	___ftpack@exp
  3697  0579  083D               	movf	___ftmul@sign,w
  3698  057A  00B5               	movwf	??___ftmul+1
  3699  057B  0835               	movf	??___ftmul+1,w
  3700  057C  00A4               	movwf	___ftpack@sign
  3701  057D  120A  158A  2592   	fcall	___ftpack
  3702  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0582  0820               	movf	?___ftpack,w
  3705  0583  00AE               	movwf	?___ftmul
  3706  0584  0821               	movf	?___ftpack+1,w
  3707  0585  00AF               	movwf	?___ftmul+1
  3708  0586  0822               	movf	?___ftpack+2,w
  3709  0587  00B0               	movwf	?___ftmul+2
  3710  0588  0008               	return
  3711  0589                     __end_of___ftmul:	
  3712                           
  3713                           	psect	text15
  3714  0B2D                     __ptext15:	
  3715 ;; *************** function ___bmul *****************
  3716 ;; Defined at:
  3717 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  multiplier      1    wreg     unsigned char 
  3720 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3723 ;;  product         1    2[BANK0 ] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      unsigned char 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       1       0       0       0
  3734 ;;      Locals:         0       2       0       0       0
  3735 ;;      Temps:          0       1       0       0       0
  3736 ;;      Totals:         0       4       0       0       0
  3737 ;;Total ram usage:        4 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    2
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_eval_poly
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function ___bmul
  3749  0B2D                     ___bmul:	
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3753                           ;___bmul@multiplier stored from wreg
  3754  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0B2F  00A3               	movwf	___bmul@multiplier
  3757  0B30  01A2               	clrf	___bmul@product
  3758  0B31                     l1366:	
  3759  0B31  1C23               	btfss	___bmul@multiplier,0
  3760  0B32  2B37               	goto	l1370
  3761  0B33  0820               	movf	___bmul@multiplicand,w
  3762  0B34  00A1               	movwf	??___bmul
  3763  0B35  0821               	movf	??___bmul,w
  3764  0B36  07A2               	addwf	___bmul@product,f
  3765  0B37                     l1370:	
  3766  0B37  1003               	clrc
  3767  0B38  0DA0               	rlf	___bmul@multiplicand,f
  3768  0B39  1003               	clrc
  3769  0B3A  0CA3               	rrf	___bmul@multiplier,f
  3770  0B3B  0823               	movf	___bmul@multiplier,w
  3771  0B3C  1D03               	btfss	3,2
  3772  0B3D  2B31               	goto	l1366
  3773  0B3E  0822               	movf	___bmul@product,w
  3774  0B3F  0008               	return
  3775  0B40                     __end_of___bmul:	
  3776                           
  3777                           	psect	text16
  3778  0B40                     __ptext16:	
  3779 ;; *************** function ___ftsub *****************
  3780 ;; Defined at:
  3781 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  f2              3   43[BANK0 ] float 
  3784 ;;  f1              3   46[BANK0 ] float 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  3   43[BANK0 ] float 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3796 ;;      Params:         0       6       0       0       0
  3797 ;;      Locals:         0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0
  3799 ;;      Totals:         0       6       0       0       0
  3800 ;;Total ram usage:        6 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    4
  3803 ;; This function calls:
  3804 ;;		___ftadd
  3805 ;; This function is called by:
  3806 ;;		_exp
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function ___ftsub
  3812  0B40                     ___ftsub:	
  3813                           
  3814                           ;incstack = 0
  3815                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3816  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0B42  084D               	movf	___ftsub@f2+2,w
  3819  0B43  044C               	iorwf	___ftsub@f2+1,w
  3820  0B44  044B               	iorwf	___ftsub@f2,w
  3821  0B45  1903               	skipnz
  3822  0B46  2B49               	goto	l1662
  3823  0B47  3080               	movlw	128
  3824  0B48  06CD               	xorwf	___ftsub@f2+2,f
  3825  0B49                     l1662:	
  3826  0B49  084E               	movf	___ftsub@f1,w
  3827  0B4A  00BE               	movwf	___ftadd@f1
  3828  0B4B  084F               	movf	___ftsub@f1+1,w
  3829  0B4C  00BF               	movwf	___ftadd@f1+1
  3830  0B4D  0850               	movf	___ftsub@f1+2,w
  3831  0B4E  00C0               	movwf	___ftadd@f1+2
  3832  0B4F  084B               	movf	___ftsub@f2,w
  3833  0B50  00C1               	movwf	___ftadd@f2
  3834  0B51  084C               	movf	___ftsub@f2+1,w
  3835  0B52  00C2               	movwf	___ftadd@f2+1
  3836  0B53  084D               	movf	___ftsub@f2+2,w
  3837  0B54  00C3               	movwf	___ftadd@f2+2
  3838  0B55  120A  118A  22B6   	fcall	___ftadd
  3839  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0B5A  083E               	movf	?___ftadd,w
  3842  0B5B  00CB               	movwf	?___ftsub
  3843  0B5C  083F               	movf	?___ftadd+1,w
  3844  0B5D  00CC               	movwf	?___ftsub+1
  3845  0B5E  0840               	movf	?___ftadd+2,w
  3846  0B5F  00CD               	movwf	?___ftsub+2
  3847  0B60  0008               	return
  3848  0B61                     __end_of___ftsub:	
  3849                           
  3850                           	psect	text17
  3851  02B6                     __ptext17:	
  3852 ;; *************** function ___ftadd *****************
  3853 ;; Defined at:
  3854 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  f1              3   30[BANK0 ] float 
  3857 ;;  f2              3   33[BANK0 ] float 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  exp1            1   42[BANK0 ] unsigned char 
  3860 ;;  exp2            1   41[BANK0 ] unsigned char 
  3861 ;;  sign            1   40[BANK0 ] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  3   30[BANK0 ] float 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       6       0       0       0
  3872 ;;      Locals:         0       3       0       0       0
  3873 ;;      Temps:          0       4       0       0       0
  3874 ;;      Totals:         0      13       0       0       0
  3875 ;;Total ram usage:       13 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    3
  3878 ;; This function calls:
  3879 ;;		___ftpack
  3880 ;; This function is called by:
  3881 ;;		___ftsub
  3882 ;;		_floor
  3883 ;;		_log
  3884 ;;		_eval_poly
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function ___ftadd
  3890  02B6                     ___ftadd:	
  3891                           
  3892                           ;incstack = 0
  3893                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3894  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3895  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3896  02B8  083E               	movf	___ftadd@f1,w
  3897  02B9  00C4               	movwf	??___ftadd
  3898  02BA  083F               	movf	___ftadd@f1+1,w
  3899  02BB  00C5               	movwf	??___ftadd+1
  3900  02BC  0840               	movf	___ftadd@f1+2,w
  3901  02BD  00C6               	movwf	??___ftadd+2
  3902  02BE  1003               	clrc
  3903  02BF  0D45               	rlf	??___ftadd+1,w
  3904  02C0  0D46               	rlf	??___ftadd+2,w
  3905  02C1  00C7               	movwf	??___ftadd+3
  3906  02C2  0847               	movf	??___ftadd+3,w
  3907  02C3  00CA               	movwf	___ftadd@exp1
  3908  02C4  0841               	movf	___ftadd@f2,w
  3909  02C5  00C4               	movwf	??___ftadd
  3910  02C6  0842               	movf	___ftadd@f2+1,w
  3911  02C7  00C5               	movwf	??___ftadd+1
  3912  02C8  0843               	movf	___ftadd@f2+2,w
  3913  02C9  00C6               	movwf	??___ftadd+2
  3914  02CA  1003               	clrc
  3915  02CB  0D45               	rlf	??___ftadd+1,w
  3916  02CC  0D46               	rlf	??___ftadd+2,w
  3917  02CD  00C7               	movwf	??___ftadd+3
  3918  02CE  0847               	movf	??___ftadd+3,w
  3919  02CF  00C9               	movwf	___ftadd@exp2
  3920  02D0  084A               	movf	___ftadd@exp1,w
  3921  02D1  1903               	btfsc	3,2
  3922  02D2  2ADF               	goto	l1400
  3923  02D3  0849               	movf	___ftadd@exp2,w
  3924  02D4  024A               	subwf	___ftadd@exp1,w
  3925  02D5  1803               	skipnc
  3926  02D6  2AE6               	goto	l1404
  3927  02D7  034A               	decf	___ftadd@exp1,w
  3928  02D8  3AFF               	xorlw	255
  3929  02D9  0749               	addwf	___ftadd@exp2,w
  3930  02DA  00C4               	movwf	??___ftadd
  3931  02DB  3019               	movlw	25
  3932  02DC  0244               	subwf	??___ftadd,w
  3933  02DD  1C03               	skipc
  3934  02DE  2AE6               	goto	l1404
  3935  02DF                     l1400:	
  3936  02DF  0841               	movf	___ftadd@f2,w
  3937  02E0  00BE               	movwf	?___ftadd
  3938  02E1  0842               	movf	___ftadd@f2+1,w
  3939  02E2  00BF               	movwf	?___ftadd+1
  3940  02E3  0843               	movf	___ftadd@f2+2,w
  3941  02E4  00C0               	movwf	?___ftadd+2
  3942  02E5  0008               	return
  3943  02E6                     l1404:	
  3944  02E6  0849               	movf	___ftadd@exp2,w
  3945  02E7  1903               	btfsc	3,2
  3946  02E8  0008               	return
  3947  02E9  084A               	movf	___ftadd@exp1,w
  3948  02EA  0249               	subwf	___ftadd@exp2,w
  3949  02EB  1803               	skipnc
  3950  02EC  2AF5               	goto	l1410
  3951  02ED  0349               	decf	___ftadd@exp2,w
  3952  02EE  3AFF               	xorlw	255
  3953  02EF  074A               	addwf	___ftadd@exp1,w
  3954  02F0  00C4               	movwf	??___ftadd
  3955  02F1  3019               	movlw	25
  3956  02F2  0244               	subwf	??___ftadd,w
  3957  02F3  1803               	btfsc	3,0
  3958  02F4  0008               	return
  3959  02F5                     l1410:	
  3960  02F5  3006               	movlw	6
  3961  02F6  00C4               	movwf	??___ftadd
  3962  02F7  0844               	movf	??___ftadd,w
  3963  02F8  00C8               	movwf	___ftadd@sign
  3964  02F9  1BC0               	btfsc	___ftadd@f1+2,7
  3965  02FA  17C8               	bsf	___ftadd@sign,7
  3966  02FB  1BC3               	btfsc	___ftadd@f2+2,7
  3967  02FC  1748               	bsf	___ftadd@sign,6
  3968  02FD  17BF               	bsf	___ftadd@f1+1,7
  3969  02FE  30FF               	movlw	255
  3970  02FF  05BE               	andwf	___ftadd@f1,f
  3971  0300  30FF               	movlw	255
  3972  0301  05BF               	andwf	___ftadd@f1+1,f
  3973  0302  3000               	movlw	0
  3974  0303  05C0               	andwf	___ftadd@f1+2,f
  3975  0304  17C2               	bsf	___ftadd@f2+1,7
  3976  0305  30FF               	movlw	255
  3977  0306  05C1               	andwf	___ftadd@f2,f
  3978  0307  30FF               	movlw	255
  3979  0308  05C2               	andwf	___ftadd@f2+1,f
  3980  0309  3000               	movlw	0
  3981  030A  05C3               	andwf	___ftadd@f2+2,f
  3982  030B  0849               	movf	___ftadd@exp2,w
  3983  030C  024A               	subwf	___ftadd@exp1,w
  3984  030D  1803               	skipnc
  3985  030E  2B35               	goto	l1432
  3986  030F                     l1422:	
  3987  030F  3001               	movlw	1
  3988  0310                     u1685:	
  3989  0310  1003               	clrc
  3990  0311  0DC1               	rlf	___ftadd@f2,f
  3991  0312  0DC2               	rlf	___ftadd@f2+1,f
  3992  0313  0DC3               	rlf	___ftadd@f2+2,f
  3993  0314  3EFF               	addlw	-1
  3994  0315  1D03               	skipz
  3995  0316  2B10               	goto	u1685
  3996  0317  3001               	movlw	1
  3997  0318  02C9               	subwf	___ftadd@exp2,f
  3998  0319  0849               	movf	___ftadd@exp2,w
  3999  031A  064A               	xorwf	___ftadd@exp1,w
  4000  031B  1903               	skipnz
  4001  031C  2B30               	goto	l1430
  4002  031D  3001               	movlw	1
  4003  031E  02C8               	subwf	___ftadd@sign,f
  4004  031F  0848               	movf	___ftadd@sign,w
  4005  0320  3907               	andlw	7
  4006  0321  1903               	btfsc	3,2
  4007  0322  2B30               	goto	l1430
  4008  0323  2B0F               	goto	l1422
  4009  0324                     l1428:	
  4010  0324  3001               	movlw	1
  4011  0325                     u1715:	
  4012  0325  1003               	clrc
  4013  0326  0CC0               	rrf	___ftadd@f1+2,f
  4014  0327  0CBF               	rrf	___ftadd@f1+1,f
  4015  0328  0CBE               	rrf	___ftadd@f1,f
  4016  0329  3EFF               	addlw	-1
  4017  032A  1D03               	skipz
  4018  032B  2B25               	goto	u1715
  4019  032C  3001               	movlw	1
  4020  032D  00C4               	movwf	??___ftadd
  4021  032E  0844               	movf	??___ftadd,w
  4022  032F  07CA               	addwf	___ftadd@exp1,f
  4023  0330                     l1430:	
  4024  0330  084A               	movf	___ftadd@exp1,w
  4025  0331  0649               	xorwf	___ftadd@exp2,w
  4026  0332  1903               	btfsc	3,2
  4027  0333  2B5E               	goto	l331
  4028  0334  2B24               	goto	l1428
  4029  0335                     l1432:	
  4030  0335  084A               	movf	___ftadd@exp1,w
  4031  0336  0249               	subwf	___ftadd@exp2,w
  4032  0337  1803               	skipnc
  4033  0338  2B5E               	goto	l331
  4034  0339                     l1434:	
  4035  0339  3001               	movlw	1
  4036  033A                     u1745:	
  4037  033A  1003               	clrc
  4038  033B  0DBE               	rlf	___ftadd@f1,f
  4039  033C  0DBF               	rlf	___ftadd@f1+1,f
  4040  033D  0DC0               	rlf	___ftadd@f1+2,f
  4041  033E  3EFF               	addlw	-1
  4042  033F  1D03               	skipz
  4043  0340  2B3A               	goto	u1745
  4044  0341  3001               	movlw	1
  4045  0342  02CA               	subwf	___ftadd@exp1,f
  4046  0343  0849               	movf	___ftadd@exp2,w
  4047  0344  064A               	xorwf	___ftadd@exp1,w
  4048  0345  1903               	skipnz
  4049  0346  2B5A               	goto	l1442
  4050  0347  3001               	movlw	1
  4051  0348  02C8               	subwf	___ftadd@sign,f
  4052  0349  0848               	movf	___ftadd@sign,w
  4053  034A  3907               	andlw	7
  4054  034B  1903               	btfsc	3,2
  4055  034C  2B5A               	goto	l1442
  4056  034D  2B39               	goto	l1434
  4057  034E                     l1440:	
  4058  034E  3001               	movlw	1
  4059  034F                     u1775:	
  4060  034F  1003               	clrc
  4061  0350  0CC3               	rrf	___ftadd@f2+2,f
  4062  0351  0CC2               	rrf	___ftadd@f2+1,f
  4063  0352  0CC1               	rrf	___ftadd@f2,f
  4064  0353  3EFF               	addlw	-1
  4065  0354  1D03               	skipz
  4066  0355  2B4F               	goto	u1775
  4067  0356  3001               	movlw	1
  4068  0357  00C4               	movwf	??___ftadd
  4069  0358  0844               	movf	??___ftadd,w
  4070  0359  07C9               	addwf	___ftadd@exp2,f
  4071  035A                     l1442:	
  4072  035A  084A               	movf	___ftadd@exp1,w
  4073  035B  0649               	xorwf	___ftadd@exp2,w
  4074  035C  1D03               	skipz
  4075  035D  2B4E               	goto	l1440
  4076  035E                     l331:	
  4077  035E  1FC8               	btfss	___ftadd@sign,7
  4078  035F  2B70               	goto	l1446
  4079  0360  30FF               	movlw	255
  4080  0361  06BE               	xorwf	___ftadd@f1,f
  4081  0362  30FF               	movlw	255
  4082  0363  06BF               	xorwf	___ftadd@f1+1,f
  4083  0364  30FF               	movlw	255
  4084  0365  06C0               	xorwf	___ftadd@f1+2,f
  4085  0366  3001               	movlw	1
  4086  0367  07BE               	addwf	___ftadd@f1,f
  4087  0368  3000               	movlw	0
  4088  0369  1803               	skipnc
  4089  036A  3001               	movlw	1
  4090  036B  07BF               	addwf	___ftadd@f1+1,f
  4091  036C  3000               	movlw	0
  4092  036D  1803               	skipnc
  4093  036E  3001               	movlw	1
  4094  036F  07C0               	addwf	___ftadd@f1+2,f
  4095  0370                     l1446:	
  4096  0370  1F48               	btfss	___ftadd@sign,6
  4097  0371  2B82               	goto	l1450
  4098  0372  30FF               	movlw	255
  4099  0373  06C1               	xorwf	___ftadd@f2,f
  4100  0374  30FF               	movlw	255
  4101  0375  06C2               	xorwf	___ftadd@f2+1,f
  4102  0376  30FF               	movlw	255
  4103  0377  06C3               	xorwf	___ftadd@f2+2,f
  4104  0378  3001               	movlw	1
  4105  0379  07C1               	addwf	___ftadd@f2,f
  4106  037A  3000               	movlw	0
  4107  037B  1803               	skipnc
  4108  037C  3001               	movlw	1
  4109  037D  07C2               	addwf	___ftadd@f2+1,f
  4110  037E  3000               	movlw	0
  4111  037F  1803               	skipnc
  4112  0380  3001               	movlw	1
  4113  0381  07C3               	addwf	___ftadd@f2+2,f
  4114  0382                     l1450:	
  4115  0382  01C8               	clrf	___ftadd@sign
  4116  0383  083E               	movf	___ftadd@f1,w
  4117  0384  07C1               	addwf	___ftadd@f2,f
  4118  0385  083F               	movf	___ftadd@f1+1,w
  4119  0386  1103               	clrz
  4120  0387  1803               	skipnc
  4121  0388  0A3F               	incf	___ftadd@f1+1,w
  4122  0389  1D03               	btfss	3,2
  4123  038A  07C2               	addwf	___ftadd@f2+1,f
  4124  038B  0840               	movf	___ftadd@f1+2,w
  4125  038C  1103               	clrz
  4126  038D  1803               	skipnc
  4127  038E  0A40               	incf	___ftadd@f1+2,w
  4128  038F  1D03               	btfss	3,2
  4129  0390  07C3               	addwf	___ftadd@f2+2,f
  4130  0391  1FC3               	btfss	___ftadd@f2+2,7
  4131  0392  2BA5               	goto	l1460
  4132  0393  30FF               	movlw	255
  4133  0394  06C1               	xorwf	___ftadd@f2,f
  4134  0395  30FF               	movlw	255
  4135  0396  06C2               	xorwf	___ftadd@f2+1,f
  4136  0397  30FF               	movlw	255
  4137  0398  06C3               	xorwf	___ftadd@f2+2,f
  4138  0399  3001               	movlw	1
  4139  039A  07C1               	addwf	___ftadd@f2,f
  4140  039B  3000               	movlw	0
  4141  039C  1803               	skipnc
  4142  039D  3001               	movlw	1
  4143  039E  07C2               	addwf	___ftadd@f2+1,f
  4144  039F  3000               	movlw	0
  4145  03A0  1803               	skipnc
  4146  03A1  3001               	movlw	1
  4147  03A2  07C3               	addwf	___ftadd@f2+2,f
  4148  03A3  01C8               	clrf	___ftadd@sign
  4149  03A4  0AC8               	incf	___ftadd@sign,f
  4150  03A5                     l1460:	
  4151  03A5  0841               	movf	___ftadd@f2,w
  4152  03A6  00A0               	movwf	___ftpack@arg
  4153  03A7  0842               	movf	___ftadd@f2+1,w
  4154  03A8  00A1               	movwf	___ftpack@arg+1
  4155  03A9  0843               	movf	___ftadd@f2+2,w
  4156  03AA  00A2               	movwf	___ftpack@arg+2
  4157  03AB  084A               	movf	___ftadd@exp1,w
  4158  03AC  00C4               	movwf	??___ftadd
  4159  03AD  0844               	movf	??___ftadd,w
  4160  03AE  00A3               	movwf	___ftpack@exp
  4161  03AF  0848               	movf	___ftadd@sign,w
  4162  03B0  00C5               	movwf	??___ftadd+1
  4163  03B1  0845               	movf	??___ftadd+1,w
  4164  03B2  00A4               	movwf	___ftpack@sign
  4165  03B3  120A  158A  2592   	fcall	___ftpack
  4166  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  4167  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  4168  03B8  0820               	movf	?___ftpack,w
  4169  03B9  00BE               	movwf	?___ftadd
  4170  03BA  0821               	movf	?___ftpack+1,w
  4171  03BB  00BF               	movwf	?___ftadd+1
  4172  03BC  0822               	movf	?___ftpack+2,w
  4173  03BD  00C0               	movwf	?___ftadd+2
  4174  03BE  0008               	return
  4175  03BF                     __end_of___ftadd:	
  4176                           
  4177                           	psect	text18
  4178  07F5                     __ptext18:	
  4179 ;; *************** function ___ftneg *****************
  4180 ;; Defined at:
  4181 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  f1              3    0[BANK0 ] float 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  3    0[BANK0 ] float 
  4188 ;; Registers used:
  4189 ;;		wreg
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       3       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0
  4198 ;;      Totals:         0       3       0       0       0
  4199 ;;Total ram usage:        3 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    2
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_pow
  4206 ;;		_exp
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function ___ftneg
  4212  07F5                     ___ftneg:	
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in ___ftneg: [wreg]
  4216  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  4217  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  4218  07F7  0822               	movf	___ftneg@f1+2,w
  4219  07F8  0421               	iorwf	___ftneg@f1+1,w
  4220  07F9  0420               	iorwf	___ftneg@f1,w
  4221  07FA  1903               	skipnz
  4222  07FB  0008               	return
  4223  07FC  3080               	movlw	128
  4224  07FD  06A2               	xorwf	___ftneg@f1+2,f
  4225  07FE  0008               	return
  4226  07FF                     __end_of___ftneg:	
  4227                           
  4228                           	psect	text19
  4229  0657                     __ptext19:	
  4230 ;; *************** function ___ftdiv *****************
  4231 ;; Defined at:
  4232 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  f2              3    8[BANK0 ] float 
  4235 ;;  f1              3   11[BANK0 ] float 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  f3              3   19[BANK0 ] float 
  4238 ;;  sign            1   23[BANK0 ] unsigned char 
  4239 ;;  exp             1   22[BANK0 ] unsigned char 
  4240 ;;  cntr            1   18[BANK0 ] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  3    8[BANK0 ] float 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         0       6       0       0       0
  4251 ;;      Locals:         0       6       0       0       0
  4252 ;;      Temps:          0       4       0       0       0
  4253 ;;      Totals:         0      16       0       0       0
  4254 ;;Total ram usage:       16 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    3
  4257 ;; This function calls:
  4258 ;;		___ftpack
  4259 ;; This function is called by:
  4260 ;;		_exp
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function ___ftdiv
  4266  0657                     ___ftdiv:	
  4267                           
  4268                           ;incstack = 0
  4269                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4270  0657  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0658  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0659  082B               	movf	___ftdiv@f1,w
  4273  065A  00AE               	movwf	??___ftdiv
  4274  065B  082C               	movf	___ftdiv@f1+1,w
  4275  065C  00AF               	movwf	??___ftdiv+1
  4276  065D  082D               	movf	___ftdiv@f1+2,w
  4277  065E  00B0               	movwf	??___ftdiv+2
  4278  065F  1003               	clrc
  4279  0660  0D2F               	rlf	??___ftdiv+1,w
  4280  0661  0D30               	rlf	??___ftdiv+2,w
  4281  0662  00B1               	movwf	??___ftdiv+3
  4282  0663  0831               	movf	??___ftdiv+3,w
  4283  0664  00B6               	movwf	___ftdiv@exp
  4284  0665  0836               	movf	___ftdiv@exp,w
  4285  0666  1D03               	btfss	3,2
  4286  0667  2E6F               	goto	l1614
  4287  0668  3000               	movlw	0
  4288  0669  00A8               	movwf	?___ftdiv
  4289  066A  3000               	movlw	0
  4290  066B  00A9               	movwf	?___ftdiv+1
  4291  066C  3000               	movlw	0
  4292  066D  00AA               	movwf	?___ftdiv+2
  4293  066E  0008               	return
  4294  066F                     l1614:	
  4295  066F  0828               	movf	___ftdiv@f2,w
  4296  0670  00AE               	movwf	??___ftdiv
  4297  0671  0829               	movf	___ftdiv@f2+1,w
  4298  0672  00AF               	movwf	??___ftdiv+1
  4299  0673  082A               	movf	___ftdiv@f2+2,w
  4300  0674  00B0               	movwf	??___ftdiv+2
  4301  0675  1003               	clrc
  4302  0676  0D2F               	rlf	??___ftdiv+1,w
  4303  0677  0D30               	rlf	??___ftdiv+2,w
  4304  0678  00B1               	movwf	??___ftdiv+3
  4305  0679  0831               	movf	??___ftdiv+3,w
  4306  067A  00B7               	movwf	___ftdiv@sign
  4307  067B  0837               	movf	___ftdiv@sign,w
  4308  067C  1D03               	btfss	3,2
  4309  067D  2E85               	goto	l1620
  4310  067E  3000               	movlw	0
  4311  067F  00A8               	movwf	?___ftdiv
  4312  0680  3000               	movlw	0
  4313  0681  00A9               	movwf	?___ftdiv+1
  4314  0682  3000               	movlw	0
  4315  0683  00AA               	movwf	?___ftdiv+2
  4316  0684  0008               	return
  4317  0685                     l1620:	
  4318  0685  3000               	movlw	0
  4319  0686  00B3               	movwf	___ftdiv@f3
  4320  0687  3000               	movlw	0
  4321  0688  00B4               	movwf	___ftdiv@f3+1
  4322  0689  3000               	movlw	0
  4323  068A  00B5               	movwf	___ftdiv@f3+2
  4324  068B  3089               	movlw	137
  4325  068C  0737               	addwf	___ftdiv@sign,w
  4326  068D  00AE               	movwf	??___ftdiv
  4327  068E  082E               	movf	??___ftdiv,w
  4328  068F  02B6               	subwf	___ftdiv@exp,f
  4329  0690  082B               	movf	___ftdiv@f1,w
  4330  0691  00AE               	movwf	??___ftdiv
  4331  0692  082C               	movf	___ftdiv@f1+1,w
  4332  0693  00AF               	movwf	??___ftdiv+1
  4333  0694  082D               	movf	___ftdiv@f1+2,w
  4334  0695  00B0               	movwf	??___ftdiv+2
  4335  0696  3010               	movlw	16
  4336  0697                     u2165:	
  4337  0697  1003               	clrc
  4338  0698  0CB0               	rrf	??___ftdiv+2,f
  4339  0699  0CAF               	rrf	??___ftdiv+1,f
  4340  069A  0CAE               	rrf	??___ftdiv,f
  4341  069B  3EFF               	addlw	-1
  4342  069C  1D03               	skipz
  4343  069D  2E97               	goto	u2165
  4344  069E  082E               	movf	??___ftdiv,w
  4345  069F  00B1               	movwf	??___ftdiv+3
  4346  06A0  0831               	movf	??___ftdiv+3,w
  4347  06A1  00B7               	movwf	___ftdiv@sign
  4348  06A2  0828               	movf	___ftdiv@f2,w
  4349  06A3  00AE               	movwf	??___ftdiv
  4350  06A4  0829               	movf	___ftdiv@f2+1,w
  4351  06A5  00AF               	movwf	??___ftdiv+1
  4352  06A6  082A               	movf	___ftdiv@f2+2,w
  4353  06A7  00B0               	movwf	??___ftdiv+2
  4354  06A8  3010               	movlw	16
  4355  06A9                     u2175:	
  4356  06A9  1003               	clrc
  4357  06AA  0CB0               	rrf	??___ftdiv+2,f
  4358  06AB  0CAF               	rrf	??___ftdiv+1,f
  4359  06AC  0CAE               	rrf	??___ftdiv,f
  4360  06AD  3EFF               	addlw	-1
  4361  06AE  1D03               	skipz
  4362  06AF  2EA9               	goto	u2175
  4363  06B0  082E               	movf	??___ftdiv,w
  4364  06B1  00B1               	movwf	??___ftdiv+3
  4365  06B2  0831               	movf	??___ftdiv+3,w
  4366  06B3  06B7               	xorwf	___ftdiv@sign,f
  4367  06B4  3080               	movlw	128
  4368  06B5  00AE               	movwf	??___ftdiv
  4369  06B6  082E               	movf	??___ftdiv,w
  4370  06B7  05B7               	andwf	___ftdiv@sign,f
  4371  06B8  17AC               	bsf	___ftdiv@f1+1,7
  4372  06B9  30FF               	movlw	255
  4373  06BA  05AB               	andwf	___ftdiv@f1,f
  4374  06BB  30FF               	movlw	255
  4375  06BC  05AC               	andwf	___ftdiv@f1+1,f
  4376  06BD  3000               	movlw	0
  4377  06BE  05AD               	andwf	___ftdiv@f1+2,f
  4378  06BF  17A9               	bsf	___ftdiv@f2+1,7
  4379  06C0  30FF               	movlw	255
  4380  06C1  05A8               	andwf	___ftdiv@f2,f
  4381  06C2  30FF               	movlw	255
  4382  06C3  05A9               	andwf	___ftdiv@f2+1,f
  4383  06C4  3000               	movlw	0
  4384  06C5  05AA               	andwf	___ftdiv@f2+2,f
  4385  06C6  3018               	movlw	24
  4386  06C7  00AE               	movwf	??___ftdiv
  4387  06C8  082E               	movf	??___ftdiv,w
  4388  06C9  00B2               	movwf	___ftdiv@cntr
  4389  06CA                     l1634:	
  4390  06CA  3001               	movlw	1
  4391  06CB                     u2185:	
  4392  06CB  1003               	clrc
  4393  06CC  0DB3               	rlf	___ftdiv@f3,f
  4394  06CD  0DB4               	rlf	___ftdiv@f3+1,f
  4395  06CE  0DB5               	rlf	___ftdiv@f3+2,f
  4396  06CF  3EFF               	addlw	-1
  4397  06D0  1D03               	skipz
  4398  06D1  2ECB               	goto	u2185
  4399  06D2  082A               	movf	___ftdiv@f2+2,w
  4400  06D3  022D               	subwf	___ftdiv@f1+2,w
  4401  06D4  1D03               	skipz
  4402  06D5  2EDC               	goto	u2195
  4403  06D6  0829               	movf	___ftdiv@f2+1,w
  4404  06D7  022C               	subwf	___ftdiv@f1+1,w
  4405  06D8  1D03               	skipz
  4406  06D9  2EDC               	goto	u2195
  4407  06DA  0828               	movf	___ftdiv@f2,w
  4408  06DB  022B               	subwf	___ftdiv@f1,w
  4409  06DC                     u2195:	
  4410  06DC  1C03               	skipc
  4411  06DD  2EE9               	goto	l1642
  4412  06DE  0828               	movf	___ftdiv@f2,w
  4413  06DF  02AB               	subwf	___ftdiv@f1,f
  4414  06E0  0829               	movf	___ftdiv@f2+1,w
  4415  06E1  1C03               	skipc
  4416  06E2  0F29               	incfsz	___ftdiv@f2+1,w
  4417  06E3  02AC               	subwf	___ftdiv@f1+1,f
  4418  06E4  082A               	movf	___ftdiv@f2+2,w
  4419  06E5  1C03               	skipc
  4420  06E6  0A2A               	incf	___ftdiv@f2+2,w
  4421  06E7  02AD               	subwf	___ftdiv@f1+2,f
  4422  06E8  1433               	bsf	___ftdiv@f3,0
  4423  06E9                     l1642:	
  4424  06E9  3001               	movlw	1
  4425  06EA                     u2205:	
  4426  06EA  1003               	clrc
  4427  06EB  0DAB               	rlf	___ftdiv@f1,f
  4428  06EC  0DAC               	rlf	___ftdiv@f1+1,f
  4429  06ED  0DAD               	rlf	___ftdiv@f1+2,f
  4430  06EE  3EFF               	addlw	-1
  4431  06EF  1D03               	skipz
  4432  06F0  2EEA               	goto	u2205
  4433  06F1  3001               	movlw	1
  4434  06F2  02B2               	subwf	___ftdiv@cntr,f
  4435  06F3  1D03               	btfss	3,2
  4436  06F4  2ECA               	goto	l1634
  4437  06F5  0833               	movf	___ftdiv@f3,w
  4438  06F6  00A0               	movwf	___ftpack@arg
  4439  06F7  0834               	movf	___ftdiv@f3+1,w
  4440  06F8  00A1               	movwf	___ftpack@arg+1
  4441  06F9  0835               	movf	___ftdiv@f3+2,w
  4442  06FA  00A2               	movwf	___ftpack@arg+2
  4443  06FB  0836               	movf	___ftdiv@exp,w
  4444  06FC  00AE               	movwf	??___ftdiv
  4445  06FD  082E               	movf	??___ftdiv,w
  4446  06FE  00A3               	movwf	___ftpack@exp
  4447  06FF  0837               	movf	___ftdiv@sign,w
  4448  0700  00AF               	movwf	??___ftdiv+1
  4449  0701  082F               	movf	??___ftdiv+1,w
  4450  0702  00A4               	movwf	___ftpack@sign
  4451  0703  120A  158A  2592   	fcall	___ftpack
  4452  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0708  0820               	movf	?___ftpack,w
  4455  0709  00A8               	movwf	?___ftdiv
  4456  070A  0821               	movf	?___ftpack+1,w
  4457  070B  00A9               	movwf	?___ftdiv+1
  4458  070C  0822               	movf	?___ftpack+2,w
  4459  070D  00AA               	movwf	?___ftdiv+2
  4460  070E  0008               	return
  4461  070F                     __end_of___ftdiv:	
  4462                           
  4463                           	psect	text20
  4464  0B61                     __ptext20:	
  4465 ;; *************** function ___awtoft *****************
  4466 ;; Defined at:
  4467 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  c               2    8[BANK0 ] int 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  sign            1   13[BANK0 ] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  3    8[BANK0 ] float 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       3       0       0       0
  4482 ;;      Locals:         0       1       0       0       0
  4483 ;;      Temps:          0       2       0       0       0
  4484 ;;      Totals:         0       6       0       0       0
  4485 ;;Total ram usage:        6 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    3
  4488 ;; This function calls:
  4489 ;;		___ftpack
  4490 ;; This function is called by:
  4491 ;;		_main
  4492 ;;		_exp
  4493 ;;		_log
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function ___awtoft
  4499  0B61                     ___awtoft:	
  4500                           
  4501                           ;incstack = 0
  4502                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4503  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0B63  01AD               	clrf	___awtoft@sign
  4506  0B64  1FA9               	btfss	___awtoft@c+1,7
  4507  0B65  2B6D               	goto	l1604
  4508  0B66  09A8               	comf	___awtoft@c,f
  4509  0B67  09A9               	comf	___awtoft@c+1,f
  4510  0B68  0AA8               	incf	___awtoft@c,f
  4511  0B69  1903               	skipnz
  4512  0B6A  0AA9               	incf	___awtoft@c+1,f
  4513  0B6B  01AD               	clrf	___awtoft@sign
  4514  0B6C  0AAD               	incf	___awtoft@sign,f
  4515  0B6D                     l1604:	
  4516  0B6D  0828               	movf	___awtoft@c,w
  4517  0B6E  00A0               	movwf	___ftpack@arg
  4518  0B6F  0829               	movf	___awtoft@c+1,w
  4519  0B70  00A1               	movwf	___ftpack@arg+1
  4520  0B71  01A2               	clrf	___ftpack@arg+2
  4521  0B72  308E               	movlw	142
  4522  0B73  00AB               	movwf	??___awtoft
  4523  0B74  082B               	movf	??___awtoft,w
  4524  0B75  00A3               	movwf	___ftpack@exp
  4525  0B76  082D               	movf	___awtoft@sign,w
  4526  0B77  00AC               	movwf	??___awtoft+1
  4527  0B78  082C               	movf	??___awtoft+1,w
  4528  0B79  00A4               	movwf	___ftpack@sign
  4529  0B7A  120A  158A  2592   	fcall	___ftpack
  4530  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  4531  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  4532  0B7F  0820               	movf	?___ftpack,w
  4533  0B80  00A8               	movwf	?___awtoft
  4534  0B81  0821               	movf	?___ftpack+1,w
  4535  0B82  00A9               	movwf	?___awtoft+1
  4536  0B83  0822               	movf	?___ftpack+2,w
  4537  0B84  00AA               	movwf	?___awtoft+2
  4538  0B85  0008               	return
  4539  0B86                     __end_of___awtoft:	
  4540                           
  4541                           	psect	text21
  4542  0BAF                     __ptext21:	
  4543 ;; *************** function ___lltoft *****************
  4544 ;; Defined at:
  4545 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  c               4    8[BANK0 ] unsigned long 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  exp             1   13[BANK0 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  3    8[BANK0 ] float 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         0       4       0       0       0
  4560 ;;      Locals:         0       1       0       0       0
  4561 ;;      Temps:          0       1       0       0       0
  4562 ;;      Totals:         0       6       0       0       0
  4563 ;;Total ram usage:        6 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    3
  4566 ;; This function calls:
  4567 ;;		___ftpack
  4568 ;; This function is called by:
  4569 ;;		_pow
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function ___lltoft
  4575  0BAF                     ___lltoft:	
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4579  0BAF  308E               	movlw	142
  4580  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  4581  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  4582  0BB2  00AC               	movwf	??___lltoft
  4583  0BB3  082C               	movf	??___lltoft,w
  4584  0BB4  00AD               	movwf	___lltoft@exp
  4585  0BB5                     l1760:	
  4586  0BB5  30FF               	movlw	255
  4587  0BB6  052B               	andwf	___lltoft@c+3,w
  4588  0BB7  1903               	btfsc	3,2
  4589  0BB8  2BC7               	goto	l1762
  4590  0BB9  3001               	movlw	1
  4591  0BBA                     u2385:	
  4592  0BBA  1003               	clrc
  4593  0BBB  0CAB               	rrf	___lltoft@c+3,f
  4594  0BBC  0CAA               	rrf	___lltoft@c+2,f
  4595  0BBD  0CA9               	rrf	___lltoft@c+1,f
  4596  0BBE  0CA8               	rrf	___lltoft@c,f
  4597  0BBF  3EFF               	addlw	-1
  4598  0BC0  1D03               	skipz
  4599  0BC1  2BBA               	goto	u2385
  4600  0BC2  3001               	movlw	1
  4601  0BC3  00AC               	movwf	??___lltoft
  4602  0BC4  082C               	movf	??___lltoft,w
  4603  0BC5  07AD               	addwf	___lltoft@exp,f
  4604  0BC6  2BB5               	goto	l1760
  4605  0BC7                     l1762:	
  4606  0BC7  0828               	movf	___lltoft@c,w
  4607  0BC8  00A0               	movwf	___ftpack@arg
  4608  0BC9  0829               	movf	___lltoft@c+1,w
  4609  0BCA  00A1               	movwf	___ftpack@arg+1
  4610  0BCB  082A               	movf	___lltoft@c+2,w
  4611  0BCC  00A2               	movwf	___ftpack@arg+2
  4612  0BCD  082D               	movf	___lltoft@exp,w
  4613  0BCE  00AC               	movwf	??___lltoft
  4614  0BCF  082C               	movf	??___lltoft,w
  4615  0BD0  00A3               	movwf	___ftpack@exp
  4616  0BD1  01A4               	clrf	___ftpack@sign
  4617  0BD2  120A  158A  2592   	fcall	___ftpack
  4618  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0BD7  0820               	movf	?___ftpack,w
  4621  0BD8  00A8               	movwf	?___lltoft
  4622  0BD9  0821               	movf	?___ftpack+1,w
  4623  0BDA  00A9               	movwf	?___lltoft+1
  4624  0BDB  0822               	movf	?___ftpack+2,w
  4625  0BDC  00AA               	movwf	?___lltoft+2
  4626  0BDD  0008               	return
  4627  0BDE                     __end_of___lltoft:	
  4628                           
  4629                           	psect	text22
  4630  0D92                     __ptext22:	
  4631 ;; *************** function ___ftpack *****************
  4632 ;; Defined at:
  4633 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  arg             3    0[BANK0 ] unsigned um
  4636 ;;  exp             1    3[BANK0 ] unsigned char 
  4637 ;;  sign            1    4[BANK0 ] unsigned char 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  3    0[BANK0 ] float 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4649 ;;      Params:         0       5       0       0       0
  4650 ;;      Locals:         0       0       0       0       0
  4651 ;;      Temps:          0       3       0       0       0
  4652 ;;      Totals:         0       8       0       0       0
  4653 ;;Total ram usage:        8 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		___altoft
  4660 ;;		___awtoft
  4661 ;;		___ftadd
  4662 ;;		___ftdiv
  4663 ;;		___ftmul
  4664 ;;		___lltoft
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           
  4669                           ;psect for function ___ftpack
  4670  0D92                     ___ftpack:	
  4671                           
  4672                           ;incstack = 0
  4673                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4674  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0D94  0823               	movf	___ftpack@exp,w
  4677  0D95  1903               	btfsc	3,2
  4678  0D96  2D9C               	goto	l1336
  4679  0D97  0822               	movf	___ftpack@arg+2,w
  4680  0D98  0421               	iorwf	___ftpack@arg+1,w
  4681  0D99  0420               	iorwf	___ftpack@arg,w
  4682  0D9A  1D03               	skipz
  4683  0D9B  2DAF               	goto	l1342
  4684  0D9C                     l1336:	
  4685  0D9C  3000               	movlw	0
  4686  0D9D  00A0               	movwf	?___ftpack
  4687  0D9E  3000               	movlw	0
  4688  0D9F  00A1               	movwf	?___ftpack+1
  4689  0DA0  3000               	movlw	0
  4690  0DA1  00A2               	movwf	?___ftpack+2
  4691  0DA2  0008               	return
  4692  0DA3                     l1340:	
  4693  0DA3  3001               	movlw	1
  4694  0DA4  00A5               	movwf	??___ftpack
  4695  0DA5  0825               	movf	??___ftpack,w
  4696  0DA6  07A3               	addwf	___ftpack@exp,f
  4697  0DA7  3001               	movlw	1
  4698  0DA8                     u1445:	
  4699  0DA8  1003               	clrc
  4700  0DA9  0CA2               	rrf	___ftpack@arg+2,f
  4701  0DAA  0CA1               	rrf	___ftpack@arg+1,f
  4702  0DAB  0CA0               	rrf	___ftpack@arg,f
  4703  0DAC  3EFF               	addlw	-1
  4704  0DAD  1D03               	skipz
  4705  0DAE  2DA8               	goto	u1445
  4706  0DAF                     l1342:	
  4707  0DAF  30FE               	movlw	254
  4708  0DB0  0522               	andwf	___ftpack@arg+2,w
  4709  0DB1  1903               	btfsc	3,2
  4710  0DB2  2DCA               	goto	l300
  4711  0DB3  2DA3               	goto	l1340
  4712  0DB4                     l1344:	
  4713  0DB4  3001               	movlw	1
  4714  0DB5  00A5               	movwf	??___ftpack
  4715  0DB6  0825               	movf	??___ftpack,w
  4716  0DB7  07A3               	addwf	___ftpack@exp,f
  4717  0DB8  3001               	movlw	1
  4718  0DB9  07A0               	addwf	___ftpack@arg,f
  4719  0DBA  3000               	movlw	0
  4720  0DBB  1803               	skipnc
  4721  0DBC  3001               	movlw	1
  4722  0DBD  07A1               	addwf	___ftpack@arg+1,f
  4723  0DBE  3000               	movlw	0
  4724  0DBF  1803               	skipnc
  4725  0DC0  3001               	movlw	1
  4726  0DC1  07A2               	addwf	___ftpack@arg+2,f
  4727  0DC2  3001               	movlw	1
  4728  0DC3                     u1465:	
  4729  0DC3  1003               	clrc
  4730  0DC4  0CA2               	rrf	___ftpack@arg+2,f
  4731  0DC5  0CA1               	rrf	___ftpack@arg+1,f
  4732  0DC6  0CA0               	rrf	___ftpack@arg,f
  4733  0DC7  3EFF               	addlw	-1
  4734  0DC8  1D03               	skipz
  4735  0DC9  2DC3               	goto	u1465
  4736  0DCA                     l300:	
  4737  0DCA  30FF               	movlw	255
  4738  0DCB  0522               	andwf	___ftpack@arg+2,w
  4739  0DCC  1903               	btfsc	3,2
  4740  0DCD  2DD9               	goto	l1352
  4741  0DCE  2DB4               	goto	l1344
  4742  0DCF                     l1350:	
  4743  0DCF  3001               	movlw	1
  4744  0DD0  02A3               	subwf	___ftpack@exp,f
  4745  0DD1  3001               	movlw	1
  4746  0DD2                     u1485:	
  4747  0DD2  1003               	clrc
  4748  0DD3  0DA0               	rlf	___ftpack@arg,f
  4749  0DD4  0DA1               	rlf	___ftpack@arg+1,f
  4750  0DD5  0DA2               	rlf	___ftpack@arg+2,f
  4751  0DD6  3EFF               	addlw	-1
  4752  0DD7  1D03               	skipz
  4753  0DD8  2DD2               	goto	u1485
  4754  0DD9                     l1352:	
  4755  0DD9  1BA1               	btfsc	___ftpack@arg+1,7
  4756  0DDA  2DDF               	goto	l307
  4757  0DDB  3002               	movlw	2
  4758  0DDC  0223               	subwf	___ftpack@exp,w
  4759  0DDD  1803               	skipnc
  4760  0DDE  2DCF               	goto	l1350
  4761  0DDF                     l307:	
  4762  0DDF  1823               	btfsc	___ftpack@exp,0
  4763  0DE0  2DE7               	goto	l308
  4764  0DE1  30FF               	movlw	255
  4765  0DE2  05A0               	andwf	___ftpack@arg,f
  4766  0DE3  307F               	movlw	127
  4767  0DE4  05A1               	andwf	___ftpack@arg+1,f
  4768  0DE5  30FF               	movlw	255
  4769  0DE6  05A2               	andwf	___ftpack@arg+2,f
  4770  0DE7                     l308:	
  4771  0DE7  1003               	clrc
  4772  0DE8  0CA3               	rrf	___ftpack@exp,f
  4773  0DE9  0823               	movf	___ftpack@exp,w
  4774  0DEA  00A5               	movwf	??___ftpack
  4775  0DEB  01A6               	clrf	??___ftpack+1
  4776  0DEC  01A7               	clrf	??___ftpack+2
  4777  0DED  3010               	movlw	16
  4778  0DEE                     u1525:	
  4779  0DEE  1003               	clrc
  4780  0DEF  0DA5               	rlf	??___ftpack,f
  4781  0DF0  0DA6               	rlf	??___ftpack+1,f
  4782  0DF1  0DA7               	rlf	??___ftpack+2,f
  4783  0DF2  3EFF               	addlw	-1
  4784  0DF3  1D03               	skipz
  4785  0DF4  2DEE               	goto	u1525
  4786  0DF5  0825               	movf	??___ftpack,w
  4787  0DF6  04A0               	iorwf	___ftpack@arg,f
  4788  0DF7  0826               	movf	??___ftpack+1,w
  4789  0DF8  04A1               	iorwf	___ftpack@arg+1,f
  4790  0DF9  0827               	movf	??___ftpack+2,w
  4791  0DFA  04A2               	iorwf	___ftpack@arg+2,f
  4792  0DFB  0824               	movf	___ftpack@sign,w
  4793  0DFC  1903               	btfsc	3,2
  4794  0DFD  0008               	return
  4795  0DFE  17A2               	bsf	___ftpack@arg+2,7
  4796  0DFF  0008               	return
  4797  0E00                     __end_of___ftpack:	
  4798                           
  4799                           	psect	text23
  4800  07A8                     __ptext23:	
  4801 ;; *************** function ___awmod *****************
  4802 ;; Defined at:
  4803 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  divisor         2   20[BANK0 ] int 
  4806 ;;  dividend        2   22[BANK0 ] int 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  sign            1   26[BANK0 ] unsigned char 
  4809 ;;  counter         1   25[BANK0 ] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2   20[BANK0 ] int 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       4       0       0       0
  4820 ;;      Locals:         0       2       0       0       0
  4821 ;;      Temps:          0       1       0       0       0
  4822 ;;      Totals:         0       7       0       0       0
  4823 ;;Total ram usage:        7 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    2
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           
  4834                           ;psect for function ___awmod
  4835  07A8                     ___awmod:	
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4839  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  4840  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  4841  07AA  01BA               	clrf	___awmod@sign
  4842  07AB  1FB7               	btfss	___awmod@dividend+1,7
  4843  07AC  2FB4               	goto	l1944
  4844  07AD  09B6               	comf	___awmod@dividend,f
  4845  07AE  09B7               	comf	___awmod@dividend+1,f
  4846  07AF  0AB6               	incf	___awmod@dividend,f
  4847  07B0  1903               	skipnz
  4848  07B1  0AB7               	incf	___awmod@dividend+1,f
  4849  07B2  01BA               	clrf	___awmod@sign
  4850  07B3  0ABA               	incf	___awmod@sign,f
  4851  07B4                     l1944:	
  4852  07B4  1FB5               	btfss	___awmod@divisor+1,7
  4853  07B5  2FBB               	goto	l1948
  4854  07B6  09B4               	comf	___awmod@divisor,f
  4855  07B7  09B5               	comf	___awmod@divisor+1,f
  4856  07B8  0AB4               	incf	___awmod@divisor,f
  4857  07B9  1903               	skipnz
  4858  07BA  0AB5               	incf	___awmod@divisor+1,f
  4859  07BB                     l1948:	
  4860  07BB  0834               	movf	___awmod@divisor,w
  4861  07BC  0435               	iorwf	___awmod@divisor+1,w
  4862  07BD  1903               	btfsc	3,2
  4863  07BE  2FE8               	goto	l1966
  4864  07BF  01B9               	clrf	___awmod@counter
  4865  07C0  0AB9               	incf	___awmod@counter,f
  4866  07C1                     l1956:	
  4867  07C1  1BB5               	btfsc	___awmod@divisor+1,7
  4868  07C2  2FCF               	goto	l1958
  4869  07C3  3001               	movlw	1
  4870  07C4                     u2715:	
  4871  07C4  1003               	clrc
  4872  07C5  0DB4               	rlf	___awmod@divisor,f
  4873  07C6  0DB5               	rlf	___awmod@divisor+1,f
  4874  07C7  3EFF               	addlw	-1
  4875  07C8  1D03               	skipz
  4876  07C9  2FC4               	goto	u2715
  4877  07CA  3001               	movlw	1
  4878  07CB  00B8               	movwf	??___awmod
  4879  07CC  0838               	movf	??___awmod,w
  4880  07CD  07B9               	addwf	___awmod@counter,f
  4881  07CE  2FC1               	goto	l1956
  4882  07CF                     l1958:	
  4883  07CF  0835               	movf	___awmod@divisor+1,w
  4884  07D0  0237               	subwf	___awmod@dividend+1,w
  4885  07D1  1D03               	skipz
  4886  07D2  2FD5               	goto	u2735
  4887  07D3  0834               	movf	___awmod@divisor,w
  4888  07D4  0236               	subwf	___awmod@dividend,w
  4889  07D5                     u2735:	
  4890  07D5  1C03               	skipc
  4891  07D6  2FDD               	goto	l1962
  4892  07D7  0834               	movf	___awmod@divisor,w
  4893  07D8  02B6               	subwf	___awmod@dividend,f
  4894  07D9  0835               	movf	___awmod@divisor+1,w
  4895  07DA  1C03               	skipc
  4896  07DB  03B7               	decf	___awmod@dividend+1,f
  4897  07DC  02B7               	subwf	___awmod@dividend+1,f
  4898  07DD                     l1962:	
  4899  07DD  3001               	movlw	1
  4900  07DE                     u2745:	
  4901  07DE  1003               	clrc
  4902  07DF  0CB5               	rrf	___awmod@divisor+1,f
  4903  07E0  0CB4               	rrf	___awmod@divisor,f
  4904  07E1  3EFF               	addlw	-1
  4905  07E2  1D03               	skipz
  4906  07E3  2FDE               	goto	u2745
  4907  07E4  3001               	movlw	1
  4908  07E5  02B9               	subwf	___awmod@counter,f
  4909  07E6  1D03               	btfss	3,2
  4910  07E7  2FCF               	goto	l1958
  4911  07E8                     l1966:	
  4912  07E8  083A               	movf	___awmod@sign,w
  4913  07E9  1903               	btfsc	3,2
  4914  07EA  2FF0               	goto	l1970
  4915  07EB  09B6               	comf	___awmod@dividend,f
  4916  07EC  09B7               	comf	___awmod@dividend+1,f
  4917  07ED  0AB6               	incf	___awmod@dividend,f
  4918  07EE  1903               	skipnz
  4919  07EF  0AB7               	incf	___awmod@dividend+1,f
  4920  07F0                     l1970:	
  4921  07F0  0837               	movf	___awmod@dividend+1,w
  4922  07F1  00B5               	movwf	?___awmod+1
  4923  07F2  0836               	movf	___awmod@dividend,w
  4924  07F3  00B4               	movwf	?___awmod
  4925  07F4  0008               	return
  4926  07F5                     __end_of___awmod:	
  4927                           
  4928                           	psect	text24
  4929  0BDE                     __ptext24:	
  4930 ;; *************** function _isr *****************
  4931 ;; Defined at:
  4932 ;;		line 19 in file "JuegoGatoRaton.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0, pclath, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0
  4948 ;;      Temps:          4       0       0       0       0
  4949 ;;      Totals:         4       0       0       0       0
  4950 ;;Total ram usage:        4 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    1
  4953 ;; This function calls:
  4954 ;;		___awdiv
  4955 ;; This function is called by:
  4956 ;;		Interrupt level 1
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _isr
  4962  0BDE                     _isr:	
  4963                           
  4964                           ;JuegoGatoRaton.c: 20: INTCONbits.INTF = 0;
  4965  0BDE  108B               	bcf	11,1	;volatile
  4966                           
  4967                           ;JuegoGatoRaton.c: 21: if(PORTBbits.RB7&&DINAMIC!=128)
  4968  0BDF  1F86               	btfss	6,7	;volatile
  4969  0BE0  2BED               	goto	i1l1980
  4970  0BE1  3080               	movlw	128
  4971  0BE2  1683               	bsf	3,5	;RP0=1, select bank1
  4972  0BE3  1303               	bcf	3,6	;RP1=0, select bank1
  4973  0BE4  0639               	xorwf	_DINAMIC^(0+128),w
  4974  0BE5  043A               	iorwf	(_DINAMIC+1)^(0+128),w
  4975  0BE6  1903               	btfsc	3,2
  4976  0BE7  2BED               	goto	i1l1980
  4977                           
  4978                           ;JuegoGatoRaton.c: 22: DINAMIC = DINAMIC*2;
  4979  0BE8  1003               	clrc
  4980  0BE9  0D39               	rlf	_DINAMIC^(0+128),w
  4981  0BEA  00B9               	movwf	_DINAMIC^(0+128)
  4982  0BEB  0D3A               	rlf	(_DINAMIC+1)^(0+128),w
  4983  0BEC  00BA               	movwf	(_DINAMIC+1)^(0+128)
  4984  0BED                     i1l1980:	
  4985                           
  4986                           ;JuegoGatoRaton.c: 23: if(PORTBbits.RB7==0&&DINAMIC!=1)
  4987  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0BEE  1B86               	btfsc	6,7	;volatile
  4989  0BEF  2C09               	goto	i1l37
  4990  0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  4991  0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  4992  0BF2  0339               	decf	_DINAMIC^(0+128),w
  4993  0BF3  043A               	iorwf	(_DINAMIC+1)^(0+128),w
  4994  0BF4  1903               	btfsc	3,2
  4995  0BF5  2C09               	goto	i1l37
  4996                           
  4997                           ;JuegoGatoRaton.c: 24: DINAMIC = DINAMIC/2;
  4998  0BF6  3002               	movlw	2
  4999  0BF7  00F0               	movwf	___awdiv@divisor
  5000  0BF8  3000               	movlw	0
  5001  0BF9  00F1               	movwf	___awdiv@divisor+1
  5002  0BFA  083A               	movf	(_DINAMIC+1)^(0+128),w
  5003  0BFB  00F3               	movwf	___awdiv@dividend+1
  5004  0BFC  0839               	movf	_DINAMIC^(0+128),w
  5005  0BFD  00F2               	movwf	___awdiv@dividend
  5006  0BFE  120A  158A  24DA  120A  158A  	fcall	___awdiv
  5007  0C03  0871               	movf	?___awdiv+1,w
  5008  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  5009  0C05  1303               	bcf	3,6	;RP1=0, select bank1
  5010  0C06  00BA               	movwf	(_DINAMIC+1)^(0+128)
  5011  0C07  0870               	movf	?___awdiv,w
  5012  0C08  00B9               	movwf	_DINAMIC^(0+128)
  5013  0C09                     i1l37:	
  5014  0C09  087C               	movf	??_isr+3,w
  5015  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0C0B  00FF               	movwf	127
  5017  0C0C  087B               	movf	??_isr+2,w
  5018  0C0D  008A               	movwf	10
  5019  0C0E  087A               	movf	??_isr+1,w
  5020  0C0F  0084               	movwf	4
  5021  0C10  0E79               	swapf	??_isr^(0+-128),w
  5022  0C11  0083               	movwf	3
  5023  0C12  0EFE               	swapf	126,f
  5024  0C13  0E7E               	swapf	126,w
  5025  0C14  0009               	retfie
  5026  0C15                     __end_of_isr:	
  5027                           
  5028                           	psect	intentry
  5029  0004                     __pintentry:	
  5030                           ;incstack = 0
  5031                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5032                           
  5033  0004                     interrupt_function:	
  5034  007E                     saved_w	set	btemp
  5035  0004  00FE               	movwf	btemp
  5036  0005  0E03               	swapf	3,w
  5037  0006  00F9               	movwf	??_isr
  5038  0007  0804               	movf	4,w
  5039  0008  00FA               	movwf	??_isr+1
  5040  0009  080A               	movf	10,w
  5041  000A  00FB               	movwf	??_isr+2
  5042  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5043  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5044  000D  087F               	movf	btemp+1,w
  5045  000E  00FC               	movwf	??_isr+3
  5046  000F  120A  158A  2BDE   	ljmp	_isr
  5047                           
  5048                           	psect	text25
  5049  0CDA                     __ptext25:	
  5050 ;; *************** function ___awdiv *****************
  5051 ;; Defined at:
  5052 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  divisor         2    0[COMMON] int 
  5055 ;;  dividend        2    2[COMMON] int 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  quotient        2    7[COMMON] int 
  5058 ;;  sign            1    6[COMMON] unsigned char 
  5059 ;;  counter         1    5[COMMON] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  2    0[COMMON] int 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5069 ;;      Params:         4       0       0       0       0
  5070 ;;      Locals:         4       0       0       0       0
  5071 ;;      Temps:          1       0       0       0       0
  5072 ;;      Totals:         9       0       0       0       0
  5073 ;;Total ram usage:        9 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_isr
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function ___awdiv
  5084  0CDA                     ___awdiv:	
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5088  0CDA  01F6               	clrf	___awdiv@sign
  5089  0CDB  1FF1               	btfss	___awdiv@divisor+1,7
  5090  0CDC  2CE4               	goto	i1l1900
  5091  0CDD  09F0               	comf	___awdiv@divisor,f
  5092  0CDE  09F1               	comf	___awdiv@divisor+1,f
  5093  0CDF  0AF0               	incf	___awdiv@divisor,f
  5094  0CE0  1903               	skipnz
  5095  0CE1  0AF1               	incf	___awdiv@divisor+1,f
  5096  0CE2  01F6               	clrf	___awdiv@sign
  5097  0CE3  0AF6               	incf	___awdiv@sign,f
  5098  0CE4                     i1l1900:	
  5099  0CE4  1FF3               	btfss	___awdiv@dividend+1,7
  5100  0CE5  2CEF               	goto	i1l1906
  5101  0CE6  09F2               	comf	___awdiv@dividend,f
  5102  0CE7  09F3               	comf	___awdiv@dividend+1,f
  5103  0CE8  0AF2               	incf	___awdiv@dividend,f
  5104  0CE9  1903               	skipnz
  5105  0CEA  0AF3               	incf	___awdiv@dividend+1,f
  5106  0CEB  3001               	movlw	1
  5107  0CEC  00F4               	movwf	??___awdiv
  5108  0CED  0874               	movf	??___awdiv,w
  5109  0CEE  06F6               	xorwf	___awdiv@sign,f
  5110  0CEF                     i1l1906:	
  5111  0CEF  01F7               	clrf	___awdiv@quotient
  5112  0CF0  01F8               	clrf	___awdiv@quotient+1
  5113  0CF1  0870               	movf	___awdiv@divisor,w
  5114  0CF2  0471               	iorwf	___awdiv@divisor+1,w
  5115  0CF3  1903               	btfsc	3,2
  5116  0CF4  2D26               	goto	i1l1928
  5117  0CF5  01F5               	clrf	___awdiv@counter
  5118  0CF6  0AF5               	incf	___awdiv@counter,f
  5119  0CF7                     i1l1916:	
  5120  0CF7  1BF1               	btfsc	___awdiv@divisor+1,7
  5121  0CF8  2D05               	goto	i1l1918
  5122  0CF9  3001               	movlw	1
  5123  0CFA                     u261_25:	
  5124  0CFA  1003               	clrc
  5125  0CFB  0DF0               	rlf	___awdiv@divisor,f
  5126  0CFC  0DF1               	rlf	___awdiv@divisor+1,f
  5127  0CFD  3EFF               	addlw	-1
  5128  0CFE  1D03               	skipz
  5129  0CFF  2CFA               	goto	u261_25
  5130  0D00  3001               	movlw	1
  5131  0D01  00F4               	movwf	??___awdiv
  5132  0D02  0874               	movf	??___awdiv,w
  5133  0D03  07F5               	addwf	___awdiv@counter,f
  5134  0D04  2CF7               	goto	i1l1916
  5135  0D05                     i1l1918:	
  5136  0D05  3001               	movlw	1
  5137  0D06                     u263_25:	
  5138  0D06  1003               	clrc
  5139  0D07  0DF7               	rlf	___awdiv@quotient,f
  5140  0D08  0DF8               	rlf	___awdiv@quotient+1,f
  5141  0D09  3EFF               	addlw	-1
  5142  0D0A  1D03               	skipz
  5143  0D0B  2D06               	goto	u263_25
  5144  0D0C  0871               	movf	___awdiv@divisor+1,w
  5145  0D0D  0273               	subwf	___awdiv@dividend+1,w
  5146  0D0E  1D03               	skipz
  5147  0D0F  2D12               	goto	u264_25
  5148  0D10  0870               	movf	___awdiv@divisor,w
  5149  0D11  0272               	subwf	___awdiv@dividend,w
  5150  0D12                     u264_25:	
  5151  0D12  1C03               	skipc
  5152  0D13  2D1B               	goto	i1l1924
  5153  0D14  0870               	movf	___awdiv@divisor,w
  5154  0D15  02F2               	subwf	___awdiv@dividend,f
  5155  0D16  0871               	movf	___awdiv@divisor+1,w
  5156  0D17  1C03               	skipc
  5157  0D18  03F3               	decf	___awdiv@dividend+1,f
  5158  0D19  02F3               	subwf	___awdiv@dividend+1,f
  5159  0D1A  1477               	bsf	___awdiv@quotient,0
  5160  0D1B                     i1l1924:	
  5161  0D1B  3001               	movlw	1
  5162  0D1C                     u265_25:	
  5163  0D1C  1003               	clrc
  5164  0D1D  0CF1               	rrf	___awdiv@divisor+1,f
  5165  0D1E  0CF0               	rrf	___awdiv@divisor,f
  5166  0D1F  3EFF               	addlw	-1
  5167  0D20  1D03               	skipz
  5168  0D21  2D1C               	goto	u265_25
  5169  0D22  3001               	movlw	1
  5170  0D23  02F5               	subwf	___awdiv@counter,f
  5171  0D24  1D03               	btfss	3,2
  5172  0D25  2D05               	goto	i1l1918
  5173  0D26                     i1l1928:	
  5174  0D26  0876               	movf	___awdiv@sign,w
  5175  0D27  1903               	btfsc	3,2
  5176  0D28  2D2E               	goto	i1l1932
  5177  0D29  09F7               	comf	___awdiv@quotient,f
  5178  0D2A  09F8               	comf	___awdiv@quotient+1,f
  5179  0D2B  0AF7               	incf	___awdiv@quotient,f
  5180  0D2C  1903               	skipnz
  5181  0D2D  0AF8               	incf	___awdiv@quotient+1,f
  5182  0D2E                     i1l1932:	
  5183  0D2E  0878               	movf	___awdiv@quotient+1,w
  5184  0D2F  00F1               	movwf	?___awdiv+1
  5185  0D30  0877               	movf	___awdiv@quotient,w
  5186  0D31  00F0               	movwf	?___awdiv
  5187  0D32  0008               	return
  5188  0D33                     __end_of___awdiv:	
  5189  007E                     btemp	set	126	;btemp
  5190  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    57
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     79      79
    BANK1            80     21      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_pow
    _rand->___lmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___awmod->_rand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   54167
                                             77 BANK0      2     2      0
                                             11 BANK1     10    10      0
                            ___awmod
                           ___awtoft
                            ___fttol
                                _pow
                               _rand
                            _validar
 ---------------------------------------------------------------------------------
 (1) _validar                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     198
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     198
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   50926
                                             70 BANK0      7     1      6
                                              0 BANK1     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16227
                                             53 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 10     7      3   27848
                                             60 BANK0     10     7      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5    1444
                                             53 BANK0      7     2      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    7425
                                             43 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     436
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     464
                                             14 BANK0     14    10      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1090
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1976
                                             28 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    6532
                                             43 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2721
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     160
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3328
                                             43 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3155
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     204
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2171
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2035
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1907
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1785
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                             20 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0     406
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   ___awtoft
     ___ftpack
   ___fttol
     ___awtoft (ARG)
       ___ftpack
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___awtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___awtoft (ARG)
             ___ftpack
         _frexp
       _ldexp
         ___ftge
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _rand
     ___lmul
   _validar

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     15      1F       7       38.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7B      12        0.0%
ABS                  0      0      7B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Sep 23 22:39:28 2017

            ___altoft@exp 0042                         pc 0002            ___bmul@product 0022  
             __CFG_CP$OFF 0000             ___altoft@sign 0043              ___awdiv@sign 0076  
                      fsr 0004              ___ftadd@exp1 004A              ___ftadd@exp2 0049  
            ___ftadd@sign 0048                       l300 0DCA                       l307 0DDF  
                     l331 035E                       l308 0DE7                       l503 004C  
                     l391 0FE6              __CFG_CPD$OFF 0000                       _exp 0177  
                     _log 0589                       _isr 0BDE                       _pow 0029  
                     fsr0 0004                       indf 0000              ___awmod@sign 003A  
            __CFG_LVP$OFF 0000              ___ftdiv@cntr 0032              ___ftdiv@sign 0037  
                    l1400 02DF                      l2040 03DB                      l1410 02F5  
                    l1340 0DA3                      l1404 02E6                      l1350 0DCF  
                    l1342 0DAF                      l1430 0330                      l1422 030F  
                    l1352 0DD9                      l1344 0DB4                      l1336 0D9C  
                    l1440 034E                      l1432 0335                      l1520 054B  
                    l1512 0533                      l1450 0382                      l1442 035A  
                    l1434 0339                      l1370 0B37                      l1604 0B6D  
                    l1620 0685                      l1460 03A5                      l1428 0324  
                    l1524 055B                      l1508 0523                      l1700 0EE3  
                    l1540 0F8C                      l2068 0476                      l1614 066F  
                    l1446 0370                      l1366 0B31                      l1390 0C7E  
                    l1710 0EF8                      l1472 0D83                      l1560 0FCE  
                    l1720 0F21                      l1800 01A7                      l1642 06E9  
                    l1634 06CA                      l1490 04CE                      l1388 0C6C  
                    l1468 0D5C                      l1572 0FF7                      l1732 0F50  
                    l1812 01FE                      l1662 0B49                      l1566 0FDB  
                    l1558 0FBE                      l1830 029E                      l1806 01CB  
                    l1760 0BB5                      l1496 04E4                      l1568 0FE9  
                    l1584 0CAC                      l1680 0749                      l1736 0F59  
                    l1744 0C1F                      l1762 0BC7                      l1690 079F  
                    l1842 0BA7                      l1676 0740                      l1772 05AD  
                    l1748 0C35                      l1862 0055                      l1944 07B4  
                    l1880 00F1                      l1970 07F0                      l1962 07DD  
                    l1794 0185                      l1778 05C3                      l1956 07C1  
                    l1948 07BB                      l1876 00D1                      l1868 0061  
                    l1958 07CF                      l1966 07E8                      ?_exp 005C  
                    ?_log 0055                      ?_isr 0070                      ?_pow 0066  
            __CFG_WDTE$ON 0000                      u2005 0564                      u2035 0F93  
                    u2205 06EA                      u2065 0FBF                      u2315 0F2A  
                    u1525 0DEE                      u1445 0DA8                      u2165 0697  
                    u2175 06A9                      u2095 0FDD                      u1465 0DC3  
                    u2185 06CB                      u2505 0B8E                      u2450 01E2  
                    u2195 06DC                      u1715 0325                      u2355 0C37  
                    u2515 0E63                      u2460 01E3                      u1485 0DD2  
                    u2365 0C3F                      u1575 0C71                      u2385 0BBA  
                    u1745 033A                      u1905 04F0                      u1841 0D4F  
                    u1842 0D50                      u2715 07C4                      u1915 0502  
                    u1843 0D55                      u1844 0D56                      u1685 0310  
                    u1861 0D76                      u2565 00C0                      u1862 0D77  
                    u2735 07D5                      u1775 034F                      u1863 0D7C  
                    u1864 0D7D                      u2745 07DE                      u1945 0534  
                    u1955 053C                      u2835 0472                      u2845 047F  
                    u2857 048C                      u1995 055C                      u2867 04A4  
                    i1l37 0C09                      u2877 0B9D              __CFG_WRT$OFF 0000  
                    _main 03BF              ___ftpack@arg 0020                      _rand 0E00  
            ___ftpack@exp 0023                      btemp 007E                      exp@x 005C  
                    log@x 0055                      pow@x 0066                      pow@y 0069  
                    start 0012             __CFG_IESO$OFF 0000         ___bmul@multiplier 0023  
           __CFG_MCLRE$ON 0000              ___ftmul@cntr 003C              ___ftmul@sign 003D  
            ___fttol@exp1 003B                     ??_exp 005F                     ??_log 0058  
            ___fttol@lval 0037                     ??_isr 0079                     ??_pow 006C  
                   ?_main 0070                     ?_rand 002D           __end_of___awdiv 0D33  
         __end_of___ftadd 03BF           __end_of___awmod 07F5           __end_of___ftdiv 070F  
         __end_of___ftneg 07FF                     _ANSEL 0188           __end_of___ftmul 0589  
         ___awdiv@divisor 0070           __end_of___ftsub 0B61           __end_of___fttol 1000  
         ___awdiv@counter 0075                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
     ___lmul@multiplicand 0024              ___lltoft@exp 002D            __CFG_FCMEN$OFF 0000  
           ___awtoft@sign 002D                     _floor 070F                     _ldexp 0EEA  
                   _frexp 0C98                     _errno 00BD                     _randx 00B5  
           ___ftpack@sign 0024            __CFG_BOREN$OFF 0000           __end_of_validar 0BAF  
                   pclath 000A                     pow@yi 00A7                     status 0003  
                   wtemp0 007E               exp@exponent 0063               ldexp@newexp 0058  
         __initialization 0015               log@exponent 0059              __end_of_main 04B6  
            __end_of_rand 0E71                    ??_main 006D             ___fttol@sign1 0036  
                  ??_rand 002F                    ?_floor 004B                    ?_ldexp 0055  
                  ?_frexp 0020          __end_of___altoft 0C98          ___awdiv@dividend 0072  
        __end_of___awtoft 0B86          __end_of___ftpack 0E00                    _ANSELH 0189  
        __end_of___lltoft 0BDE                    i1l1900 0CE4                    i1l1906 0CEF  
                  i1l1932 0D2E                    i1l1924 0D1B                    i1l1916 0CF7  
                  i1l1918 0D05                    i1l1928 0D26                    i1l1980 0BED  
                  u261_25 0CFA                    u263_25 0D06                    u264_25 0D12  
                  u265_25 0D1C                    _STATIC 00BB            __CFG_PWRTE$OFF 0000  
                  ___bmul 0B2D                    ___ftge 0D33                    ___lmul 0C15  
               ??___awdiv 0074                 ??___ftadd 0044                 ??___awmod 0038  
               ??___ftdiv 002E                 ??___ftneg 0023                 ??___ftmul 0034  
               ??___ftsub 0051                 ??___fttol 0032          ___awdiv@quotient 0077  
         ___awmod@divisor 0034           ___awmod@counter 0039                    floor@i 004F  
                  floor@x 004B     ___ftmul@f3_as_product 0039                    saved_w 007E  
               ??_validar 0020          __end_ofexp@coeff 0824          __end_oflog@coeff 083F  
 __end_of__initialization 0025                ___altoft@c 003C                ___ftadd@f1 003E  
              ___ftadd@f2 0041                ___ftge@ff1 0020                ___ftge@ff2 0023  
            eval_poly@res 0052                ___ftdiv@f1 002B                ___ftdiv@f2 0028  
              ___ftdiv@f3 0033                ___ftneg@f1 0020                ___awtoft@c 0028  
     ___bmul@multiplicand 0020                ___ftmul@f1 002E                ___ftmul@f2 0031  
              ___ftsub@f1 004E                ___ftsub@f2 004B                ___fttol@f1 002E  
          __pcstackCOMMON 0070              __pidataBANK1 0B14                ___lltoft@c 0028  
           __end_of_floor 07A8             __end_of_ldexp 0F72             __end_of_frexp 0CDA  
                 ??_floor 004E                   ??_ldexp 005A                   ??_frexp 0024  
              __pbssBANK1 00BD        __size_of_eval_poly 0079                __pmaintext 03BF  
                 ?___bmul 0020                   ?___ftge 0020                   ?___lmul 0020  
              __pintentry 0004                 ?___altoft 003C            ___lmul@product 0029  
               ?___awtoft 0028                 ?___ftpack 0020                   _DINAMIC 00B9  
               ?___lltoft 0028                __stringtab 0800           __size_of___bmul 0013  
         __size_of___ftge 005F                   ___awdiv 0CDA           __size_of___lmul 0041  
                 ___ftadd 02B6                   ___awmod 07A8                   ___ftdiv 0657  
                 ___ftneg 07F5                   ___ftmul 04B6                   ___ftsub 0B40  
                 ___fttol 0F72                ??___altoft 0040                   _exp$647 0060  
              ??___awtoft 002B                ??___ftpack 0025         __end_of_eval_poly 0EEA  
              ??___lltoft 002C                   __ptext1 0B86                   __ptext2 0E00  
                 __ptext3 0C15                   __ptext4 0029                   __ptext5 0589  
                 __ptext6 0177                   __ptext7 0EEA                   __ptext8 070F  
                 __ptext9 0C98                   _pow$645 00A0                   _pow$646 00A3  
            __size_of_exp 013F              __size_of_log 00CE              __size_of_isr 0037  
            __size_of_pow 014E          ___awmod@dividend 0036                   _validar 0B86  
                 main@aux 00B1      end_of_initialization 0025                   exp@sign 0065  
                 pow@sign 00A6                 _PORTBbits 0006                 _PORTDbits 0008  
             ___ftdiv@exp 0036               ___ftmul@exp 0038            __end_of___bmul 0B40  
          __end_of___ftge 0D92            __end_of___lmul 0C56                floor@expon 0052  
     start_initialization 0015                eval_poly@d 004E                eval_poly@n 004F  
              eval_poly@x 004B                ldexp@value 0055               __end_of_exp 02B6  
             __end_of_log 0657               __end_of_isr 0C15               __end_of_pow 0177  
              frexp@value 0020  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0021  
                ??___ftge 0026                  ??___lmul 0028                init_fetch0 0B1C  
             __pdataBANK1 00B5         __size_of___altoft 0042         __size_of___awtoft 0025  
       __size_of___ftpack 006E         __size_of___lltoft 002F                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                  ?___awdiv 0070  
                ?___ftadd 003E                  ?___awmod 0034                  ?___ftdiv 0028  
                ?___ftneg 0020                  ?___ftmul 002E                  ?___ftsub 004B  
                ?___fttol 002E                 __pstrings 0800                 _eval_poly 0E71  
                ?_validar 0070            __size_of_floor 0099            __size_of_ldexp 0088  
          __size_of_frexp 0042         interrupt_function 0004               __stringbase 0805  
              ?_eval_poly 004B         ___lmul@multiplier 0020                 frexp@eptr 0023  
        __size_of___awdiv 0059          __size_of___ftadd 0109          __size_of___awmod 004D  
        __size_of___ftdiv 00B8          __size_of___ftneg 000A                  ___altoft 0C56  
        __size_of___ftmul 00D3          __size_of___ftsub 0021          __size_of___fttol 008E  
                ___awtoft 0B61                  ___ftpack 0D92        __end_of__stringtab 0806  
                ___lltoft 0BAF                  _main$643 00AB                  _main$644 00AE  
                __ptext10 0F72                  __ptext11 0D33                  __ptext20 0B61  
                __ptext12 0C56                  __ptext21 0BAF                  __ptext13 0E71  
                __ptext22 0D92                  __ptext14 04B6                  __ptext23 07A8  
                __ptext15 0B2D                  __ptext24 0BDE                  __ptext16 0B40  
                __ptext25 0CDA                  __ptext17 02B6                  __ptext18 07F5  
                __ptext19 0657          __size_of_validar 0029         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 00F7             __size_of_rand 0071                  main@aux2 00B3  
                exp@coeff 0806                  log@coeff 0824                _INTCONbits 000B  
             ??_eval_poly 0051                  init_ram0 0B20                  intlevel1 0000  
               stringcode 0800                  stringdir 0800                  stringtab 0800  
