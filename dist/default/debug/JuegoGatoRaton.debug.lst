

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Sep 23 21:04:30 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.43
    40                           ; Generated 25/07/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151                           
   152                           	psect	idataBANK0
   153  07F9                     __pidataBANK0:	
   154                           
   155                           ;initializer for _randx
   156  07F9  3401               	retlw	1
   157  07FA  3400               	retlw	0
   158  07FB  3400               	retlw	0
   159  07FC  3400               	retlw	0
   160                           
   161                           	psect	strings
   162  0800                     __pstrings:	
   163  0800                     stringtab:	
   164  0800                     __stringtab:	
   165  0800                     stringcode:	
   166                           ;	String table - string pointers are 1 byte each
   167                           
   168  0800                     stringdir:	
   169  0800  3008               	movlw	high stringdir
   170  0801  008A               	movwf	10
   171  0802  0804               	movf	4,w
   172  0803  0A84               	incf	4,f
   173  0804  0782               	addwf	2,f
   174  0805                     __stringbase:	
   175  0805  3400               	retlw	0
   176  0806                     __end_of__stringtab:	
   177  0806                     exp@coeff:	
   178  0806  3400               	retlw	0
   179  0807  3480               	retlw	128
   180  0808  343F               	retlw	63
   181  0809  3472               	retlw	114
   182  080A  3431               	retlw	49
   183  080B  343F               	retlw	63
   184  080C  34FE               	retlw	254
   185  080D  3475               	retlw	117
   186  080E  343E               	retlw	62
   187  080F  3458               	retlw	88
   188  0810  3463               	retlw	99
   189  0811  343D               	retlw	61
   190  0812  3495               	retlw	149
   191  0813  341D               	retlw	29
   192  0814  343C               	retlw	60
   193  0815  34C5               	retlw	197
   194  0816  34AE               	retlw	174
   195  0817  343A               	retlw	58
   196  0818  3479               	retlw	121
   197  0819  3421               	retlw	33
   198  081A  3439               	retlw	57
   199  081B  3494               	retlw	148
   200  081C  3480               	retlw	128
   201  081D  3437               	retlw	55
   202  081E  3493               	retlw	147
   203  081F  34A7               	retlw	167
   204  0820  3435               	retlw	53
   205  0821  3456               	retlw	86
   206  0822  3415               	retlw	21
   207  0823  3434               	retlw	52
   208  0824                     __end_ofexp@coeff:	
   209  0824                     log@coeff:	
   210  0824  3400               	retlw	0
   211  0825  3400               	retlw	0
   212  0826  3400               	retlw	0
   213  0827  3400               	retlw	0
   214  0828  3480               	retlw	128
   215  0829  343F               	retlw	63
   216  082A  34F0               	retlw	240
   217  082B  34FF               	retlw	255
   218  082C  34BE               	retlw	190
   219  082D  34E2               	retlw	226
   220  082E  34A9               	retlw	169
   221  082F  343E               	retlw	62
   222  0830  3483               	retlw	131
   223  0831  3476               	retlw	118
   224  0832  34BE               	retlw	190
   225  0833  34AE               	retlw	174
   226  0834  342B               	retlw	43
   227  0835  343E               	retlw	62
   228  0836  343C               	retlw	60
   229  0837  34C3               	retlw	195
   230  0838  34BD               	retlw	189
   231  0839  34D2               	retlw	210
   232  083A  3413               	retlw	19
   233  083B  343D               	retlw	61
   234  083C  3478               	retlw	120
   235  083D  34D3               	retlw	211
   236  083E  34BB               	retlw	187
   237  083F                     __end_oflog@coeff:	
   238  000B                     _INTCONbits	set	11
   239  0008                     _PORTD	set	8
   240  000B                     _INTCON	set	11
   241  0007                     _PORTC	set	7
   242  0006                     _PORTBbits	set	6
   243  0088                     _TRISD	set	136
   244  0086                     _TRISB	set	134
   245  0087                     _TRISC	set	135
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           ; #config settings
   250  0000                     
   251                           	psect	cinit
   252  0015                     start_initialization:	
   253  0015                     __initialization:	
   254                           
   255                           ; Initialize objects allocated to BANK0
   256  0015  120A  118A  27F9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   257  001A  00E4               	movwf	__pdataBANK0& (0+127)
   258  001B  120A  118A  27FA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   259  0020  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   260  0021  120A  118A  27FB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   261  0026  00E6               	movwf	(__pdataBANK0+2)& (0+127)
   262  0027  120A  118A  27FC   	fcall	__pidataBANK0+3	;fetch initializer
   263  002A  00E7               	movwf	(__pdataBANK0+3)& (0+127)
   264                           
   265                           ; Clear objects allocated to BANK0
   266  002B  01E8               	clrf	__pbssBANK0& (0+127)
   267  002C  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   268  002D                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  002D                     __end_of__initialization:	
   272  002D  0183               	clrf	3
   273  002E  120A  158A  2F6F   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	bssBANK0
   276  0068                     __pbssBANK0:	
   277  0068                     _errno:	
   278  0068                     	ds	2
   279                           
   280                           	psect	dataBANK0
   281  0064                     __pdataBANK0:	
   282  0064                     _randx:	
   283  0064                     	ds	4
   284                           
   285                           	psect	cstackBANK1
   286  00A0                     __pcstackBANK1:	
   287  00A0                     ?_exp:	
   288  00A0                     exp@x:	
   289                           ; 3 bytes @ 0x0
   290                           
   291                           
   292                           ; 3 bytes @ 0x0
   293  00A0                     	ds	3
   294  00A3                     _exp$612:	
   295                           
   296                           ; 3 bytes @ 0x3
   297  00A3                     	ds	3
   298  00A6                     exp@exponent:	
   299                           
   300                           ; 2 bytes @ 0x6
   301  00A6                     	ds	2
   302  00A8                     exp@sign:	
   303                           
   304                           ; 1 bytes @ 0x8
   305  00A8                     	ds	1
   306  00A9                     ?_pow:	
   307  00A9                     pow@x:	
   308                           ; 3 bytes @ 0x9
   309                           
   310                           
   311                           ; 3 bytes @ 0x9
   312  00A9                     	ds	3
   313  00AC                     pow@y:	
   314                           
   315                           ; 3 bytes @ 0xC
   316  00AC                     	ds	3
   317  00AF                     _pow$610:	
   318                           
   319                           ; 3 bytes @ 0xF
   320  00AF                     	ds	3
   321  00B2                     _pow$611:	
   322                           
   323                           ; 3 bytes @ 0x12
   324  00B2                     	ds	3
   325  00B5                     pow@sign:	
   326                           
   327                           ; 1 bytes @ 0x15
   328  00B5                     	ds	1
   329  00B6                     pow@yi:	
   330                           
   331                           ; 4 bytes @ 0x16
   332  00B6                     	ds	4
   333  00BA                     ??_main:	
   334                           
   335                           ; 1 bytes @ 0x1A
   336  00BA                     	ds	3
   337  00BD                     _main$608:	
   338                           
   339                           ; 3 bytes @ 0x1D
   340  00BD                     	ds	3
   341  00C0                     _main$609:	
   342                           
   343                           ; 3 bytes @ 0x20
   344  00C0                     	ds	3
   345  00C3                     main@random:	
   346                           
   347                           ; 2 bytes @ 0x23
   348  00C3                     	ds	2
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:	
   352  0070                     ?_interr:	
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?___awdiv:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ___awdiv@divisor:	
   360                           ; 2 bytes @ 0x0
   361                           
   362                           
   363                           ; 2 bytes @ 0x0
   364  0070                     	ds	2
   365  0072                     ___awdiv@dividend:	
   366                           
   367                           ; 2 bytes @ 0x2
   368  0072                     	ds	2
   369  0074                     ??___awdiv:	
   370                           
   371                           ; 1 bytes @ 0x4
   372  0074                     	ds	1
   373  0075                     ___awdiv@counter:	
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     ___awdiv@sign:	
   378                           
   379                           ; 1 bytes @ 0x6
   380  0076                     	ds	1
   381  0077                     ___awdiv@quotient:	
   382                           
   383                           ; 2 bytes @ 0x7
   384  0077                     	ds	2
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:	
   388  0020                     ??_interr:	
   389                           
   390                           ; 1 bytes @ 0x0
   391  0020                     	ds	6
   392  0026                     ?___ftge:	
   393  0026                     ?___bmul:	
   394                           ; 1 bit 
   395                           
   396  0026                     ?___ftpack:	
   397                           ; 1 bytes @ 0x6
   398                           
   399  0026                     ?_frexp:	
   400                           ; 3 bytes @ 0x6
   401                           
   402  0026                     ?___ftneg:	
   403                           ; 3 bytes @ 0x6
   404                           
   405  0026                     ?___lmul:	
   406                           ; 3 bytes @ 0x6
   407                           
   408  0026                     ___bmul@multiplicand:	
   409                           ; 4 bytes @ 0x6
   410                           
   411  0026                     ___ftpack@arg:	
   412                           ; 1 bytes @ 0x6
   413                           
   414  0026                     ___ftge@ff1:	
   415                           ; 3 bytes @ 0x6
   416                           
   417  0026                     ___ftneg@f1:	
   418                           ; 3 bytes @ 0x6
   419                           
   420  0026                     frexp@value:	
   421                           ; 3 bytes @ 0x6
   422                           
   423  0026                     ___lmul@multiplier:	
   424                           ; 3 bytes @ 0x6
   425                           
   426                           
   427                           ; 4 bytes @ 0x6
   428  0026                     	ds	1
   429  0027                     ??___bmul:	
   430                           
   431                           ; 1 bytes @ 0x7
   432  0027                     	ds	1
   433  0028                     ___bmul@product:	
   434                           
   435                           ; 1 bytes @ 0x8
   436  0028                     	ds	1
   437  0029                     ??___ftneg:	
   438  0029                     ___bmul@multiplier:	
   439                           ; 1 bytes @ 0x9
   440                           
   441  0029                     ___ftpack@exp:	
   442                           ; 1 bytes @ 0x9
   443                           
   444  0029                     frexp@eptr:	
   445                           ; 1 bytes @ 0x9
   446                           
   447  0029                     ___ftge@ff2:	
   448                           ; 1 bytes @ 0x9
   449                           
   450                           
   451                           ; 3 bytes @ 0x9
   452  0029                     	ds	1
   453  002A                     ??_frexp:	
   454  002A                     ___ftpack@sign:	
   455                           ; 1 bytes @ 0xA
   456                           
   457  002A                     ___lmul@multiplicand:	
   458                           ; 1 bytes @ 0xA
   459                           
   460                           
   461                           ; 4 bytes @ 0xA
   462  002A                     	ds	1
   463  002B                     ??___ftpack:	
   464                           
   465                           ; 1 bytes @ 0xB
   466  002B                     	ds	1
   467  002C                     ??___ftge:	
   468                           
   469                           ; 1 bytes @ 0xC
   470  002C                     	ds	2
   471  002E                     ??___lmul:	
   472  002E                     ?___awtoft:	
   473                           ; 1 bytes @ 0xE
   474                           
   475  002E                     ?___ftdiv:	
   476                           ; 3 bytes @ 0xE
   477                           
   478  002E                     ?___lltoft:	
   479                           ; 3 bytes @ 0xE
   480                           
   481  002E                     ___awtoft@c:	
   482                           ; 3 bytes @ 0xE
   483                           
   484  002E                     ___ftdiv@f2:	
   485                           ; 2 bytes @ 0xE
   486                           
   487  002E                     ___lltoft@c:	
   488                           ; 3 bytes @ 0xE
   489                           
   490                           
   491                           ; 4 bytes @ 0xE
   492  002E                     	ds	1
   493  002F                     ___lmul@product:	
   494                           
   495                           ; 4 bytes @ 0xF
   496  002F                     	ds	2
   497  0031                     ??___awtoft:	
   498  0031                     ___ftdiv@f1:	
   499                           ; 1 bytes @ 0x11
   500                           
   501                           
   502                           ; 3 bytes @ 0x11
   503  0031                     	ds	1
   504  0032                     ??___lltoft:	
   505                           
   506                           ; 1 bytes @ 0x12
   507  0032                     	ds	1
   508  0033                     ?_rand:	
   509  0033                     ___awtoft@sign:	
   510                           ; 2 bytes @ 0x13
   511                           
   512  0033                     ___lltoft@exp:	
   513                           ; 1 bytes @ 0x13
   514                           
   515                           
   516                           ; 1 bytes @ 0x13
   517  0033                     	ds	1
   518  0034                     ??___ftdiv:	
   519  0034                     ?___ftmul:	
   520                           ; 1 bytes @ 0x14
   521                           
   522  0034                     ?___fttol:	
   523                           ; 3 bytes @ 0x14
   524                           
   525  0034                     ___ftmul@f1:	
   526                           ; 4 bytes @ 0x14
   527                           
   528  0034                     ___fttol@f1:	
   529                           ; 3 bytes @ 0x14
   530                           
   531                           
   532                           ; 3 bytes @ 0x14
   533  0034                     	ds	1
   534  0035                     ??_rand:	
   535                           
   536                           ; 1 bytes @ 0x15
   537  0035                     	ds	2
   538  0037                     ___ftmul@f2:	
   539                           
   540                           ; 3 bytes @ 0x17
   541  0037                     	ds	1
   542  0038                     ??___fttol:	
   543  0038                     ___ftdiv@cntr:	
   544                           ; 1 bytes @ 0x18
   545                           
   546                           
   547                           ; 1 bytes @ 0x18
   548  0038                     	ds	1
   549  0039                     ___ftdiv@f3:	
   550                           
   551                           ; 3 bytes @ 0x19
   552  0039                     	ds	1
   553  003A                     ??___ftmul:	
   554                           
   555                           ; 1 bytes @ 0x1A
   556  003A                     	ds	2
   557  003C                     ___ftdiv@exp:	
   558  003C                     ___fttol@sign1:	
   559                           ; 1 bytes @ 0x1C
   560                           
   561                           
   562                           ; 1 bytes @ 0x1C
   563  003C                     	ds	1
   564  003D                     ___ftdiv@sign:	
   565  003D                     ___fttol@lval:	
   566                           ; 1 bytes @ 0x1D
   567                           
   568                           
   569                           ; 4 bytes @ 0x1D
   570  003D                     	ds	1
   571  003E                     ___ftmul@exp:	
   572                           
   573                           ; 1 bytes @ 0x1E
   574  003E                     	ds	1
   575  003F                     ___ftmul@f3_as_product:	
   576                           
   577                           ; 3 bytes @ 0x1F
   578  003F                     	ds	2
   579  0041                     ___fttol@exp1:	
   580                           
   581                           ; 1 bytes @ 0x21
   582  0041                     	ds	1
   583  0042                     ?___altoft:	
   584  0042                     ___ftmul@cntr:	
   585                           ; 3 bytes @ 0x22
   586                           
   587  0042                     ___altoft@c:	
   588                           ; 1 bytes @ 0x22
   589                           
   590                           
   591                           ; 4 bytes @ 0x22
   592  0042                     	ds	1
   593  0043                     ___ftmul@sign:	
   594                           
   595                           ; 1 bytes @ 0x23
   596  0043                     	ds	1
   597  0044                     ?___ftadd:	
   598  0044                     ___ftadd@f1:	
   599                           ; 3 bytes @ 0x24
   600                           
   601                           
   602                           ; 3 bytes @ 0x24
   603  0044                     	ds	2
   604  0046                     ??___altoft:	
   605                           
   606                           ; 1 bytes @ 0x26
   607  0046                     	ds	1
   608  0047                     ___ftadd@f2:	
   609                           
   610                           ; 3 bytes @ 0x27
   611  0047                     	ds	1
   612  0048                     ___altoft@exp:	
   613                           
   614                           ; 1 bytes @ 0x28
   615  0048                     	ds	1
   616  0049                     ___altoft@sign:	
   617                           
   618                           ; 1 bytes @ 0x29
   619  0049                     	ds	1
   620  004A                     ??___ftadd:	
   621                           
   622                           ; 1 bytes @ 0x2A
   623  004A                     	ds	4
   624  004E                     ___ftadd@sign:	
   625                           
   626                           ; 1 bytes @ 0x2E
   627  004E                     	ds	1
   628  004F                     ___ftadd@exp2:	
   629                           
   630                           ; 1 bytes @ 0x2F
   631  004F                     	ds	1
   632  0050                     ___ftadd@exp1:	
   633                           
   634                           ; 1 bytes @ 0x30
   635  0050                     	ds	1
   636  0051                     ?_floor:	
   637  0051                     ?_eval_poly:	
   638                           ; 3 bytes @ 0x31
   639                           
   640  0051                     ?___ftsub:	
   641                           ; 3 bytes @ 0x31
   642                           
   643  0051                     ___ftsub@f2:	
   644                           ; 3 bytes @ 0x31
   645                           
   646  0051                     floor@x:	
   647                           ; 3 bytes @ 0x31
   648                           
   649  0051                     eval_poly@x:	
   650                           ; 3 bytes @ 0x31
   651                           
   652                           
   653                           ; 3 bytes @ 0x31
   654  0051                     	ds	3
   655  0054                     ??_floor:	
   656  0054                     eval_poly@d:	
   657                           ; 1 bytes @ 0x34
   658                           
   659  0054                     ___ftsub@f1:	
   660                           ; 1 bytes @ 0x34
   661                           
   662                           
   663                           ; 3 bytes @ 0x34
   664  0054                     	ds	1
   665  0055                     eval_poly@n:	
   666  0055                     floor@i:	
   667                           ; 2 bytes @ 0x35
   668                           
   669                           
   670                           ; 3 bytes @ 0x35
   671  0055                     	ds	2
   672  0057                     ??_eval_poly:	
   673  0057                     ??___ftsub:	
   674                           ; 1 bytes @ 0x37
   675                           
   676                           
   677                           ; 1 bytes @ 0x37
   678  0057                     	ds	1
   679  0058                     floor@expon:	
   680  0058                     eval_poly@res:	
   681                           ; 2 bytes @ 0x38
   682                           
   683                           
   684                           ; 3 bytes @ 0x38
   685  0058                     	ds	3
   686  005B                     ?_log:	
   687  005B                     ?_ldexp:	
   688                           ; 3 bytes @ 0x3B
   689                           
   690  005B                     ldexp@value:	
   691                           ; 3 bytes @ 0x3B
   692                           
   693  005B                     log@x:	
   694                           ; 3 bytes @ 0x3B
   695                           
   696                           
   697                           ; 3 bytes @ 0x3B
   698  005B                     	ds	3
   699  005E                     ??_log:	
   700  005E                     ldexp@newexp:	
   701                           ; 1 bytes @ 0x3E
   702                           
   703                           
   704                           ; 2 bytes @ 0x3E
   705  005E                     	ds	1
   706  005F                     log@exponent:	
   707                           
   708                           ; 2 bytes @ 0x3F
   709  005F                     	ds	1
   710  0060                     ??_ldexp:	
   711                           
   712                           ; 1 bytes @ 0x40
   713  0060                     	ds	2
   714  0062                     ??_exp:	
   715                           
   716                           ; 1 bytes @ 0x42
   717  0062                     	ds	1
   718  0063                     ??_pow:	
   719                           
   720                           ; 1 bytes @ 0x43
   721  0063                     	ds	1
   722                           
   723                           	psect	maintext
   724  0F6F                     __pmaintext:	
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 31 in file "JuegoGatoRaton.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  random          2   35[BANK1 ] int 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : B00/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       8       0       0
   746 ;;      Temps:          0       0       3       0       0
   747 ;;      Totals:         0       0      11       0       0
   748 ;;Total ram usage:       11 bytes
   749 ;; Hardware stack levels required when called:    7
   750 ;; This function calls:
   751 ;;		___awtoft
   752 ;;		___fttol
   753 ;;		_pow
   754 ;;		_rand
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _main
   762  0F6F                     _main:	
   763                           
   764                           ;JuegoGatoRaton.c: 35: int random = 4;
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   768  0F6F  3004               	movlw	4
   769  0F70  1683               	bsf	3,5	;RP0=1, select bank1
   770  0F71  1303               	bcf	3,6	;RP1=0, select bank1
   771  0F72  00C3               	movwf	main@random^(0+128)
   772  0F73  3000               	movlw	0
   773  0F74  00C4               	movwf	(main@random^(0+128)+1)
   774                           
   775                           ;JuegoGatoRaton.c: 37: TRISC = 0;
   776  0F75  0187               	clrf	7	;volatile
   777                           
   778                           ;JuegoGatoRaton.c: 38: PORTC = 1;
   779  0F76  3001               	movlw	1
   780  0F77  1283               	bcf	3,5	;RP0=0, select bank0
   781  0F78  1303               	bcf	3,6	;RP1=0, select bank0
   782  0F79  0087               	movwf	7	;volatile
   783                           
   784                           ;JuegoGatoRaton.c: 39: TRISB = 0xFF;
   785  0F7A  30FF               	movlw	255
   786  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
   787  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
   788  0F7D  0086               	movwf	6	;volatile
   789                           
   790                           ;JuegoGatoRaton.c: 40: ANSEL = 0;
   791  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
   792  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
   793  0F80  0188               	clrf	8	;volatile
   794                           
   795                           ;JuegoGatoRaton.c: 41: ANSELH = 0;
   796  0F81  0189               	clrf	9	;volatile
   797                           
   798                           ;JuegoGatoRaton.c: 42: TRISD = 0;
   799  0F82  1683               	bsf	3,5	;RP0=1, select bank1
   800  0F83  1303               	bcf	3,6	;RP1=0, select bank1
   801  0F84  0188               	clrf	8	;volatile
   802                           
   803                           ;JuegoGatoRaton.c: 43: PORTD = 0;
   804  0F85  1283               	bcf	3,5	;RP0=0, select bank0
   805  0F86  1303               	bcf	3,6	;RP1=0, select bank0
   806  0F87  0188               	clrf	8	;volatile
   807                           
   808                           ;JuegoGatoRaton.c: 45: INTCONbits.GIE = 1;
   809  0F88  178B               	bsf	11,7	;volatile
   810                           
   811                           ;JuegoGatoRaton.c: 47: INTCONbits.RBIE = 1;
   812  0F89  158B               	bsf	11,3	;volatile
   813                           
   814                           ;JuegoGatoRaton.c: 48: INTCONbits.RBIF = 0;
   815  0F8A  100B               	bcf	11,0	;volatile
   816  0F8B                     l2024:	
   817                           ;JuegoGatoRaton.c: 51: while (1){
   818                           
   819                           
   820                           ;JuegoGatoRaton.c: 52: random = rand()%8;
   821  0F8B  120A  158A  2479  120A  158A  	fcall	_rand
   822  0F90  3007               	movlw	7
   823  0F91  1283               	bcf	3,5	;RP0=0, select bank0
   824  0F92  1303               	bcf	3,6	;RP1=0, select bank0
   825  0F93  0533               	andwf	?_rand,w
   826  0F94  1683               	bsf	3,5	;RP0=1, select bank1
   827  0F95  1303               	bcf	3,6	;RP1=0, select bank1
   828  0F96  00C3               	movwf	main@random^(0+128)
   829  0F97  3000               	movlw	0
   830  0F98  1283               	bcf	3,5	;RP0=0, select bank0
   831  0F99  1303               	bcf	3,6	;RP1=0, select bank0
   832  0F9A  0534               	andwf	?_rand+1,w
   833  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
   834  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
   835  0F9D  00C4               	movwf	(main@random+1)^(0+128)
   836                           
   837                           ;JuegoGatoRaton.c: 53: PORTC = pow(2, random);
   838  0F9E  0844               	movf	(main@random+1)^(0+128),w
   839  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
   840  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
   841  0FA1  00AF               	movwf	___awtoft@c+1
   842  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
   843  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
   844  0FA4  0843               	movf	main@random^(0+128),w
   845  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
   846  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
   847  0FA7  00AE               	movwf	___awtoft@c
   848  0FA8  120A  158A  2360  120A  158A  	fcall	___awtoft
   849  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
   850  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
   851  0FAF  082E               	movf	?___awtoft,w
   852  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
   853  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
   854  0FB2  00BD               	movwf	_main$608^(0+128)
   855  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
   856  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
   857  0FB5  082F               	movf	?___awtoft+1,w
   858  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
   859  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
   860  0FB8  00BE               	movwf	(_main$608+1)^(0+128)
   861  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
   862  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
   863  0FBB  0830               	movf	?___awtoft+2,w
   864  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
   865  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
   866  0FBE  00BF               	movwf	(_main$608+2)^(0+128)
   867                           
   868                           ;JuegoGatoRaton.c: 53: PORTC = pow(2, random);
   869  0FBF  083D               	movf	_main$608^(0+128),w
   870  0FC0  00AC               	movwf	pow@y^(0+128)
   871  0FC1  083E               	movf	(_main$608+1)^(0+128),w
   872  0FC2  00AD               	movwf	(pow@y+1)^(0+128)
   873  0FC3  083F               	movf	(_main$608+2)^(0+128),w
   874  0FC4  00AE               	movwf	(pow@y+2)^(0+128)
   875  0FC5  3000               	movlw	0
   876  0FC6  00A9               	movwf	pow@x^(0+128)
   877  0FC7  3000               	movlw	0
   878  0FC8  00AA               	movwf	(pow@x+1)^(0+128)
   879  0FC9  3040               	movlw	64
   880  0FCA  00AB               	movwf	(pow@x+2)^(0+128)
   881  0FCB  120A  118A  2230  120A  158A  	fcall	_pow
   882  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
   883  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
   884  0FD2  0829               	movf	?_pow^(0+128),w
   885  0FD3  00C0               	movwf	_main$609^(0+128)
   886  0FD4  082A               	movf	(?_pow+1)^(0+128),w
   887  0FD5  00C1               	movwf	(_main$609+1)^(0+128)
   888  0FD6  082B               	movf	(?_pow+2)^(0+128),w
   889  0FD7  00C2               	movwf	(_main$609+2)^(0+128)
   890                           
   891                           ;JuegoGatoRaton.c: 53: PORTC = pow(2, random);
   892  0FD8  0840               	movf	_main$609^(0+128),w
   893  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
   894  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
   895  0FDB  00B4               	movwf	___fttol@f1
   896  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
   897  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
   898  0FDE  0841               	movf	(_main$609+1)^(0+128),w
   899  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
   900  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
   901  0FE1  00B5               	movwf	___fttol@f1+1
   902  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
   903  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
   904  0FE4  0842               	movf	(_main$609+2)^(0+128),w
   905  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
   906  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
   907  0FE7  00B6               	movwf	___fttol@f1+2
   908  0FE8  120A  158A  26E1  120A  158A  	fcall	___fttol
   909  0FED  1283               	bcf	3,5	;RP0=0, select bank0
   910  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
   911  0FEF  0834               	movf	?___fttol,w
   912  0FF0  0087               	movwf	7	;volatile
   913                           
   914                           ;JuegoGatoRaton.c: 54: _delay((unsigned long)((500)*(4000000/4000.0)));
   915  0FF1  3003               	movlw	3
   916  0FF2  1683               	bsf	3,5	;RP0=1, select bank1
   917  0FF3  1303               	bcf	3,6	;RP1=0, select bank1
   918  0FF4  00BC               	movwf	(??_main^(0+128)+2)
   919  0FF5  308A               	movlw	138
   920  0FF6  00BB               	movwf	(??_main^(0+128)+1)
   921  0FF7  3055               	movlw	85
   922  0FF8  00BA               	movwf	??_main^(0+128)
   923  0FF9                     u2777:	
   924  0FF9  0BBA               	decfsz	??_main^(0+128),f
   925  0FFA  2FF9               	goto	u2777
   926  0FFB  0BBB               	decfsz	(??_main^(0+128)+1),f
   927  0FFC  2FF9               	goto	u2777
   928  0FFD  0BBC               	decfsz	(??_main^(0+128)+2),f
   929  0FFE  2FF9               	goto	u2777
   930  0FFF  2F8B               	goto	l2024
   931  1000                     __end_of_main:	
   932                           
   933                           	psect	text1
   934  0C79                     __ptext1:	
   935 ;; *************** function _rand *****************
   936 ;; Defined at:
   937 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\rand.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2   19[BANK0 ] int 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       2       0       0       0
   952 ;;      Locals:         0       0       0       0       0
   953 ;;      Temps:          0       5       0       0       0
   954 ;;      Totals:         0       7       0       0       0
   955 ;;Total ram usage:        7 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    3
   958 ;; This function calls:
   959 ;;		___lmul
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _rand
   967  0C79                     _rand:	
   968                           
   969                           ;incstack = 0
   970                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   971  0C79  1283               	bcf	3,5	;RP0=0, select bank0
   972  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
   973  0C7B  0867               	movf	_randx+3,w
   974  0C7C  00A9               	movwf	___lmul@multiplier+3
   975  0C7D  0866               	movf	_randx+2,w
   976  0C7E  00A8               	movwf	___lmul@multiplier+2
   977  0C7F  0865               	movf	_randx+1,w
   978  0C80  00A7               	movwf	___lmul@multiplier+1
   979  0C81  0864               	movf	_randx,w
   980  0C82  00A6               	movwf	___lmul@multiplier
   981  0C83  3041               	movlw	65
   982  0C84  00AD               	movwf	___lmul@multiplicand+3
   983  0C85  30C6               	movlw	198
   984  0C86  00AC               	movwf	___lmul@multiplicand+2
   985  0C87  304E               	movlw	78
   986  0C88  00AB               	movwf	___lmul@multiplicand+1
   987  0C89  306D               	movlw	109
   988  0C8A  00AA               	movwf	___lmul@multiplicand
   989  0C8B  120A  158A  23B4  120A  158A  	fcall	___lmul
   990  0C90  1283               	bcf	3,5	;RP0=0, select bank0
   991  0C91  1303               	bcf	3,6	;RP1=0, select bank0
   992  0C92  0829               	movf	?___lmul+3,w
   993  0C93  00E7               	movwf	_randx+3
   994  0C94  0828               	movf	?___lmul+2,w
   995  0C95  00E6               	movwf	_randx+2
   996  0C96  0827               	movf	?___lmul+1,w
   997  0C97  00E5               	movwf	_randx+1
   998  0C98  0826               	movf	?___lmul,w
   999  0C99  00E4               	movwf	_randx
  1000  0C9A  3039               	movlw	57
  1001  0C9B  07E4               	addwf	_randx,f
  1002  0C9C  3030               	movlw	48
  1003  0C9D  1803               	skipnc
  1004  0C9E  3031               	movlw	49
  1005  0C9F  07E5               	addwf	_randx+1,f
  1006  0CA0  3000               	movlw	0
  1007  0CA1  1803               	skipnc
  1008  0CA2  3001               	movlw	1
  1009  0CA3  07E6               	addwf	_randx+2,f
  1010  0CA4  3000               	movlw	0
  1011  0CA5  1803               	skipnc
  1012  0CA6  3001               	movlw	1
  1013  0CA7  07E7               	addwf	_randx+3,f
  1014  0CA8  0864               	movf	_randx,w
  1015  0CA9  00B5               	movwf	??_rand
  1016  0CAA  0865               	movf	_randx+1,w
  1017  0CAB  00B6               	movwf	??_rand+1
  1018  0CAC  0866               	movf	_randx+2,w
  1019  0CAD  00B7               	movwf	??_rand+2
  1020  0CAE  0867               	movf	_randx+3,w
  1021  0CAF  00B8               	movwf	??_rand+3
  1022  0CB0  3010               	movlw	16
  1023  0CB1  00B9               	movwf	??_rand+4
  1024  0CB2                     u2405:	
  1025  0CB2  0D38               	rlf	??_rand+3,w
  1026  0CB3  0CB8               	rrf	??_rand+3,f
  1027  0CB4  0CB7               	rrf	??_rand+2,f
  1028  0CB5  0CB6               	rrf	??_rand+1,f
  1029  0CB6  0CB5               	rrf	??_rand,f
  1030  0CB7  0BB9               	decfsz	??_rand+4,f
  1031  0CB8  2CB2               	goto	u2405
  1032  0CB9  30FF               	movlw	255
  1033  0CBA  0535               	andwf	??_rand,w
  1034  0CBB  00B3               	movwf	?_rand
  1035  0CBC  307F               	movlw	127
  1036  0CBD  0536               	andwf	??_rand+1,w
  1037  0CBE  00B4               	movwf	?_rand+1
  1038  0CBF  0008               	return
  1039  0CC0                     __end_of_rand:	
  1040                           
  1041                           	psect	text2
  1042  0BB4                     __ptext2:	
  1043 ;; *************** function ___lmul *****************
  1044 ;; Defined at:
  1045 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  multiplier      4    6[BANK0 ] unsigned long 
  1048 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  product         4   15[BANK0 ] unsigned long 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  4    6[BANK0 ] unsigned long 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       8       0       0       0
  1061 ;;      Locals:         0       4       0       0       0
  1062 ;;      Temps:          0       1       0       0       0
  1063 ;;      Totals:         0      13       0       0       0
  1064 ;;Total ram usage:       13 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    2
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_rand
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function ___lmul
  1076  0BB4                     ___lmul:	
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1080  0BB4  3000               	movlw	0
  1081  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0BB7  00B2               	movwf	___lmul@product+3
  1084  0BB8  3000               	movlw	0
  1085  0BB9  00B1               	movwf	___lmul@product+2
  1086  0BBA  3000               	movlw	0
  1087  0BBB  00B0               	movwf	___lmul@product+1
  1088  0BBC  3000               	movlw	0
  1089  0BBD  00AF               	movwf	___lmul@product
  1090  0BBE                     l1684:	
  1091  0BBE  1C26               	btfss	___lmul@multiplier,0
  1092  0BBF  2BD4               	goto	l1688
  1093  0BC0  082A               	movf	___lmul@multiplicand,w
  1094  0BC1  07AF               	addwf	___lmul@product,f
  1095  0BC2  082B               	movf	___lmul@multiplicand+1,w
  1096  0BC3  1103               	clrz
  1097  0BC4  1803               	skipnc
  1098  0BC5  3E01               	addlw	1
  1099  0BC6  1D03               	btfss	3,2
  1100  0BC7  07B0               	addwf	___lmul@product+1,f
  1101  0BC8  082C               	movf	___lmul@multiplicand+2,w
  1102  0BC9  1103               	clrz
  1103  0BCA  1803               	skipnc
  1104  0BCB  3E01               	addlw	1
  1105  0BCC  1D03               	btfss	3,2
  1106  0BCD  07B1               	addwf	___lmul@product+2,f
  1107  0BCE  082D               	movf	___lmul@multiplicand+3,w
  1108  0BCF  1103               	clrz
  1109  0BD0  1803               	skipnc
  1110  0BD1  3E01               	addlw	1
  1111  0BD2  1D03               	btfss	3,2
  1112  0BD3  07B2               	addwf	___lmul@product+3,f
  1113  0BD4                     l1688:	
  1114  0BD4  3001               	movlw	1
  1115  0BD5  00AE               	movwf	??___lmul
  1116  0BD6                     u2255:	
  1117  0BD6  1003               	clrc
  1118  0BD7  0DAA               	rlf	___lmul@multiplicand,f
  1119  0BD8  0DAB               	rlf	___lmul@multiplicand+1,f
  1120  0BD9  0DAC               	rlf	___lmul@multiplicand+2,f
  1121  0BDA  0DAD               	rlf	___lmul@multiplicand+3,f
  1122  0BDB  0BAE               	decfsz	??___lmul,f
  1123  0BDC  2BD6               	goto	u2255
  1124  0BDD  3001               	movlw	1
  1125  0BDE                     u2265:	
  1126  0BDE  1003               	clrc
  1127  0BDF  0CA9               	rrf	___lmul@multiplier+3,f
  1128  0BE0  0CA8               	rrf	___lmul@multiplier+2,f
  1129  0BE1  0CA7               	rrf	___lmul@multiplier+1,f
  1130  0BE2  0CA6               	rrf	___lmul@multiplier,f
  1131  0BE3  3EFF               	addlw	-1
  1132  0BE4  1D03               	skipz
  1133  0BE5  2BDE               	goto	u2265
  1134  0BE6  0829               	movf	___lmul@multiplier+3,w
  1135  0BE7  0428               	iorwf	___lmul@multiplier+2,w
  1136  0BE8  0427               	iorwf	___lmul@multiplier+1,w
  1137  0BE9  0426               	iorwf	___lmul@multiplier,w
  1138  0BEA  1D03               	skipz
  1139  0BEB  2BBE               	goto	l1684
  1140  0BEC  0832               	movf	___lmul@product+3,w
  1141  0BED  00A9               	movwf	?___lmul+3
  1142  0BEE  0831               	movf	___lmul@product+2,w
  1143  0BEF  00A8               	movwf	?___lmul+2
  1144  0BF0  0830               	movf	___lmul@product+1,w
  1145  0BF1  00A7               	movwf	?___lmul+1
  1146  0BF2  082F               	movf	___lmul@product,w
  1147  0BF3  00A6               	movwf	?___lmul
  1148  0BF4  0008               	return
  1149  0BF5                     __end_of___lmul:	
  1150                           
  1151                           	psect	text3
  1152  0230                     __ptext3:	
  1153 ;; *************** function _pow *****************
  1154 ;; Defined at:
  1155 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  x               3    9[BANK1 ] unsigned long 
  1158 ;;  y               3   12[BANK1 ] unsigned long 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  yi              4   22[BANK1 ] unsigned long 
  1161 ;;  sign            1   21[BANK1 ] unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  3    9[BANK1 ] unsigned char 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       6       0       0
  1172 ;;      Locals:         0       0      11       0       0
  1173 ;;      Temps:          0       1       0       0       0
  1174 ;;      Totals:         0       1      17       0       0
  1175 ;;Total ram usage:       18 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    6
  1178 ;; This function calls:
  1179 ;;		___ftge
  1180 ;;		___ftmul
  1181 ;;		___ftneg
  1182 ;;		___fttol
  1183 ;;		___lltoft
  1184 ;;		_exp
  1185 ;;		_log
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _pow
  1193  0230                     _pow:	
  1194                           
  1195                           ;incstack = 0
  1196                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1197  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0232  01B5               	clrf	pow@sign^(0+128)
  1200  0233  082B               	movf	(pow@x+2)^(0+128),w
  1201  0234  042A               	iorwf	(pow@x+1)^(0+128),w
  1202  0235  0429               	iorwf	pow@x^(0+128),w
  1203  0236  1D03               	skipz
  1204  0237  2A68               	goto	l1972
  1205  0238  3000               	movlw	0
  1206  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1207  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1208  023B  00A6               	movwf	___ftge@ff1
  1209  023C  3000               	movlw	0
  1210  023D  00A7               	movwf	___ftge@ff1+1
  1211  023E  3000               	movlw	0
  1212  023F  00A8               	movwf	___ftge@ff1+2
  1213  0240  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0241  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0242  082C               	movf	pow@y^(0+128),w
  1216  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0245  00A9               	movwf	___ftge@ff2
  1219  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1220  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1221  0248  082D               	movf	(pow@y+1)^(0+128),w
  1222  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1223  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1224  024B  00AA               	movwf	___ftge@ff2+1
  1225  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1226  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1227  024E  082E               	movf	(pow@y+2)^(0+128),w
  1228  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0251  00AB               	movwf	___ftge@ff2+2
  1231  0252  120A  158A  2519  120A  118A  	fcall	___ftge
  1232  0257  1C03               	btfss	3,0
  1233  0258  2A5F               	goto	l495
  1234  0259  3021               	movlw	33
  1235  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1236  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1237  025C  00E8               	movwf	_errno
  1238  025D  3000               	movlw	0
  1239  025E  00E9               	movwf	_errno+1
  1240  025F                     l495:	
  1241  025F  3000               	movlw	0
  1242  0260  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0261  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0262  00A9               	movwf	?_pow^(0+128)
  1245  0263  3000               	movlw	0
  1246  0264  00AA               	movwf	(?_pow+1)^(0+128)
  1247  0265  3000               	movlw	0
  1248  0266  00AB               	movwf	(?_pow+2)^(0+128)
  1249  0267  0008               	return
  1250  0268                     l1972:	
  1251  0268  082E               	movf	(pow@y+2)^(0+128),w
  1252  0269  042D               	iorwf	(pow@y+1)^(0+128),w
  1253  026A  042C               	iorwf	pow@y^(0+128),w
  1254  026B  1D03               	skipz
  1255  026C  2A74               	goto	l1978
  1256  026D  3000               	movlw	0
  1257  026E  00A9               	movwf	?_pow^(0+128)
  1258  026F  3080               	movlw	128
  1259  0270  00AA               	movwf	(?_pow+1)^(0+128)
  1260  0271  303F               	movlw	63
  1261  0272  00AB               	movwf	(?_pow+2)^(0+128)
  1262  0273  0008               	return
  1263  0274                     l1978:	
  1264  0274  0829               	movf	pow@x^(0+128),w
  1265  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0277  00A6               	movwf	___ftge@ff1
  1268  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1269  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1270  027A  082A               	movf	(pow@x+1)^(0+128),w
  1271  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1272  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1273  027D  00A7               	movwf	___ftge@ff1+1
  1274  027E  1683               	bsf	3,5	;RP0=1, select bank1
  1275  027F  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0280  082B               	movf	(pow@x+2)^(0+128),w
  1277  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0283  00A8               	movwf	___ftge@ff1+2
  1280  0284  3000               	movlw	0
  1281  0285  00A9               	movwf	___ftge@ff2
  1282  0286  3000               	movlw	0
  1283  0287  00AA               	movwf	___ftge@ff2+1
  1284  0288  3000               	movlw	0
  1285  0289  00AB               	movwf	___ftge@ff2+2
  1286  028A  120A  158A  2519  120A  118A  	fcall	___ftge
  1287  028F  1803               	btfsc	3,0
  1288  0290  2B32               	goto	l1990
  1289  0291  1683               	bsf	3,5	;RP0=1, select bank1
  1290  0292  1303               	bcf	3,6	;RP1=0, select bank1
  1291  0293  082C               	movf	pow@y^(0+128),w
  1292  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0296  00B4               	movwf	___fttol@f1
  1295  0297  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0298  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0299  082D               	movf	(pow@y+1)^(0+128),w
  1298  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1299  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1300  029C  00B5               	movwf	___fttol@f1+1
  1301  029D  1683               	bsf	3,5	;RP0=1, select bank1
  1302  029E  1303               	bcf	3,6	;RP1=0, select bank1
  1303  029F  082E               	movf	(pow@y+2)^(0+128),w
  1304  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1305  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1306  02A2  00B6               	movwf	___fttol@f1+2
  1307  02A3  120A  158A  26E1  120A  118A  	fcall	___fttol
  1308  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1309  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1310  02AA  0837               	movf	?___fttol+3,w
  1311  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  1312  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  1313  02AD  00B9               	movwf	(pow@yi+3)^(0+128)
  1314  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1315  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1316  02B0  0836               	movf	?___fttol+2,w
  1317  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1318  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1319  02B3  00B8               	movwf	(pow@yi+2)^(0+128)
  1320  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1321  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1322  02B6  0835               	movf	?___fttol+1,w
  1323  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1324  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1325  02B9  00B7               	movwf	(pow@yi+1)^(0+128)
  1326  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1327  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1328  02BC  0834               	movf	?___fttol,w
  1329  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1330  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1331  02BF  00B6               	movwf	pow@yi^(0+128)
  1332  02C0  0839               	movf	(pow@yi+3)^(0+128),w
  1333  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1334  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1335  02C3  00B1               	movwf	___lltoft@c+3
  1336  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  1337  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  1338  02C6  0838               	movf	(pow@yi+2)^(0+128),w
  1339  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1340  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1341  02C9  00B0               	movwf	___lltoft@c+2
  1342  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1343  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1344  02CC  0837               	movf	(pow@yi+1)^(0+128),w
  1345  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1346  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1347  02CF  00AF               	movwf	___lltoft@c+1
  1348  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1349  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1350  02D2  0836               	movf	pow@yi^(0+128),w
  1351  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1352  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1353  02D5  00AE               	movwf	___lltoft@c
  1354  02D6  120A  158A  2385  120A  118A  	fcall	___lltoft
  1355  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  1356  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  1357  02DD  082E               	movf	(pow@y+2)^(0+128),w
  1358  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1359  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1360  02E0  0630               	xorwf	?___lltoft+2,w
  1361  02E1  1D03               	skipz
  1362  02E2  2AF1               	goto	u2755
  1363  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1364  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1365  02E5  082D               	movf	(pow@y+1)^(0+128),w
  1366  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1367  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1368  02E8  062F               	xorwf	?___lltoft+1,w
  1369  02E9  1D03               	skipz
  1370  02EA  2AF1               	goto	u2755
  1371  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1372  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1373  02ED  082C               	movf	pow@y^(0+128),w
  1374  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1375  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1376  02F0  062E               	xorwf	?___lltoft,w
  1377  02F1                     u2755:	
  1378  02F1  1903               	skipnz
  1379  02F2  2B00               	goto	l1986
  1380  02F3  3021               	movlw	33
  1381  02F4  00E8               	movwf	_errno
  1382  02F5  3000               	movlw	0
  1383  02F6  00E9               	movwf	_errno+1
  1384  02F7  3000               	movlw	0
  1385  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  1386  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  1387  02FA  00A9               	movwf	?_pow^(0+128)
  1388  02FB  3000               	movlw	0
  1389  02FC  00AA               	movwf	(?_pow+1)^(0+128)
  1390  02FD  3000               	movlw	0
  1391  02FE  00AB               	movwf	(?_pow+2)^(0+128)
  1392  02FF  0008               	return
  1393  0300                     l1986:	
  1394  0300  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0301  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0302  0836               	movf	pow@yi^(0+128),w
  1397  0303  3901               	andlw	1
  1398  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0306  00E3               	movwf	??_pow
  1401  0307  0863               	movf	??_pow,w
  1402  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1403  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1404  030A  00B5               	movwf	pow@sign^(0+128)
  1405  030B  0829               	movf	pow@x^(0+128),w
  1406  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1407  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1408  030E  00A6               	movwf	___ftneg@f1
  1409  030F  1683               	bsf	3,5	;RP0=1, select bank1
  1410  0310  1303               	bcf	3,6	;RP1=0, select bank1
  1411  0311  082A               	movf	(pow@x+1)^(0+128),w
  1412  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0314  00A7               	movwf	___ftneg@f1+1
  1415  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0317  082B               	movf	(pow@x+2)^(0+128),w
  1418  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1420  031A  00A8               	movwf	___ftneg@f1+2
  1421  031B  120A  158A  2322  120A  118A  	fcall	___ftneg
  1422  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0322  0826               	movf	?___ftneg,w
  1425  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0325  00A9               	movwf	pow@x^(0+128)
  1428  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0328  0827               	movf	?___ftneg+1,w
  1431  0329  1683               	bsf	3,5	;RP0=1, select bank1
  1432  032A  1303               	bcf	3,6	;RP1=0, select bank1
  1433  032B  00AA               	movwf	(pow@x+1)^(0+128)
  1434  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1435  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1436  032E  0828               	movf	?___ftneg+2,w
  1437  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1438  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1439  0331  00AB               	movwf	(pow@x+2)^(0+128)
  1440  0332                     l1990:	
  1441  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0334  0829               	movf	pow@x^(0+128),w
  1444  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0337  00DB               	movwf	log@x
  1447  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1449  033A  082A               	movf	(pow@x+1)^(0+128),w
  1450  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1451  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1452  033D  00DC               	movwf	log@x+1
  1453  033E  1683               	bsf	3,5	;RP0=1, select bank1
  1454  033F  1303               	bcf	3,6	;RP1=0, select bank1
  1455  0340  082B               	movf	(pow@x+2)^(0+128),w
  1456  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0343  00DD               	movwf	log@x+2
  1459  0344  120A  118A  25AC  120A  118A  	fcall	_log
  1460  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1461  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1462  034B  085B               	movf	?_log,w
  1463  034C  1683               	bsf	3,5	;RP0=1, select bank1
  1464  034D  1303               	bcf	3,6	;RP1=0, select bank1
  1465  034E  00AF               	movwf	_pow$610^(0+128)
  1466  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0351  085C               	movf	?_log+1,w
  1469  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0354  00B0               	movwf	(_pow$610+1)^(0+128)
  1472  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0357  085D               	movf	?_log+2,w
  1475  0358  1683               	bsf	3,5	;RP0=1, select bank1
  1476  0359  1303               	bcf	3,6	;RP1=0, select bank1
  1477  035A  00B1               	movwf	(_pow$610+2)^(0+128)
  1478  035B  082C               	movf	pow@y^(0+128),w
  1479  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1480  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1481  035E  00B4               	movwf	___ftmul@f1
  1482  035F  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0360  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0361  082D               	movf	(pow@y+1)^(0+128),w
  1485  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0364  00B5               	movwf	___ftmul@f1+1
  1488  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1489  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1490  0367  082E               	movf	(pow@y+2)^(0+128),w
  1491  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1493  036A  00B6               	movwf	___ftmul@f1+2
  1494  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1495  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1496  036D  082F               	movf	_pow$610^(0+128),w
  1497  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1498  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0370  00B7               	movwf	___ftmul@f2
  1500  0371  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0372  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0373  0830               	movf	(_pow$610+1)^(0+128),w
  1503  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0376  00B8               	movwf	___ftmul@f2+1
  1506  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0379  0831               	movf	(_pow$610+2)^(0+128),w
  1509  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1510  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1511  037C  00B9               	movwf	___ftmul@f2+2
  1512  037D  120A  118A  24D9  120A  118A  	fcall	___ftmul
  1513  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0384  0834               	movf	?___ftmul,w
  1516  0385  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0386  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0387  00B2               	movwf	_pow$611^(0+128)
  1519  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1521  038A  0835               	movf	?___ftmul+1,w
  1522  038B  1683               	bsf	3,5	;RP0=1, select bank1
  1523  038C  1303               	bcf	3,6	;RP1=0, select bank1
  1524  038D  00B3               	movwf	(_pow$611+1)^(0+128)
  1525  038E  1283               	bcf	3,5	;RP0=0, select bank0
  1526  038F  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0390  0836               	movf	?___ftmul+2,w
  1528  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1529  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0393  00B4               	movwf	(_pow$611+2)^(0+128)
  1531  0394  0832               	movf	_pow$611^(0+128),w
  1532  0395  00A0               	movwf	exp@x^(0+128)
  1533  0396  0833               	movf	(_pow$611+1)^(0+128),w
  1534  0397  00A1               	movwf	(exp@x+1)^(0+128)
  1535  0398  0834               	movf	(_pow$611+2)^(0+128),w
  1536  0399  00A2               	movwf	(exp@x+2)^(0+128)
  1537  039A  120A  118A  2031  120A  118A  	fcall	_exp
  1538  039F  1683               	bsf	3,5	;RP0=1, select bank1
  1539  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  1540  03A1  0820               	movf	?_exp^(0+128),w
  1541  03A2  00A9               	movwf	pow@x^(0+128)
  1542  03A3  0821               	movf	(?_exp+1)^(0+128),w
  1543  03A4  00AA               	movwf	(pow@x+1)^(0+128)
  1544  03A5  0822               	movf	(?_exp+2)^(0+128),w
  1545  03A6  00AB               	movwf	(pow@x+2)^(0+128)
  1546  03A7  0835               	movf	pow@sign^(0+128),w
  1547  03A8  1903               	btfsc	3,2
  1548  03A9  0008               	return
  1549  03AA  0829               	movf	pow@x^(0+128),w
  1550  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1551  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1552  03AD  00A6               	movwf	___ftneg@f1
  1553  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1554  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1555  03B0  082A               	movf	(pow@x+1)^(0+128),w
  1556  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1557  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1558  03B3  00A7               	movwf	___ftneg@f1+1
  1559  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1560  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  1561  03B6  082B               	movf	(pow@x+2)^(0+128),w
  1562  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1563  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1564  03B9  00A8               	movwf	___ftneg@f1+2
  1565  03BA  120A  158A  2322   	fcall	___ftneg
  1566  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1567  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1568  03BF  0826               	movf	?___ftneg,w
  1569  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1570  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1571  03C2  00A9               	movwf	?_pow^(0+128)
  1572  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1573  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1574  03C5  0827               	movf	?___ftneg+1,w
  1575  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  1576  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  1577  03C8  00AA               	movwf	(?_pow+1)^(0+128)
  1578  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1579  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1580  03CB  0828               	movf	?___ftneg+2,w
  1581  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1582  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1583  03CE  00AB               	movwf	(?_pow+2)^(0+128)
  1584  03CF  0008               	return
  1585  03D0                     __end_of_pow:	
  1586                           
  1587                           	psect	text4
  1588  05AC                     __ptext4:	
  1589 ;; *************** function _log *****************
  1590 ;; Defined at:
  1591 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  x               3   59[BANK0 ] unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  exponent        2   63[BANK0 ] int 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  3   59[BANK0 ] int 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       3       0       0       0
  1606 ;;      Locals:         0       2       0       0       0
  1607 ;;      Temps:          0       1       0       0       0
  1608 ;;      Totals:         0       6       0       0       0
  1609 ;;Total ram usage:        6 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    5
  1612 ;; This function calls:
  1613 ;;		___awtoft
  1614 ;;		___ftadd
  1615 ;;		___ftge
  1616 ;;		___ftmul
  1617 ;;		_eval_poly
  1618 ;;		_frexp
  1619 ;; This function is called by:
  1620 ;;		_pow
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _log
  1626  05AC                     _log:	
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1630  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1631  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1632  05AE  085B               	movf	log@x,w
  1633  05AF  00A6               	movwf	___ftge@ff1
  1634  05B0  085C               	movf	log@x+1,w
  1635  05B1  00A7               	movwf	___ftge@ff1+1
  1636  05B2  085D               	movf	log@x+2,w
  1637  05B3  00A8               	movwf	___ftge@ff1+2
  1638  05B4  3000               	movlw	0
  1639  05B5  00A9               	movwf	___ftge@ff2
  1640  05B6  3000               	movlw	0
  1641  05B7  00AA               	movwf	___ftge@ff2+1
  1642  05B8  3000               	movlw	0
  1643  05B9  00AB               	movwf	___ftge@ff2+2
  1644  05BA  120A  158A  2519  120A  118A  	fcall	___ftge
  1645  05BF  1803               	btfsc	3,0
  1646  05C0  2DCE               	goto	l1712
  1647  05C1  3021               	movlw	33
  1648  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1649  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1650  05C4  00E8               	movwf	_errno
  1651  05C5  3000               	movlw	0
  1652  05C6  00E9               	movwf	_errno+1
  1653  05C7  3000               	movlw	0
  1654  05C8  00DB               	movwf	?_log
  1655  05C9  3000               	movlw	0
  1656  05CA  00DC               	movwf	?_log+1
  1657  05CB  3000               	movlw	0
  1658  05CC  00DD               	movwf	?_log+2
  1659  05CD  0008               	return
  1660  05CE                     l1712:	
  1661  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1662  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1663  05D0  085D               	movf	log@x+2,w
  1664  05D1  045C               	iorwf	log@x+1,w
  1665  05D2  045B               	iorwf	log@x,w
  1666  05D3  1D03               	skipz
  1667  05D4  2DE0               	goto	l1718
  1668  05D5  3022               	movlw	34
  1669  05D6  00E8               	movwf	_errno
  1670  05D7  3000               	movlw	0
  1671  05D8  00E9               	movwf	_errno+1
  1672  05D9  3000               	movlw	0
  1673  05DA  00DB               	movwf	?_log
  1674  05DB  3000               	movlw	0
  1675  05DC  00DC               	movwf	?_log+1
  1676  05DD  3000               	movlw	0
  1677  05DE  00DD               	movwf	?_log+2
  1678  05DF  0008               	return
  1679  05E0                     l1718:	
  1680  05E0  3000               	movlw	0
  1681  05E1  00C4               	movwf	___ftadd@f1
  1682  05E2  3080               	movlw	128
  1683  05E3  00C5               	movwf	___ftadd@f1+1
  1684  05E4  30BF               	movlw	191
  1685  05E5  00C6               	movwf	___ftadd@f1+2
  1686  05E6  3000               	movlw	0
  1687  05E7  00B4               	movwf	___ftmul@f1
  1688  05E8  3000               	movlw	0
  1689  05E9  00B5               	movwf	___ftmul@f1+1
  1690  05EA  3040               	movlw	64
  1691  05EB  00B6               	movwf	___ftmul@f1+2
  1692  05EC  305F               	movlw	(low (log@exponent| 0))& (0+255)
  1693  05ED  00DE               	movwf	??_log
  1694  05EE  085E               	movf	??_log,w
  1695  05EF  00A9               	movwf	frexp@eptr
  1696  05F0  085B               	movf	log@x,w
  1697  05F1  00A6               	movwf	frexp@value
  1698  05F2  085C               	movf	log@x+1,w
  1699  05F3  00A7               	movwf	frexp@value+1
  1700  05F4  085D               	movf	log@x+2,w
  1701  05F5  00A8               	movwf	frexp@value+2
  1702  05F6  120A  158A  2437  120A  118A  	fcall	_frexp
  1703  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1704  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1705  05FD  0826               	movf	?_frexp,w
  1706  05FE  00B7               	movwf	___ftmul@f2
  1707  05FF  0827               	movf	?_frexp+1,w
  1708  0600  00B8               	movwf	___ftmul@f2+1
  1709  0601  0828               	movf	?_frexp+2,w
  1710  0602  00B9               	movwf	___ftmul@f2+2
  1711  0603  120A  118A  24D9  120A  118A  	fcall	___ftmul
  1712  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1714  060A  0834               	movf	?___ftmul,w
  1715  060B  00C7               	movwf	___ftadd@f2
  1716  060C  0835               	movf	?___ftmul+1,w
  1717  060D  00C8               	movwf	___ftadd@f2+1
  1718  060E  0836               	movf	?___ftmul+2,w
  1719  060F  00C9               	movwf	___ftadd@f2+2
  1720  0610  120A  118A  23D0  120A  118A  	fcall	___ftadd
  1721  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0617  0844               	movf	?___ftadd,w
  1724  0618  00DB               	movwf	log@x
  1725  0619  0845               	movf	?___ftadd+1,w
  1726  061A  00DC               	movwf	log@x+1
  1727  061B  0846               	movf	?___ftadd+2,w
  1728  061C  00DD               	movwf	log@x+2
  1729  061D  30FF               	movlw	255
  1730  061E  07DF               	addwf	log@exponent,f
  1731  061F  1803               	skipnc
  1732  0620  0AE0               	incf	log@exponent+1,f
  1733  0621  30FF               	movlw	255
  1734  0622  07E0               	addwf	log@exponent+1,f
  1735  0623  085B               	movf	log@x,w
  1736  0624  00D1               	movwf	eval_poly@x
  1737  0625  085C               	movf	log@x+1,w
  1738  0626  00D2               	movwf	eval_poly@x+1
  1739  0627  085D               	movf	log@x+2,w
  1740  0628  00D3               	movwf	eval_poly@x+2
  1741  0629  301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  1742  062A  00DE               	movwf	??_log
  1743  062B  085E               	movf	??_log,w
  1744  062C  00D4               	movwf	eval_poly@d
  1745  062D  3008               	movlw	8
  1746  062E  00D5               	movwf	eval_poly@n
  1747  062F  3000               	movlw	0
  1748  0630  00D6               	movwf	eval_poly@n+1
  1749  0631  120A  158A  25E6  120A  118A  	fcall	_eval_poly
  1750  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0638  0851               	movf	?_eval_poly,w
  1753  0639  00DB               	movwf	log@x
  1754  063A  0852               	movf	?_eval_poly+1,w
  1755  063B  00DC               	movwf	log@x+1
  1756  063C  0853               	movf	?_eval_poly+2,w
  1757  063D  00DD               	movwf	log@x+2
  1758  063E  085B               	movf	log@x,w
  1759  063F  00C4               	movwf	___ftadd@f1
  1760  0640  085C               	movf	log@x+1,w
  1761  0641  00C5               	movwf	___ftadd@f1+1
  1762  0642  085D               	movf	log@x+2,w
  1763  0643  00C6               	movwf	___ftadd@f1+2
  1764  0644  3072               	movlw	114
  1765  0645  00B4               	movwf	___ftmul@f1
  1766  0646  3031               	movlw	49
  1767  0647  00B5               	movwf	___ftmul@f1+1
  1768  0648  303F               	movlw	63
  1769  0649  00B6               	movwf	___ftmul@f1+2
  1770  064A  0860               	movf	log@exponent+1,w
  1771  064B  00AF               	movwf	___awtoft@c+1
  1772  064C  085F               	movf	log@exponent,w
  1773  064D  00AE               	movwf	___awtoft@c
  1774  064E  120A  158A  2360  120A  118A  	fcall	___awtoft
  1775  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0655  082E               	movf	?___awtoft,w
  1778  0656  00B7               	movwf	___ftmul@f2
  1779  0657  082F               	movf	?___awtoft+1,w
  1780  0658  00B8               	movwf	___ftmul@f2+1
  1781  0659  0830               	movf	?___awtoft+2,w
  1782  065A  00B9               	movwf	___ftmul@f2+2
  1783  065B  120A  118A  24D9  120A  118A  	fcall	___ftmul
  1784  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0662  0834               	movf	?___ftmul,w
  1787  0663  00C7               	movwf	___ftadd@f2
  1788  0664  0835               	movf	?___ftmul+1,w
  1789  0665  00C8               	movwf	___ftadd@f2+1
  1790  0666  0836               	movf	?___ftmul+2,w
  1791  0667  00C9               	movwf	___ftadd@f2+2
  1792  0668  120A  118A  23D0   	fcall	___ftadd
  1793  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1794  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1795  066D  0844               	movf	?___ftadd,w
  1796  066E  00DB               	movwf	?_log
  1797  066F  0845               	movf	?___ftadd+1,w
  1798  0670  00DC               	movwf	?_log+1
  1799  0671  0846               	movf	?___ftadd+2,w
  1800  0672  00DD               	movwf	?_log+2
  1801  0673  0008               	return
  1802  0674                     __end_of_log:	
  1803                           
  1804                           	psect	text5
  1805  0031                     __ptext5:	
  1806 ;; *************** function _exp *****************
  1807 ;; Defined at:
  1808 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  x               3    0[BANK1 ] int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  exponent        2    6[BANK1 ] int 
  1813 ;;  sign            1    8[BANK1 ] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  3    0[BANK1 ] unsigned char 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       3       0       0
  1824 ;;      Locals:         0       0       6       0       0
  1825 ;;      Temps:          0       1       0       0       0
  1826 ;;      Totals:         0       1       9       0       0
  1827 ;;Total ram usage:       10 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    5
  1830 ;; This function calls:
  1831 ;;		___awtoft
  1832 ;;		___ftdiv
  1833 ;;		___ftge
  1834 ;;		___ftmul
  1835 ;;		___ftneg
  1836 ;;		___ftsub
  1837 ;;		___fttol
  1838 ;;		_eval_poly
  1839 ;;		_floor
  1840 ;;		_ldexp
  1841 ;; This function is called by:
  1842 ;;		_pow
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _exp
  1848  0031                     _exp:	
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1852  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1854  0033  0822               	movf	(exp@x+2)^(0+128),w
  1855  0034  0421               	iorwf	(exp@x+1)^(0+128),w
  1856  0035  0420               	iorwf	exp@x^(0+128),w
  1857  0036  1D03               	skipz
  1858  0037  283F               	goto	l1922
  1859  0038  3000               	movlw	0
  1860  0039  00A0               	movwf	?_exp^(0+128)
  1861  003A  3080               	movlw	128
  1862  003B  00A1               	movwf	(?_exp+1)^(0+128)
  1863  003C  303F               	movlw	63
  1864  003D  00A2               	movwf	(?_exp+2)^(0+128)
  1865  003E  0008               	return
  1866  003F                     l1922:	
  1867  003F  3072               	movlw	114
  1868  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1870  0042  00A6               	movwf	___ftge@ff1
  1871  0043  3031               	movlw	49
  1872  0044  00A7               	movwf	___ftge@ff1+1
  1873  0045  3044               	movlw	68
  1874  0046  00A8               	movwf	___ftge@ff1+2
  1875  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0049  0820               	movf	exp@x^(0+128),w
  1878  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1879  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1880  004C  00A9               	movwf	___ftge@ff2
  1881  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1882  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1883  004F  0821               	movf	(exp@x+1)^(0+128),w
  1884  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0052  00AA               	movwf	___ftge@ff2+1
  1887  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1888  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1889  0055  0822               	movf	(exp@x+2)^(0+128),w
  1890  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0058  00AB               	movwf	___ftge@ff2+2
  1893  0059  120A  158A  2519  120A  118A  	fcall	___ftge
  1894  005E  1803               	btfsc	3,0
  1895  005F  286F               	goto	l1928
  1896  0060  3022               	movlw	34
  1897  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0063  00E8               	movwf	_errno
  1900  0064  3000               	movlw	0
  1901  0065  00E9               	movwf	_errno+1
  1902  0066  30FF               	movlw	255
  1903  0067  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0068  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0069  00A0               	movwf	?_exp^(0+128)
  1906  006A  307F               	movlw	127
  1907  006B  00A1               	movwf	(?_exp+1)^(0+128)
  1908  006C  307F               	movlw	127
  1909  006D  00A2               	movwf	(?_exp+2)^(0+128)
  1910  006E  0008               	return
  1911  006F                     l1928:	
  1912  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0070  1303               	bcf	3,6	;RP1=0, select bank1
  1914  0071  0820               	movf	exp@x^(0+128),w
  1915  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0074  00A6               	movwf	___ftge@ff1
  1918  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1920  0077  0821               	movf	(exp@x+1)^(0+128),w
  1921  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1923  007A  00A7               	movwf	___ftge@ff1+1
  1924  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1925  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1926  007D  0822               	movf	(exp@x+2)^(0+128),w
  1927  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1928  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0080  00A8               	movwf	___ftge@ff1+2
  1930  0081  3049               	movlw	73
  1931  0082  00A9               	movwf	___ftge@ff2
  1932  0083  303A               	movlw	58
  1933  0084  00AA               	movwf	___ftge@ff2+1
  1934  0085  30C4               	movlw	196
  1935  0086  00AB               	movwf	___ftge@ff2+2
  1936  0087  120A  158A  2519  120A  118A  	fcall	___ftge
  1937  008C  1803               	btfsc	3,0
  1938  008D  289D               	goto	l1934
  1939  008E  3022               	movlw	34
  1940  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0091  00E8               	movwf	_errno
  1943  0092  3000               	movlw	0
  1944  0093  00E9               	movwf	_errno+1
  1945  0094  3000               	movlw	0
  1946  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1947  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1948  0097  00A0               	movwf	?_exp^(0+128)
  1949  0098  3000               	movlw	0
  1950  0099  00A1               	movwf	(?_exp+1)^(0+128)
  1951  009A  3000               	movlw	0
  1952  009B  00A2               	movwf	(?_exp+2)^(0+128)
  1953  009C  0008               	return
  1954  009D                     l1934:	
  1955  009D  1683               	bsf	3,5	;RP0=1, select bank1
  1956  009E  1303               	bcf	3,6	;RP1=0, select bank1
  1957  009F  0820               	movf	exp@x^(0+128),w
  1958  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1959  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1960  00A2  00A6               	movwf	___ftge@ff1
  1961  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1962  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1963  00A5  0821               	movf	(exp@x+1)^(0+128),w
  1964  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1965  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1966  00A8  00A7               	movwf	___ftge@ff1+1
  1967  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1968  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1969  00AB  0822               	movf	(exp@x+2)^(0+128),w
  1970  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1971  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1972  00AE  00A8               	movwf	___ftge@ff1+2
  1973  00AF  3000               	movlw	0
  1974  00B0  00A9               	movwf	___ftge@ff2
  1975  00B1  3000               	movlw	0
  1976  00B2  00AA               	movwf	___ftge@ff2+1
  1977  00B3  3000               	movlw	0
  1978  00B4  00AB               	movwf	___ftge@ff2+2
  1979  00B5  120A  158A  2519  120A  118A  	fcall	___ftge
  1980  00BA  1803               	btfsc	3,0
  1981  00BB  28BE               	goto	u2660
  1982  00BC  3001               	movlw	1
  1983  00BD  28BF               	goto	u2670
  1984  00BE                     u2660:	
  1985  00BE  3000               	movlw	0
  1986  00BF                     u2670:	
  1987  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1988  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1989  00C1  00E2               	movwf	??_exp
  1990  00C2  0862               	movf	??_exp,w
  1991  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1992  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1993  00C5  00A8               	movwf	exp@sign^(0+128)
  1994  00C6  0828               	movf	exp@sign^(0+128),w
  1995  00C7  1903               	btfsc	3,2
  1996  00C8  28F0               	goto	l1940
  1997  00C9  0820               	movf	exp@x^(0+128),w
  1998  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1999  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  2000  00CC  00A6               	movwf	___ftneg@f1
  2001  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  2002  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  2003  00CF  0821               	movf	(exp@x+1)^(0+128),w
  2004  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2005  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2006  00D2  00A7               	movwf	___ftneg@f1+1
  2007  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  2008  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  2009  00D5  0822               	movf	(exp@x+2)^(0+128),w
  2010  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2011  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2012  00D8  00A8               	movwf	___ftneg@f1+2
  2013  00D9  120A  158A  2322  120A  118A  	fcall	___ftneg
  2014  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2015  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2016  00E0  0826               	movf	?___ftneg,w
  2017  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2018  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  2019  00E3  00A0               	movwf	exp@x^(0+128)
  2020  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2021  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2022  00E6  0827               	movf	?___ftneg+1,w
  2023  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  2024  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  2025  00E9  00A1               	movwf	(exp@x+1)^(0+128)
  2026  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2027  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  2028  00EC  0828               	movf	?___ftneg+2,w
  2029  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  2030  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  2031  00EF  00A2               	movwf	(exp@x+2)^(0+128)
  2032  00F0                     l1940:	
  2033  00F0  30AA               	movlw	170
  2034  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2035  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2036  00F3  00B4               	movwf	___ftmul@f1
  2037  00F4  30B8               	movlw	184
  2038  00F5  00B5               	movwf	___ftmul@f1+1
  2039  00F6  303F               	movlw	63
  2040  00F7  00B6               	movwf	___ftmul@f1+2
  2041  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  2042  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  2043  00FA  0820               	movf	exp@x^(0+128),w
  2044  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2045  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2046  00FD  00B7               	movwf	___ftmul@f2
  2047  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  2048  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0100  0821               	movf	(exp@x+1)^(0+128),w
  2050  0101  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0102  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0103  00B8               	movwf	___ftmul@f2+1
  2053  0104  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0105  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0106  0822               	movf	(exp@x+2)^(0+128),w
  2056  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0109  00B9               	movwf	___ftmul@f2+2
  2059  010A  120A  118A  24D9  120A  118A  	fcall	___ftmul
  2060  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0111  0834               	movf	?___ftmul,w
  2063  0112  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0113  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0114  00A0               	movwf	exp@x^(0+128)
  2066  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0117  0835               	movf	?___ftmul+1,w
  2069  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0119  1303               	bcf	3,6	;RP1=0, select bank1
  2071  011A  00A1               	movwf	(exp@x+1)^(0+128)
  2072  011B  1283               	bcf	3,5	;RP0=0, select bank0
  2073  011C  1303               	bcf	3,6	;RP1=0, select bank0
  2074  011D  0836               	movf	?___ftmul+2,w
  2075  011E  1683               	bsf	3,5	;RP0=1, select bank1
  2076  011F  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0120  00A2               	movwf	(exp@x+2)^(0+128)
  2078  0121  0820               	movf	exp@x^(0+128),w
  2079  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0124  00D1               	movwf	floor@x
  2082  0125  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0126  1303               	bcf	3,6	;RP1=0, select bank1
  2084  0127  0821               	movf	(exp@x+1)^(0+128),w
  2085  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2087  012A  00D2               	movwf	floor@x+1
  2088  012B  1683               	bsf	3,5	;RP0=1, select bank1
  2089  012C  1303               	bcf	3,6	;RP1=0, select bank1
  2090  012D  0822               	movf	(exp@x+2)^(0+128),w
  2091  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2092  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0130  00D3               	movwf	floor@x+2
  2094  0131  120A  118A  272C  120A  118A  	fcall	_floor
  2095  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0138  0851               	movf	?_floor,w
  2098  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2099  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2100  013B  00A3               	movwf	_exp$612^(0+128)
  2101  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2102  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2103  013E  0852               	movf	?_floor+1,w
  2104  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0141  00A4               	movwf	(_exp$612+1)^(0+128)
  2107  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0144  0853               	movf	?_floor+2,w
  2110  0145  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0146  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0147  00A5               	movwf	(_exp$612+2)^(0+128)
  2113  0148  0823               	movf	_exp$612^(0+128),w
  2114  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2115  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2116  014B  00B4               	movwf	___fttol@f1
  2117  014C  1683               	bsf	3,5	;RP0=1, select bank1
  2118  014D  1303               	bcf	3,6	;RP1=0, select bank1
  2119  014E  0824               	movf	(_exp$612+1)^(0+128),w
  2120  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0151  00B5               	movwf	___fttol@f1+1
  2123  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0153  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0154  0825               	movf	(_exp$612+2)^(0+128),w
  2126  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0157  00B6               	movwf	___fttol@f1+2
  2129  0158  120A  158A  26E1  120A  118A  	fcall	___fttol
  2130  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2131  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2132  015F  0835               	movf	?___fttol+1,w
  2133  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0161  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0162  00A7               	movwf	(exp@exponent+1)^(0+128)
  2136  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0165  0834               	movf	?___fttol,w
  2139  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0168  00A6               	movwf	exp@exponent^(0+128)
  2142  0169  0827               	movf	(exp@exponent+1)^(0+128),w
  2143  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2144  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2145  016C  00AF               	movwf	___awtoft@c+1
  2146  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2147  016E  1303               	bcf	3,6	;RP1=0, select bank1
  2148  016F  0826               	movf	exp@exponent^(0+128),w
  2149  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0172  00AE               	movwf	___awtoft@c
  2152  0173  120A  158A  2360  120A  118A  	fcall	___awtoft
  2153  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2155  017A  082E               	movf	?___awtoft,w
  2156  017B  00D1               	movwf	___ftsub@f2
  2157  017C  082F               	movf	?___awtoft+1,w
  2158  017D  00D2               	movwf	___ftsub@f2+1
  2159  017E  0830               	movf	?___awtoft+2,w
  2160  017F  00D3               	movwf	___ftsub@f2+2
  2161  0180  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0181  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0182  0820               	movf	exp@x^(0+128),w
  2164  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0185  00D4               	movwf	___ftsub@f1
  2167  0186  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0187  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0188  0821               	movf	(exp@x+1)^(0+128),w
  2170  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2171  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2172  018B  00D5               	movwf	___ftsub@f1+1
  2173  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2174  018D  1303               	bcf	3,6	;RP1=0, select bank1
  2175  018E  0822               	movf	(exp@x+2)^(0+128),w
  2176  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0191  00D6               	movwf	___ftsub@f1+2
  2179  0192  120A  158A  233F  120A  118A  	fcall	___ftsub
  2180  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0199  0851               	movf	?___ftsub,w
  2183  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2184  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2185  019C  00A0               	movwf	exp@x^(0+128)
  2186  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2187  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2188  019F  0852               	movf	?___ftsub+1,w
  2189  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2190  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  2191  01A2  00A1               	movwf	(exp@x+1)^(0+128)
  2192  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2193  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2194  01A5  0853               	movf	?___ftsub+2,w
  2195  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  2196  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  2197  01A8  00A2               	movwf	(exp@x+2)^(0+128)
  2198  01A9  0820               	movf	exp@x^(0+128),w
  2199  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2200  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2201  01AC  00D1               	movwf	eval_poly@x
  2202  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2203  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2204  01AF  0821               	movf	(exp@x+1)^(0+128),w
  2205  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2206  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2207  01B2  00D2               	movwf	eval_poly@x+1
  2208  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2209  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2210  01B5  0822               	movf	(exp@x+2)^(0+128),w
  2211  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2212  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2213  01B8  00D3               	movwf	eval_poly@x+2
  2214  01B9  3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  2215  01BA  00E2               	movwf	??_exp
  2216  01BB  0862               	movf	??_exp,w
  2217  01BC  00D4               	movwf	eval_poly@d
  2218  01BD  3009               	movlw	9
  2219  01BE  00D5               	movwf	eval_poly@n
  2220  01BF  3000               	movlw	0
  2221  01C0  00D6               	movwf	eval_poly@n+1
  2222  01C1  120A  158A  25E6  120A  118A  	fcall	_eval_poly
  2223  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2224  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2225  01C8  0851               	movf	?_eval_poly,w
  2226  01C9  00DB               	movwf	ldexp@value
  2227  01CA  0852               	movf	?_eval_poly+1,w
  2228  01CB  00DC               	movwf	ldexp@value+1
  2229  01CC  0853               	movf	?_eval_poly+2,w
  2230  01CD  00DD               	movwf	ldexp@value+2
  2231  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  2232  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  2233  01D0  0827               	movf	(exp@exponent+1)^(0+128),w
  2234  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2235  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  2236  01D3  00DF               	movwf	ldexp@newexp+1
  2237  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2238  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2239  01D6  0826               	movf	exp@exponent^(0+128),w
  2240  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2241  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2242  01D9  00DE               	movwf	ldexp@newexp
  2243  01DA  120A  158A  265F  120A  118A  	fcall	_ldexp
  2244  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2245  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2246  01E1  085B               	movf	?_ldexp,w
  2247  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2248  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2249  01E4  00A0               	movwf	exp@x^(0+128)
  2250  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2251  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2252  01E7  085C               	movf	?_ldexp+1,w
  2253  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  2254  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  2255  01EA  00A1               	movwf	(exp@x+1)^(0+128)
  2256  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2257  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2258  01ED  085D               	movf	?_ldexp+2,w
  2259  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2260  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  2261  01F0  00A2               	movwf	(exp@x+2)^(0+128)
  2262  01F1  0828               	movf	exp@sign^(0+128),w
  2263  01F2  1903               	btfsc	3,2
  2264  01F3  0008               	return
  2265  01F4  0A20               	incf	exp@x^(0+128),w
  2266  01F5  307F               	movlw	127
  2267  01F6  1903               	skipnz
  2268  01F7  0621               	xorwf	(exp@x+1)^(0+128),w
  2269  01F8  307F               	movlw	127
  2270  01F9  1903               	skipnz
  2271  01FA  0622               	xorwf	(exp@x+2)^(0+128),w
  2272  01FB  1D03               	btfss	3,2
  2273  01FC  2A04               	goto	l1958
  2274  01FD  3000               	movlw	0
  2275  01FE  00A0               	movwf	?_exp^(0+128)
  2276  01FF  3000               	movlw	0
  2277  0200  00A1               	movwf	(?_exp+1)^(0+128)
  2278  0201  3000               	movlw	0
  2279  0202  00A2               	movwf	(?_exp+2)^(0+128)
  2280  0203  0008               	return
  2281  0204                     l1958:	
  2282  0204  0820               	movf	exp@x^(0+128),w
  2283  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0207  00AE               	movwf	___ftdiv@f2
  2286  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2287  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2288  020A  0821               	movf	(exp@x+1)^(0+128),w
  2289  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2290  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2291  020D  00AF               	movwf	___ftdiv@f2+1
  2292  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2293  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2294  0210  0822               	movf	(exp@x+2)^(0+128),w
  2295  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0213  00B0               	movwf	___ftdiv@f2+2
  2298  0214  3000               	movlw	0
  2299  0215  00B1               	movwf	___ftdiv@f1
  2300  0216  3080               	movlw	128
  2301  0217  00B2               	movwf	___ftdiv@f1+1
  2302  0218  303F               	movlw	63
  2303  0219  00B3               	movwf	___ftdiv@f1+2
  2304  021A  120A  118A  2674   	fcall	___ftdiv
  2305  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2306  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2307  021F  082E               	movf	?___ftdiv,w
  2308  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0222  00A0               	movwf	?_exp^(0+128)
  2311  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0225  082F               	movf	?___ftdiv+1,w
  2314  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0228  00A1               	movwf	(?_exp+1)^(0+128)
  2317  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2318  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2319  022B  0830               	movf	?___ftdiv+2,w
  2320  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2321  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2322  022E  00A2               	movwf	(?_exp+2)^(0+128)
  2323  022F  0008               	return
  2324  0230                     __end_of_exp:	
  2325                           
  2326                           	psect	text6
  2327  0E5F                     __ptext6:	
  2328 ;; *************** function _ldexp *****************
  2329 ;; Defined at:
  2330 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  value           3   59[BANK0 ] unsigned char 
  2333 ;;  newexp          2   62[BANK0 ] int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  3   59[BANK0 ] int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       5       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       2       0       0       0
  2348 ;;      Totals:         0       7       0       0       0
  2349 ;;Total ram usage:        7 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    3
  2352 ;; This function calls:
  2353 ;;		___ftge
  2354 ;; This function is called by:
  2355 ;;		_exp
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _ldexp
  2361  0E5F                     _ldexp:	
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2365  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0E61  085D               	movf	ldexp@value+2,w
  2368  0E62  045C               	iorwf	ldexp@value+1,w
  2369  0E63  045B               	iorwf	ldexp@value,w
  2370  0E64  1D03               	skipz
  2371  0E65  2E6D               	goto	l1650
  2372  0E66  3000               	movlw	0
  2373  0E67  00DB               	movwf	?_ldexp
  2374  0E68  3000               	movlw	0
  2375  0E69  00DC               	movwf	?_ldexp+1
  2376  0E6A  3000               	movlw	0
  2377  0E6B  00DD               	movwf	?_ldexp+2
  2378  0E6C  0008               	return
  2379  0E6D                     l1650:	
  2380  0E6D  085D               	movf	ldexp@value+2,w
  2381  0E6E  397F               	andlw	127
  2382  0E6F  00E0               	movwf	??_ldexp
  2383  0E70  01E1               	clrf	??_ldexp+1
  2384  0E71  1003               	clrc
  2385  0E72  0DE0               	rlf	??_ldexp,f
  2386  0E73  0DE1               	rlf	??_ldexp+1,f
  2387  0E74  0860               	movf	??_ldexp,w
  2388  0E75  07DE               	addwf	ldexp@newexp,f
  2389  0E76  1803               	skipnc
  2390  0E77  0ADF               	incf	ldexp@newexp+1,f
  2391  0E78  0861               	movf	??_ldexp+1,w
  2392  0E79  07DF               	addwf	ldexp@newexp+1,f
  2393  0E7A  0D5C               	rlf	ldexp@value+1,w
  2394  0E7B  0D5C               	rlf	ldexp@value+1,w
  2395  0E7C  3901               	andlw	1
  2396  0E7D  00E0               	movwf	??_ldexp
  2397  0E7E  01E1               	clrf	??_ldexp+1
  2398  0E7F  0860               	movf	??_ldexp,w
  2399  0E80  07DE               	addwf	ldexp@newexp,f
  2400  0E81  1803               	skipnc
  2401  0E82  0ADF               	incf	ldexp@newexp+1,f
  2402  0E83  0861               	movf	??_ldexp+1,w
  2403  0E84  07DF               	addwf	ldexp@newexp+1,f
  2404  0E85  1FDF               	btfss	ldexp@newexp+1,7
  2405  0E86  2E92               	goto	l1660
  2406  0E87  3022               	movlw	34
  2407  0E88  00E8               	movwf	_errno
  2408  0E89  3000               	movlw	0
  2409  0E8A  00E9               	movwf	_errno+1
  2410  0E8B  3000               	movlw	0
  2411  0E8C  00DB               	movwf	?_ldexp
  2412  0E8D  3000               	movlw	0
  2413  0E8E  00DC               	movwf	?_ldexp+1
  2414  0E8F  3000               	movlw	0
  2415  0E90  00DD               	movwf	?_ldexp+2
  2416  0E91  0008               	return
  2417  0E92                     l1660:	
  2418  0E92  085F               	movf	ldexp@newexp+1,w
  2419  0E93  3A80               	xorlw	128
  2420  0E94  00FF               	movwf	127
  2421  0E95  3081               	movlw	129
  2422  0E96  027F               	subwf	127,w
  2423  0E97  1D03               	skipz
  2424  0E98  2E9B               	goto	u2215
  2425  0E99  3000               	movlw	0
  2426  0E9A  025E               	subwf	ldexp@newexp,w
  2427  0E9B                     u2215:	
  2428  0E9B  1C03               	skipc
  2429  0E9C  2EC8               	goto	l1676
  2430  0E9D  3022               	movlw	34
  2431  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0EA0  00E8               	movwf	_errno
  2434  0EA1  3000               	movlw	0
  2435  0EA2  00E9               	movwf	_errno+1
  2436  0EA3  085B               	movf	ldexp@value,w
  2437  0EA4  00A6               	movwf	___ftge@ff1
  2438  0EA5  085C               	movf	ldexp@value+1,w
  2439  0EA6  00A7               	movwf	___ftge@ff1+1
  2440  0EA7  085D               	movf	ldexp@value+2,w
  2441  0EA8  00A8               	movwf	___ftge@ff1+2
  2442  0EA9  3000               	movlw	0
  2443  0EAA  00A9               	movwf	___ftge@ff2
  2444  0EAB  3000               	movlw	0
  2445  0EAC  00AA               	movwf	___ftge@ff2+1
  2446  0EAD  3000               	movlw	0
  2447  0EAE  00AB               	movwf	___ftge@ff2+2
  2448  0EAF  120A  158A  2519  120A  158A  	fcall	___ftge
  2449  0EB4  1803               	btfsc	3,0
  2450  0EB5  2EBF               	goto	l1672
  2451  0EB6  30FF               	movlw	255
  2452  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0EB9  00DB               	movwf	?_ldexp
  2455  0EBA  307F               	movlw	127
  2456  0EBB  00DC               	movwf	?_ldexp+1
  2457  0EBC  30FF               	movlw	255
  2458  0EBD  00DD               	movwf	?_ldexp+2
  2459  0EBE  0008               	return
  2460  0EBF                     l1672:	
  2461  0EBF  30FF               	movlw	255
  2462  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0EC2  00DB               	movwf	?_ldexp
  2465  0EC3  307F               	movlw	127
  2466  0EC4  00DC               	movwf	?_ldexp+1
  2467  0EC5  307F               	movlw	127
  2468  0EC6  00DD               	movwf	?_ldexp+2
  2469  0EC7  0008               	return
  2470  0EC8                     l1676:	
  2471  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0ECA  085F               	movf	ldexp@newexp+1,w
  2474  0ECB  00E1               	movwf	??_ldexp+1
  2475  0ECC  085E               	movf	ldexp@newexp,w
  2476  0ECD  00E0               	movwf	??_ldexp
  2477  0ECE  0D61               	rlf	??_ldexp+1,w
  2478  0ECF  0CE1               	rrf	??_ldexp+1,f
  2479  0ED0  0CE0               	rrf	??_ldexp,f
  2480  0ED1  085D               	movf	ldexp@value+2,w
  2481  0ED2  0660               	xorwf	??_ldexp,w
  2482  0ED3  3980               	andlw	-128
  2483  0ED4  0660               	xorwf	??_ldexp,w
  2484  0ED5  00DD               	movwf	ldexp@value+2
  2485  0ED6  085E               	movf	ldexp@newexp,w
  2486  0ED7  3901               	andlw	1
  2487  0ED8  00E0               	movwf	??_ldexp
  2488  0ED9  0CE0               	rrf	??_ldexp,f
  2489  0EDA  0CE0               	rrf	??_ldexp,f
  2490  0EDB  085C               	movf	ldexp@value+1,w
  2491  0EDC  0660               	xorwf	??_ldexp,w
  2492  0EDD  397F               	andlw	-129
  2493  0EDE  0660               	xorwf	??_ldexp,w
  2494  0EDF  00DC               	movwf	ldexp@value+1
  2495  0EE0  0008               	return
  2496  0EE1                     __end_of_ldexp:	
  2497                           
  2498                           	psect	text7
  2499  072C                     __ptext7:	
  2500 ;; *************** function _floor *****************
  2501 ;; Defined at:
  2502 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  x               3   49[BANK0 ] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  i               3   53[BANK0 ] int 
  2507 ;;  expon           2   56[BANK0 ] int 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  3   49[BANK0 ] int 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       3       0       0       0
  2518 ;;      Locals:         0       5       0       0       0
  2519 ;;      Temps:          0       1       0       0       0
  2520 ;;      Totals:         0       9       0       0       0
  2521 ;;Total ram usage:        9 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    4
  2524 ;; This function calls:
  2525 ;;		___altoft
  2526 ;;		___ftadd
  2527 ;;		___ftge
  2528 ;;		___fttol
  2529 ;;		_frexp
  2530 ;; This function is called by:
  2531 ;;		_exp
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _floor
  2537  072C                     _floor:	
  2538                           
  2539                           ;incstack = 0
  2540                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2541  072C  1283               	bcf	3,5	;RP0=0, select bank0
  2542  072D  1303               	bcf	3,6	;RP1=0, select bank0
  2543  072E  0851               	movf	floor@x,w
  2544  072F  00A6               	movwf	frexp@value
  2545  0730  0852               	movf	floor@x+1,w
  2546  0731  00A7               	movwf	frexp@value+1
  2547  0732  0853               	movf	floor@x+2,w
  2548  0733  00A8               	movwf	frexp@value+2
  2549  0734  3058               	movlw	(low (floor@expon| 0))& (0+255)
  2550  0735  00D4               	movwf	??_floor
  2551  0736  0854               	movf	??_floor,w
  2552  0737  00A9               	movwf	frexp@eptr
  2553  0738  120A  158A  2437  120A  118A  	fcall	_frexp
  2554  073D  1283               	bcf	3,5	;RP0=0, select bank0
  2555  073E  1303               	bcf	3,6	;RP1=0, select bank0
  2556  073F  1FD9               	btfss	floor@expon+1,7
  2557  0740  2F66               	goto	l1620
  2558  0741  0851               	movf	floor@x,w
  2559  0742  00A6               	movwf	___ftge@ff1
  2560  0743  0852               	movf	floor@x+1,w
  2561  0744  00A7               	movwf	___ftge@ff1+1
  2562  0745  0853               	movf	floor@x+2,w
  2563  0746  00A8               	movwf	___ftge@ff1+2
  2564  0747  3000               	movlw	0
  2565  0748  00A9               	movwf	___ftge@ff2
  2566  0749  3000               	movlw	0
  2567  074A  00AA               	movwf	___ftge@ff2+1
  2568  074B  3000               	movlw	0
  2569  074C  00AB               	movwf	___ftge@ff2+2
  2570  074D  120A  158A  2519  120A  118A  	fcall	___ftge
  2571  0752  1803               	btfsc	3,0
  2572  0753  2F5D               	goto	l1616
  2573  0754  3000               	movlw	0
  2574  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0757  00D1               	movwf	?_floor
  2577  0758  3080               	movlw	128
  2578  0759  00D2               	movwf	?_floor+1
  2579  075A  30BF               	movlw	191
  2580  075B  00D3               	movwf	?_floor+2
  2581  075C  0008               	return
  2582  075D                     l1616:	
  2583  075D  3000               	movlw	0
  2584  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2585  075F  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0760  00D1               	movwf	?_floor
  2587  0761  3000               	movlw	0
  2588  0762  00D2               	movwf	?_floor+1
  2589  0763  3000               	movlw	0
  2590  0764  00D3               	movwf	?_floor+2
  2591  0765  0008               	return
  2592  0766                     l1620:	
  2593  0766  3000               	movlw	0
  2594  0767  0259               	subwf	floor@expon+1,w
  2595  0768  3015               	movlw	21
  2596  0769  1903               	skipnz
  2597  076A  0258               	subwf	floor@expon,w
  2598  076B  1803               	btfsc	3,0
  2599  076C  0008               	return
  2600  076D  0851               	movf	floor@x,w
  2601  076E  00B4               	movwf	___fttol@f1
  2602  076F  0852               	movf	floor@x+1,w
  2603  0770  00B5               	movwf	___fttol@f1+1
  2604  0771  0853               	movf	floor@x+2,w
  2605  0772  00B6               	movwf	___fttol@f1+2
  2606  0773  120A  158A  26E1  120A  118A  	fcall	___fttol
  2607  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2609  077A  0837               	movf	?___fttol+3,w
  2610  077B  00C5               	movwf	___altoft@c+3
  2611  077C  0836               	movf	?___fttol+2,w
  2612  077D  00C4               	movwf	___altoft@c+2
  2613  077E  0835               	movf	?___fttol+1,w
  2614  077F  00C3               	movwf	___altoft@c+1
  2615  0780  0834               	movf	?___fttol,w
  2616  0781  00C2               	movwf	___altoft@c
  2617  0782  120A  158A  23F5  120A  118A  	fcall	___altoft
  2618  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0789  0842               	movf	?___altoft,w
  2621  078A  00D5               	movwf	floor@i
  2622  078B  0843               	movf	?___altoft+1,w
  2623  078C  00D6               	movwf	floor@i+1
  2624  078D  0844               	movf	?___altoft+2,w
  2625  078E  00D7               	movwf	floor@i+2
  2626  078F  0851               	movf	floor@x,w
  2627  0790  00A6               	movwf	___ftge@ff1
  2628  0791  0852               	movf	floor@x+1,w
  2629  0792  00A7               	movwf	___ftge@ff1+1
  2630  0793  0853               	movf	floor@x+2,w
  2631  0794  00A8               	movwf	___ftge@ff1+2
  2632  0795  0855               	movf	floor@i,w
  2633  0796  00A9               	movwf	___ftge@ff2
  2634  0797  0856               	movf	floor@i+1,w
  2635  0798  00AA               	movwf	___ftge@ff2+1
  2636  0799  0857               	movf	floor@i+2,w
  2637  079A  00AB               	movwf	___ftge@ff2+2
  2638  079B  120A  158A  2519  120A  118A  	fcall	___ftge
  2639  07A0  1803               	btfsc	3,0
  2640  07A1  2FBC               	goto	l1630
  2641  07A2  3000               	movlw	0
  2642  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2643  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2644  07A5  00C4               	movwf	___ftadd@f1
  2645  07A6  3080               	movlw	128
  2646  07A7  00C5               	movwf	___ftadd@f1+1
  2647  07A8  30BF               	movlw	191
  2648  07A9  00C6               	movwf	___ftadd@f1+2
  2649  07AA  0855               	movf	floor@i,w
  2650  07AB  00C7               	movwf	___ftadd@f2
  2651  07AC  0856               	movf	floor@i+1,w
  2652  07AD  00C8               	movwf	___ftadd@f2+1
  2653  07AE  0857               	movf	floor@i+2,w
  2654  07AF  00C9               	movwf	___ftadd@f2+2
  2655  07B0  120A  118A  23D0   	fcall	___ftadd
  2656  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2657  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2658  07B5  0844               	movf	?___ftadd,w
  2659  07B6  00D1               	movwf	?_floor
  2660  07B7  0845               	movf	?___ftadd+1,w
  2661  07B8  00D2               	movwf	?_floor+1
  2662  07B9  0846               	movf	?___ftadd+2,w
  2663  07BA  00D3               	movwf	?_floor+2
  2664  07BB  0008               	return
  2665  07BC                     l1630:	
  2666  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2667  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2668  07BE  0855               	movf	floor@i,w
  2669  07BF  00D1               	movwf	?_floor
  2670  07C0  0856               	movf	floor@i+1,w
  2671  07C1  00D2               	movwf	?_floor+1
  2672  07C2  0857               	movf	floor@i+2,w
  2673  07C3  00D3               	movwf	?_floor+2
  2674  07C4  0008               	return
  2675  07C5                     __end_of_floor:	
  2676                           
  2677                           	psect	text8
  2678  0C37                     __ptext8:	
  2679 ;; *************** function _frexp *****************
  2680 ;; Defined at:
  2681 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  value           3    6[BANK0 ] int 
  2684 ;;  eptr            1    9[BANK0 ] PTR int 
  2685 ;;		 -> log@exponent(2), floor@expon(2), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  3    6[BANK0 ] PTR int 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       4       0       0       0
  2698 ;;      Locals:         0       0       0       0       0
  2699 ;;      Temps:          0       2       0       0       0
  2700 ;;      Totals:         0       6       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    2
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_floor
  2708 ;;		_log
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           
  2713                           ;psect for function _frexp
  2714  0C37                     _frexp:	
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2718  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0C39  0828               	movf	frexp@value+2,w
  2721  0C3A  0427               	iorwf	frexp@value+1,w
  2722  0C3B  0426               	iorwf	frexp@value,w
  2723  0C3C  1D03               	skipz
  2724  0C3D  2C4B               	goto	l1524
  2725  0C3E  0829               	movf	frexp@eptr,w
  2726  0C3F  0084               	movwf	4
  2727  0C40  1383               	bcf	3,7	;select IRP bank0
  2728  0C41  0180               	clrf	0
  2729  0C42  0A84               	incf	4,f
  2730  0C43  0180               	clrf	0
  2731  0C44  3000               	movlw	0
  2732  0C45  00A6               	movwf	?_frexp
  2733  0C46  3000               	movlw	0
  2734  0C47  00A7               	movwf	?_frexp+1
  2735  0C48  3000               	movlw	0
  2736  0C49  00A8               	movwf	?_frexp+2
  2737  0C4A  0008               	return
  2738  0C4B                     l1524:	
  2739  0C4B  0828               	movf	frexp@value+2,w
  2740  0C4C  397F               	andlw	127
  2741  0C4D  00AA               	movwf	??_frexp
  2742  0C4E  01AB               	clrf	??_frexp+1
  2743  0C4F  1003               	clrc
  2744  0C50  0DAA               	rlf	??_frexp,f
  2745  0C51  0DAB               	rlf	??_frexp+1,f
  2746  0C52  0829               	movf	frexp@eptr,w
  2747  0C53  0084               	movwf	4
  2748  0C54  082A               	movf	??_frexp,w
  2749  0C55  1383               	bcf	3,7	;select IRP bank0
  2750  0C56  0080               	movwf	0
  2751  0C57  0A84               	incf	4,f
  2752  0C58  082B               	movf	??_frexp+1,w
  2753  0C59  0080               	movwf	0
  2754  0C5A  0D27               	rlf	frexp@value+1,w
  2755  0C5B  0D27               	rlf	frexp@value+1,w
  2756  0C5C  3901               	andlw	1
  2757  0C5D  00AA               	movwf	??_frexp
  2758  0C5E  01AB               	clrf	??_frexp+1
  2759  0C5F  0829               	movf	frexp@eptr,w
  2760  0C60  0084               	movwf	4
  2761  0C61  082A               	movf	??_frexp,w
  2762  0C62  0480               	iorwf	0,f
  2763  0C63  0A84               	incf	4,f
  2764  0C64  082B               	movf	??_frexp+1,w
  2765  0C65  0480               	iorwf	0,f
  2766  0C66  0829               	movf	frexp@eptr,w
  2767  0C67  0084               	movwf	4
  2768  0C68  3082               	movlw	130
  2769  0C69  0780               	addwf	0,f
  2770  0C6A  0F84               	incfsz	4,f
  2771  0C6B  0800               	movf	0,w
  2772  0C6C  1803               	skipnc
  2773  0C6D  0A00               	incf	0,w
  2774  0C6E  00FF               	movwf	127
  2775  0C6F  30FF               	movlw	255
  2776  0C70  077F               	addwf	127,w
  2777  0C71  0080               	movwf	0
  2778  0C72  0384               	decf	4,f
  2779  0C73  0828               	movf	frexp@value+2,w
  2780  0C74  3980               	andlw	-128
  2781  0C75  383F               	iorlw	63
  2782  0C76  00A8               	movwf	frexp@value+2
  2783  0C77  13A7               	bcf	frexp@value+1,7
  2784  0C78  0008               	return
  2785  0C79                     __end_of_frexp:	
  2786                           
  2787                           	psect	text9
  2788  0EE1                     __ptext9:	
  2789 ;; *************** function ___fttol *****************
  2790 ;; Defined at:
  2791 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  f1              3   20[BANK0 ] float 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  lval            4   29[BANK0 ] unsigned long 
  2796 ;;  exp1            1   33[BANK0 ] unsigned char 
  2797 ;;  sign1           1   28[BANK0 ] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  4   20[BANK0 ] long 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2807 ;;      Params:         0       4       0       0       0
  2808 ;;      Locals:         0       6       0       0       0
  2809 ;;      Temps:          0       4       0       0       0
  2810 ;;      Totals:         0      14       0       0       0
  2811 ;;Total ram usage:       14 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    2
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;;		_pow
  2819 ;;		_exp
  2820 ;;		_floor
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function ___fttol
  2826  0EE1                     ___fttol:	
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2830  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0EE3  0834               	movf	___fttol@f1,w
  2833  0EE4  00B8               	movwf	??___fttol
  2834  0EE5  0835               	movf	___fttol@f1+1,w
  2835  0EE6  00B9               	movwf	??___fttol+1
  2836  0EE7  0836               	movf	___fttol@f1+2,w
  2837  0EE8  00BA               	movwf	??___fttol+2
  2838  0EE9  1003               	clrc
  2839  0EEA  0D39               	rlf	??___fttol+1,w
  2840  0EEB  0D3A               	rlf	??___fttol+2,w
  2841  0EEC  00BB               	movwf	??___fttol+3
  2842  0EED  083B               	movf	??___fttol+3,w
  2843  0EEE  00C1               	movwf	___fttol@exp1
  2844  0EEF  0841               	movf	___fttol@exp1,w
  2845  0EF0  1D03               	btfss	3,2
  2846  0EF1  2EFB               	goto	l1480
  2847  0EF2  3000               	movlw	0
  2848  0EF3  00B7               	movwf	?___fttol+3
  2849  0EF4  3000               	movlw	0
  2850  0EF5  00B6               	movwf	?___fttol+2
  2851  0EF6  3000               	movlw	0
  2852  0EF7  00B5               	movwf	?___fttol+1
  2853  0EF8  3000               	movlw	0
  2854  0EF9  00B4               	movwf	?___fttol
  2855  0EFA  0008               	return
  2856  0EFB                     l1480:	
  2857  0EFB  0834               	movf	___fttol@f1,w
  2858  0EFC  00B8               	movwf	??___fttol
  2859  0EFD  0835               	movf	___fttol@f1+1,w
  2860  0EFE  00B9               	movwf	??___fttol+1
  2861  0EFF  0836               	movf	___fttol@f1+2,w
  2862  0F00  00BA               	movwf	??___fttol+2
  2863  0F01  3017               	movlw	23
  2864  0F02                     u1935:	
  2865  0F02  1003               	clrc
  2866  0F03  0CBA               	rrf	??___fttol+2,f
  2867  0F04  0CB9               	rrf	??___fttol+1,f
  2868  0F05  0CB8               	rrf	??___fttol,f
  2869  0F06  3EFF               	addlw	-1
  2870  0F07  1D03               	skipz
  2871  0F08  2F02               	goto	u1935
  2872  0F09  0838               	movf	??___fttol,w
  2873  0F0A  00BB               	movwf	??___fttol+3
  2874  0F0B  083B               	movf	??___fttol+3,w
  2875  0F0C  00BC               	movwf	___fttol@sign1
  2876  0F0D  17B5               	bsf	___fttol@f1+1,7
  2877  0F0E  30FF               	movlw	255
  2878  0F0F  05B4               	andwf	___fttol@f1,f
  2879  0F10  30FF               	movlw	255
  2880  0F11  05B5               	andwf	___fttol@f1+1,f
  2881  0F12  3000               	movlw	0
  2882  0F13  05B6               	andwf	___fttol@f1+2,f
  2883  0F14  0834               	movf	___fttol@f1,w
  2884  0F15  00BD               	movwf	___fttol@lval
  2885  0F16  0835               	movf	___fttol@f1+1,w
  2886  0F17  00BE               	movwf	___fttol@lval+1
  2887  0F18  0836               	movf	___fttol@f1+2,w
  2888  0F19  00BF               	movwf	___fttol@lval+2
  2889  0F1A  01C0               	clrf	___fttol@lval+3
  2890  0F1B  308E               	movlw	142
  2891  0F1C  02C1               	subwf	___fttol@exp1,f
  2892  0F1D  1FC1               	btfss	___fttol@exp1,7
  2893  0F1E  2F3D               	goto	l1500
  2894  0F1F  0841               	movf	___fttol@exp1,w
  2895  0F20  3A80               	xorlw	128
  2896  0F21  3E8F               	addlw	143
  2897  0F22  1803               	skipnc
  2898  0F23  2F2D               	goto	l1498
  2899  0F24  3000               	movlw	0
  2900  0F25  00B7               	movwf	?___fttol+3
  2901  0F26  3000               	movlw	0
  2902  0F27  00B6               	movwf	?___fttol+2
  2903  0F28  3000               	movlw	0
  2904  0F29  00B5               	movwf	?___fttol+1
  2905  0F2A  3000               	movlw	0
  2906  0F2B  00B4               	movwf	?___fttol
  2907  0F2C  0008               	return
  2908  0F2D                     l1498:	
  2909  0F2D  3001               	movlw	1
  2910  0F2E                     u1965:	
  2911  0F2E  1003               	clrc
  2912  0F2F  0CC0               	rrf	___fttol@lval+3,f
  2913  0F30  0CBF               	rrf	___fttol@lval+2,f
  2914  0F31  0CBE               	rrf	___fttol@lval+1,f
  2915  0F32  0CBD               	rrf	___fttol@lval,f
  2916  0F33  3EFF               	addlw	-1
  2917  0F34  1D03               	skipz
  2918  0F35  2F2E               	goto	u1965
  2919  0F36  3001               	movlw	1
  2920  0F37  00B8               	movwf	??___fttol
  2921  0F38  0838               	movf	??___fttol,w
  2922  0F39  07C1               	addwf	___fttol@exp1,f
  2923  0F3A  1903               	btfsc	3,2
  2924  0F3B  2F58               	goto	l1508
  2925  0F3C  2F2D               	goto	l1498
  2926  0F3D                     l1500:	
  2927  0F3D  3018               	movlw	24
  2928  0F3E  0241               	subwf	___fttol@exp1,w
  2929  0F3F  1C03               	skipc
  2930  0F40  2F55               	goto	l383
  2931  0F41  3000               	movlw	0
  2932  0F42  00B7               	movwf	?___fttol+3
  2933  0F43  3000               	movlw	0
  2934  0F44  00B6               	movwf	?___fttol+2
  2935  0F45  3000               	movlw	0
  2936  0F46  00B5               	movwf	?___fttol+1
  2937  0F47  3000               	movlw	0
  2938  0F48  00B4               	movwf	?___fttol
  2939  0F49  0008               	return
  2940  0F4A                     l1506:	
  2941  0F4A  3001               	movlw	1
  2942  0F4B  00B8               	movwf	??___fttol
  2943  0F4C                     u1995:	
  2944  0F4C  1003               	clrc
  2945  0F4D  0DBD               	rlf	___fttol@lval,f
  2946  0F4E  0DBE               	rlf	___fttol@lval+1,f
  2947  0F4F  0DBF               	rlf	___fttol@lval+2,f
  2948  0F50  0DC0               	rlf	___fttol@lval+3,f
  2949  0F51  0BB8               	decfsz	??___fttol,f
  2950  0F52  2F4C               	goto	u1995
  2951  0F53  3001               	movlw	1
  2952  0F54  02C1               	subwf	___fttol@exp1,f
  2953  0F55                     l383:	
  2954  0F55  0841               	movf	___fttol@exp1,w
  2955  0F56  1D03               	btfss	3,2
  2956  0F57  2F4A               	goto	l1506
  2957  0F58                     l1508:	
  2958  0F58  083C               	movf	___fttol@sign1,w
  2959  0F59  1903               	btfsc	3,2
  2960  0F5A  2F66               	goto	l1512
  2961  0F5B  09BD               	comf	___fttol@lval,f
  2962  0F5C  09BE               	comf	___fttol@lval+1,f
  2963  0F5D  09BF               	comf	___fttol@lval+2,f
  2964  0F5E  09C0               	comf	___fttol@lval+3,f
  2965  0F5F  0ABD               	incf	___fttol@lval,f
  2966  0F60  1903               	skipnz
  2967  0F61  0ABE               	incf	___fttol@lval+1,f
  2968  0F62  1903               	skipnz
  2969  0F63  0ABF               	incf	___fttol@lval+2,f
  2970  0F64  1903               	skipnz
  2971  0F65  0AC0               	incf	___fttol@lval+3,f
  2972  0F66                     l1512:	
  2973  0F66  0840               	movf	___fttol@lval+3,w
  2974  0F67  00B7               	movwf	?___fttol+3
  2975  0F68  083F               	movf	___fttol@lval+2,w
  2976  0F69  00B6               	movwf	?___fttol+2
  2977  0F6A  083E               	movf	___fttol@lval+1,w
  2978  0F6B  00B5               	movwf	?___fttol+1
  2979  0F6C  083D               	movf	___fttol@lval,w
  2980  0F6D  00B4               	movwf	?___fttol
  2981  0F6E  0008               	return
  2982  0F6F                     __end_of___fttol:	
  2983                           
  2984                           	psect	text10
  2985  0D19                     __ptext10:	
  2986 ;; *************** function ___ftge *****************
  2987 ;; Defined at:
  2988 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  ff1             3    6[BANK0 ] float 
  2991 ;;  ff2             3    9[BANK0 ] float 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;		None               void
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       6       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       6       0       0       0
  3006 ;;      Totals:         0      12       0       0       0
  3007 ;;Total ram usage:       12 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    2
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_pow
  3014 ;;		_exp
  3015 ;;		_floor
  3016 ;;		_ldexp
  3017 ;;		_log
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function ___ftge
  3023  0D19                     ___ftge:	
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3027  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0D1B  1FA8               	btfss	___ftge@ff1+2,7
  3030  0D1C  2D42               	goto	l1408
  3031  0D1D  3000               	movlw	0
  3032  0D1E  00AC               	movwf	??___ftge
  3033  0D1F  3000               	movlw	0
  3034  0D20  00AD               	movwf	??___ftge+1
  3035  0D21  3080               	movlw	128
  3036  0D22  00AE               	movwf	??___ftge+2
  3037  0D23  0926               	comf	___ftge@ff1,w
  3038  0D24  00AF               	movwf	??___ftge+3
  3039  0D25  0927               	comf	___ftge@ff1+1,w
  3040  0D26  00B0               	movwf	??___ftge+4
  3041  0D27  0928               	comf	___ftge@ff1+2,w
  3042  0D28  00B1               	movwf	??___ftge+5
  3043  0D29  0AAF               	incf	??___ftge+3,f
  3044  0D2A  1903               	skipnz
  3045  0D2B  0AB0               	incf	??___ftge+4,f
  3046  0D2C  1903               	skipnz
  3047  0D2D  0AB1               	incf	??___ftge+5,f
  3048  0D2E  082F               	movf	??___ftge+3,w
  3049  0D2F  07AC               	addwf	??___ftge,f
  3050  0D30  0830               	movf	??___ftge+4,w
  3051  0D31  1803               	skipnc
  3052  0D32  0F30               	incfsz	??___ftge+4,w
  3053  0D33  2D35               	goto	u1741
  3054  0D34  2D36               	goto	u1742
  3055  0D35                     u1741:	
  3056  0D35  07AD               	addwf	??___ftge+1,f
  3057  0D36                     u1742:	
  3058  0D36  0831               	movf	??___ftge+5,w
  3059  0D37  1803               	skipnc
  3060  0D38  0F31               	incfsz	??___ftge+5,w
  3061  0D39  2D3B               	goto	u1743
  3062  0D3A  2D3C               	goto	u1744
  3063  0D3B                     u1743:	
  3064  0D3B  07AE               	addwf	??___ftge+2,f
  3065  0D3C                     u1744:	
  3066  0D3C  082C               	movf	??___ftge,w
  3067  0D3D  00A6               	movwf	___ftge@ff1
  3068  0D3E  082D               	movf	??___ftge+1,w
  3069  0D3F  00A7               	movwf	___ftge@ff1+1
  3070  0D40  082E               	movf	??___ftge+2,w
  3071  0D41  00A8               	movwf	___ftge@ff1+2
  3072  0D42                     l1408:	
  3073  0D42  1FAB               	btfss	___ftge@ff2+2,7
  3074  0D43  2D69               	goto	l1412
  3075  0D44  3000               	movlw	0
  3076  0D45  00AC               	movwf	??___ftge
  3077  0D46  3000               	movlw	0
  3078  0D47  00AD               	movwf	??___ftge+1
  3079  0D48  3080               	movlw	128
  3080  0D49  00AE               	movwf	??___ftge+2
  3081  0D4A  0929               	comf	___ftge@ff2,w
  3082  0D4B  00AF               	movwf	??___ftge+3
  3083  0D4C  092A               	comf	___ftge@ff2+1,w
  3084  0D4D  00B0               	movwf	??___ftge+4
  3085  0D4E  092B               	comf	___ftge@ff2+2,w
  3086  0D4F  00B1               	movwf	??___ftge+5
  3087  0D50  0AAF               	incf	??___ftge+3,f
  3088  0D51  1903               	skipnz
  3089  0D52  0AB0               	incf	??___ftge+4,f
  3090  0D53  1903               	skipnz
  3091  0D54  0AB1               	incf	??___ftge+5,f
  3092  0D55  082F               	movf	??___ftge+3,w
  3093  0D56  07AC               	addwf	??___ftge,f
  3094  0D57  0830               	movf	??___ftge+4,w
  3095  0D58  1803               	skipnc
  3096  0D59  0F30               	incfsz	??___ftge+4,w
  3097  0D5A  2D5C               	goto	u1761
  3098  0D5B  2D5D               	goto	u1762
  3099  0D5C                     u1761:	
  3100  0D5C  07AD               	addwf	??___ftge+1,f
  3101  0D5D                     u1762:	
  3102  0D5D  0831               	movf	??___ftge+5,w
  3103  0D5E  1803               	skipnc
  3104  0D5F  0F31               	incfsz	??___ftge+5,w
  3105  0D60  2D62               	goto	u1763
  3106  0D61  2D63               	goto	u1764
  3107  0D62                     u1763:	
  3108  0D62  07AE               	addwf	??___ftge+2,f
  3109  0D63                     u1764:	
  3110  0D63  082C               	movf	??___ftge,w
  3111  0D64  00A9               	movwf	___ftge@ff2
  3112  0D65  082D               	movf	??___ftge+1,w
  3113  0D66  00AA               	movwf	___ftge@ff2+1
  3114  0D67  082E               	movf	??___ftge+2,w
  3115  0D68  00AB               	movwf	___ftge@ff2+2
  3116  0D69                     l1412:	
  3117  0D69  3080               	movlw	128
  3118  0D6A  06A8               	xorwf	___ftge@ff1+2,f
  3119  0D6B  3080               	movlw	128
  3120  0D6C  06AB               	xorwf	___ftge@ff2+2,f
  3121  0D6D  082B               	movf	___ftge@ff2+2,w
  3122  0D6E  0228               	subwf	___ftge@ff1+2,w
  3123  0D6F  1D03               	skipz
  3124  0D70  0008               	return
  3125  0D71  082A               	movf	___ftge@ff2+1,w
  3126  0D72  0227               	subwf	___ftge@ff1+1,w
  3127  0D73  1D03               	skipz
  3128  0D74  0008               	return
  3129  0D75  0829               	movf	___ftge@ff2,w
  3130  0D76  0226               	subwf	___ftge@ff1,w
  3131  0D77  0008               	return
  3132  0D78                     __end_of___ftge:	
  3133                           
  3134                           	psect	text11
  3135  0BF5                     __ptext11:	
  3136 ;; *************** function ___altoft *****************
  3137 ;; Defined at:
  3138 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  c               4   34[BANK0 ] long 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  sign            1   41[BANK0 ] unsigned char 
  3143 ;;  exp             1   40[BANK0 ] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  3   34[BANK0 ] float 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       4       0       0       0
  3154 ;;      Locals:         0       2       0       0       0
  3155 ;;      Temps:          0       2       0       0       0
  3156 ;;      Totals:         0       8       0       0       0
  3157 ;;Total ram usage:        8 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    3
  3160 ;; This function calls:
  3161 ;;		___ftpack
  3162 ;; This function is called by:
  3163 ;;		_floor
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function ___altoft
  3169  0BF5                     ___altoft:	
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3173  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0BF7  01C9               	clrf	___altoft@sign
  3176  0BF8  308E               	movlw	142
  3177  0BF9  00C6               	movwf	??___altoft
  3178  0BFA  0846               	movf	??___altoft,w
  3179  0BFB  00C8               	movwf	___altoft@exp
  3180  0BFC  1FC5               	btfss	___altoft@c+3,7
  3181  0BFD  2C0B               	goto	l1328
  3182  0BFE  09C2               	comf	___altoft@c,f
  3183  0BFF  09C3               	comf	___altoft@c+1,f
  3184  0C00  09C4               	comf	___altoft@c+2,f
  3185  0C01  09C5               	comf	___altoft@c+3,f
  3186  0C02  0AC2               	incf	___altoft@c,f
  3187  0C03  1903               	skipnz
  3188  0C04  0AC3               	incf	___altoft@c+1,f
  3189  0C05  1903               	skipnz
  3190  0C06  0AC4               	incf	___altoft@c+2,f
  3191  0C07  1903               	skipnz
  3192  0C08  0AC5               	incf	___altoft@c+3,f
  3193  0C09  01C9               	clrf	___altoft@sign
  3194  0C0A  0AC9               	incf	___altoft@sign,f
  3195  0C0B                     l1328:	
  3196  0C0B  30FF               	movlw	255
  3197  0C0C  0545               	andwf	___altoft@c+3,w
  3198  0C0D  1903               	btfsc	3,2
  3199  0C0E  2C1D               	goto	l1330
  3200  0C0F  3001               	movlw	1
  3201  0C10                     u1475:	
  3202  0C10  1003               	clrc
  3203  0C11  0CC5               	rrf	___altoft@c+3,f
  3204  0C12  0CC4               	rrf	___altoft@c+2,f
  3205  0C13  0CC3               	rrf	___altoft@c+1,f
  3206  0C14  0CC2               	rrf	___altoft@c,f
  3207  0C15  3EFF               	addlw	-1
  3208  0C16  1D03               	skipz
  3209  0C17  2C10               	goto	u1475
  3210  0C18  3001               	movlw	1
  3211  0C19  00C6               	movwf	??___altoft
  3212  0C1A  0846               	movf	??___altoft,w
  3213  0C1B  07C8               	addwf	___altoft@exp,f
  3214  0C1C  2C0B               	goto	l1328
  3215  0C1D                     l1330:	
  3216  0C1D  0842               	movf	___altoft@c,w
  3217  0C1E  00A6               	movwf	___ftpack@arg
  3218  0C1F  0843               	movf	___altoft@c+1,w
  3219  0C20  00A7               	movwf	___ftpack@arg+1
  3220  0C21  0844               	movf	___altoft@c+2,w
  3221  0C22  00A8               	movwf	___ftpack@arg+2
  3222  0C23  0848               	movf	___altoft@exp,w
  3223  0C24  00C6               	movwf	??___altoft
  3224  0C25  0846               	movf	??___altoft,w
  3225  0C26  00A9               	movwf	___ftpack@exp
  3226  0C27  0849               	movf	___altoft@sign,w
  3227  0C28  00C7               	movwf	??___altoft+1
  3228  0C29  0847               	movf	??___altoft+1,w
  3229  0C2A  00AA               	movwf	___ftpack@sign
  3230  0C2B  120A  158A  2578   	fcall	___ftpack
  3231  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  3233  0C30  0826               	movf	?___ftpack,w
  3234  0C31  00C2               	movwf	?___altoft
  3235  0C32  0827               	movf	?___ftpack+1,w
  3236  0C33  00C3               	movwf	?___altoft+1
  3237  0C34  0828               	movf	?___ftpack+2,w
  3238  0C35  00C4               	movwf	?___altoft+2
  3239  0C36  0008               	return
  3240  0C37                     __end_of___altoft:	
  3241                           
  3242                           	psect	text12
  3243  0DE6                     __ptext12:	
  3244 ;; *************** function _eval_poly *****************
  3245 ;; Defined at:
  3246 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  x               3   49[BANK0 ] float 
  3249 ;;  d               1   52[BANK0 ] PTR const 
  3250 ;;		 -> log@coeff(27), exp@coeff(30), 
  3251 ;;  n               2   53[BANK0 ] int 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  res             3   56[BANK0 ] int 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  3   49[BANK0 ] int 
  3256 ;; Registers used:
  3257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       6       0       0       0
  3264 ;;      Locals:         0       3       0       0       0
  3265 ;;      Temps:          0       1       0       0       0
  3266 ;;      Totals:         0      10       0       0       0
  3267 ;;Total ram usage:       10 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    4
  3270 ;; This function calls:
  3271 ;;		___bmul
  3272 ;;		___ftadd
  3273 ;;		___ftmul
  3274 ;; This function is called by:
  3275 ;;		_exp
  3276 ;;		_log
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _eval_poly
  3282  0DE6                     _eval_poly:	
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3286  0DE6  3003               	movlw	3
  3287  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0DE9  00D7               	movwf	??_eval_poly
  3290  0DEA  0857               	movf	??_eval_poly,w
  3291  0DEB  00A6               	movwf	___bmul@multiplicand
  3292  0DEC  0855               	movf	eval_poly@n,w
  3293  0DED  120A  158A  232C  120A  158A  	fcall	___bmul
  3294  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0DF4  0754               	addwf	eval_poly@d,w
  3297  0DF5  0084               	movwf	4
  3298  0DF6  120A  158A  2000  120A  158A  	fcall	stringdir
  3299  0DFB  00D8               	movwf	eval_poly@res
  3300  0DFC  120A  158A  2000  120A  158A  	fcall	stringdir
  3301  0E01  00D9               	movwf	eval_poly@res+1
  3302  0E02  120A  158A  2000  120A  158A  	fcall	stringdir
  3303  0E07                     L2:	
  3304  0E07  00DA               	movwf	eval_poly@res+2
  3305  0E08  0855               	movf	eval_poly@n,w
  3306  0E09  0456               	iorwf	eval_poly@n+1,w
  3307  0E0A  1903               	btfsc	3,2
  3308  0E0B  2E58               	goto	l1640
  3309  0E0C  3003               	movlw	3
  3310  0E0D  00D7               	movwf	??_eval_poly
  3311  0E0E  0857               	movf	??_eval_poly,w
  3312  0E0F  00A6               	movwf	___bmul@multiplicand
  3313  0E10  30FF               	movlw	255
  3314  0E11  07D5               	addwf	eval_poly@n,f
  3315  0E12  1803               	skipnc
  3316  0E13  0AD6               	incf	eval_poly@n+1,f
  3317  0E14  30FF               	movlw	255
  3318  0E15  07D6               	addwf	eval_poly@n+1,f
  3319  0E16  0855               	movf	eval_poly@n,w
  3320  0E17  120A  158A  232C  120A  158A  	fcall	___bmul
  3321  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0E1E  0754               	addwf	eval_poly@d,w
  3324  0E1F  0084               	movwf	4
  3325  0E20  120A  158A  2000  120A  158A  	fcall	stringdir
  3326  0E25  00C4               	movwf	___ftadd@f1
  3327  0E26  120A  158A  2000  120A  158A  	fcall	stringdir
  3328  0E2B  00C5               	movwf	___ftadd@f1+1
  3329  0E2C  120A  158A  2000  120A  158A  	fcall	stringdir
  3330  0E31  00C6               	movwf	___ftadd@f1+2
  3331  0E32  0858               	movf	eval_poly@res,w
  3332  0E33  00B4               	movwf	___ftmul@f1
  3333  0E34  0859               	movf	eval_poly@res+1,w
  3334  0E35  00B5               	movwf	___ftmul@f1+1
  3335  0E36  085A               	movf	eval_poly@res+2,w
  3336  0E37  00B6               	movwf	___ftmul@f1+2
  3337  0E38  0851               	movf	eval_poly@x,w
  3338  0E39  00B7               	movwf	___ftmul@f2
  3339  0E3A  0852               	movf	eval_poly@x+1,w
  3340  0E3B  00B8               	movwf	___ftmul@f2+1
  3341  0E3C  0853               	movf	eval_poly@x+2,w
  3342  0E3D  00B9               	movwf	___ftmul@f2+2
  3343  0E3E  120A  118A  24D9  120A  158A  	fcall	___ftmul
  3344  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0E45  0834               	movf	?___ftmul,w
  3347  0E46  00C7               	movwf	___ftadd@f2
  3348  0E47  0835               	movf	?___ftmul+1,w
  3349  0E48  00C8               	movwf	___ftadd@f2+1
  3350  0E49  0836               	movf	?___ftmul+2,w
  3351  0E4A  00C9               	movwf	___ftadd@f2+2
  3352  0E4B  120A  118A  23D0  120A  158A  	fcall	___ftadd
  3353  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0E52  0844               	movf	?___ftadd,w
  3356  0E53  00D8               	movwf	eval_poly@res
  3357  0E54  0845               	movf	?___ftadd+1,w
  3358  0E55  00D9               	movwf	eval_poly@res+1
  3359  0E56  0846               	movf	?___ftadd+2,w
  3360  0E57  2E07               	goto	L2
  3361  0E58                     l1640:	
  3362  0E58  0858               	movf	eval_poly@res,w
  3363  0E59  00D1               	movwf	?_eval_poly
  3364  0E5A  0859               	movf	eval_poly@res+1,w
  3365  0E5B  00D2               	movwf	?_eval_poly+1
  3366  0E5C  085A               	movf	eval_poly@res+2,w
  3367  0E5D  00D3               	movwf	?_eval_poly+2
  3368  0E5E  0008               	return
  3369  0E5F                     __end_of_eval_poly:	
  3370                           
  3371                           	psect	text13
  3372  04D9                     __ptext13:	
  3373 ;; *************** function ___ftmul *****************
  3374 ;; Defined at:
  3375 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  f1              3   20[BANK0 ] float 
  3378 ;;  f2              3   23[BANK0 ] float 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  3381 ;;  sign            1   35[BANK0 ] unsigned char 
  3382 ;;  cntr            1   34[BANK0 ] unsigned char 
  3383 ;;  exp             1   30[BANK0 ] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  3   20[BANK0 ] float 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0, pclath, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       6       0       0       0
  3394 ;;      Locals:         0       6       0       0       0
  3395 ;;      Temps:          0       4       0       0       0
  3396 ;;      Totals:         0      16       0       0       0
  3397 ;;Total ram usage:       16 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    3
  3400 ;; This function calls:
  3401 ;;		___ftpack
  3402 ;; This function is called by:
  3403 ;;		_pow
  3404 ;;		_exp
  3405 ;;		_log
  3406 ;;		_eval_poly
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function ___ftmul
  3412  04D9                     ___ftmul:	
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3416  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3417  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3418  04DB  0834               	movf	___ftmul@f1,w
  3419  04DC  00BA               	movwf	??___ftmul
  3420  04DD  0835               	movf	___ftmul@f1+1,w
  3421  04DE  00BB               	movwf	??___ftmul+1
  3422  04DF  0836               	movf	___ftmul@f1+2,w
  3423  04E0  00BC               	movwf	??___ftmul+2
  3424  04E1  1003               	clrc
  3425  04E2  0D3B               	rlf	??___ftmul+1,w
  3426  04E3  0D3C               	rlf	??___ftmul+2,w
  3427  04E4  00BD               	movwf	??___ftmul+3
  3428  04E5  083D               	movf	??___ftmul+3,w
  3429  04E6  00BE               	movwf	___ftmul@exp
  3430  04E7  083E               	movf	___ftmul@exp,w
  3431  04E8  1D03               	btfss	3,2
  3432  04E9  2CF1               	goto	l1430
  3433  04EA  3000               	movlw	0
  3434  04EB  00B4               	movwf	?___ftmul
  3435  04EC  3000               	movlw	0
  3436  04ED  00B5               	movwf	?___ftmul+1
  3437  04EE  3000               	movlw	0
  3438  04EF  00B6               	movwf	?___ftmul+2
  3439  04F0  0008               	return
  3440  04F1                     l1430:	
  3441  04F1  0837               	movf	___ftmul@f2,w
  3442  04F2  00BA               	movwf	??___ftmul
  3443  04F3  0838               	movf	___ftmul@f2+1,w
  3444  04F4  00BB               	movwf	??___ftmul+1
  3445  04F5  0839               	movf	___ftmul@f2+2,w
  3446  04F6  00BC               	movwf	??___ftmul+2
  3447  04F7  1003               	clrc
  3448  04F8  0D3B               	rlf	??___ftmul+1,w
  3449  04F9  0D3C               	rlf	??___ftmul+2,w
  3450  04FA  00BD               	movwf	??___ftmul+3
  3451  04FB  083D               	movf	??___ftmul+3,w
  3452  04FC  00C3               	movwf	___ftmul@sign
  3453  04FD  0843               	movf	___ftmul@sign,w
  3454  04FE  1D03               	btfss	3,2
  3455  04FF  2D07               	goto	l1436
  3456  0500  3000               	movlw	0
  3457  0501  00B4               	movwf	?___ftmul
  3458  0502  3000               	movlw	0
  3459  0503  00B5               	movwf	?___ftmul+1
  3460  0504  3000               	movlw	0
  3461  0505  00B6               	movwf	?___ftmul+2
  3462  0506  0008               	return
  3463  0507                     l1436:	
  3464  0507  0843               	movf	___ftmul@sign,w
  3465  0508  3E7B               	addlw	123
  3466  0509  00BA               	movwf	??___ftmul
  3467  050A  083A               	movf	??___ftmul,w
  3468  050B  07BE               	addwf	___ftmul@exp,f
  3469  050C  0834               	movf	___ftmul@f1,w
  3470  050D  00BA               	movwf	??___ftmul
  3471  050E  0835               	movf	___ftmul@f1+1,w
  3472  050F  00BB               	movwf	??___ftmul+1
  3473  0510  0836               	movf	___ftmul@f1+2,w
  3474  0511  00BC               	movwf	??___ftmul+2
  3475  0512  3010               	movlw	16
  3476  0513                     u1805:	
  3477  0513  1003               	clrc
  3478  0514  0CBC               	rrf	??___ftmul+2,f
  3479  0515  0CBB               	rrf	??___ftmul+1,f
  3480  0516  0CBA               	rrf	??___ftmul,f
  3481  0517  3EFF               	addlw	-1
  3482  0518  1D03               	skipz
  3483  0519  2D13               	goto	u1805
  3484  051A  083A               	movf	??___ftmul,w
  3485  051B  00BD               	movwf	??___ftmul+3
  3486  051C  083D               	movf	??___ftmul+3,w
  3487  051D  00C3               	movwf	___ftmul@sign
  3488  051E  0837               	movf	___ftmul@f2,w
  3489  051F  00BA               	movwf	??___ftmul
  3490  0520  0838               	movf	___ftmul@f2+1,w
  3491  0521  00BB               	movwf	??___ftmul+1
  3492  0522  0839               	movf	___ftmul@f2+2,w
  3493  0523  00BC               	movwf	??___ftmul+2
  3494  0524  3010               	movlw	16
  3495  0525                     u1815:	
  3496  0525  1003               	clrc
  3497  0526  0CBC               	rrf	??___ftmul+2,f
  3498  0527  0CBB               	rrf	??___ftmul+1,f
  3499  0528  0CBA               	rrf	??___ftmul,f
  3500  0529  3EFF               	addlw	-1
  3501  052A  1D03               	skipz
  3502  052B  2D25               	goto	u1815
  3503  052C  083A               	movf	??___ftmul,w
  3504  052D  00BD               	movwf	??___ftmul+3
  3505  052E  083D               	movf	??___ftmul+3,w
  3506  052F  06C3               	xorwf	___ftmul@sign,f
  3507  0530  3080               	movlw	128
  3508  0531  00BA               	movwf	??___ftmul
  3509  0532  083A               	movf	??___ftmul,w
  3510  0533  05C3               	andwf	___ftmul@sign,f
  3511  0534  17B5               	bsf	___ftmul@f1+1,7
  3512  0535  17B8               	bsf	___ftmul@f2+1,7
  3513  0536  30FF               	movlw	255
  3514  0537  05B7               	andwf	___ftmul@f2,f
  3515  0538  30FF               	movlw	255
  3516  0539  05B8               	andwf	___ftmul@f2+1,f
  3517  053A  3000               	movlw	0
  3518  053B  05B9               	andwf	___ftmul@f2+2,f
  3519  053C  3000               	movlw	0
  3520  053D  00BF               	movwf	___ftmul@f3_as_product
  3521  053E  3000               	movlw	0
  3522  053F  00C0               	movwf	___ftmul@f3_as_product+1
  3523  0540  3000               	movlw	0
  3524  0541  00C1               	movwf	___ftmul@f3_as_product+2
  3525  0542  3007               	movlw	7
  3526  0543  00BA               	movwf	??___ftmul
  3527  0544  083A               	movf	??___ftmul,w
  3528  0545  00C2               	movwf	___ftmul@cntr
  3529  0546                     l1448:	
  3530  0546  1C34               	btfss	___ftmul@f1,0
  3531  0547  2D56               	goto	l1452
  3532  0548  0837               	movf	___ftmul@f2,w
  3533  0549  07BF               	addwf	___ftmul@f3_as_product,f
  3534  054A  0838               	movf	___ftmul@f2+1,w
  3535  054B  1103               	clrz
  3536  054C  1803               	skipnc
  3537  054D  0A38               	incf	___ftmul@f2+1,w
  3538  054E  1D03               	btfss	3,2
  3539  054F  07C0               	addwf	___ftmul@f3_as_product+1,f
  3540  0550  0839               	movf	___ftmul@f2+2,w
  3541  0551  1103               	clrz
  3542  0552  1803               	skipnc
  3543  0553  0A39               	incf	___ftmul@f2+2,w
  3544  0554  1D03               	btfss	3,2
  3545  0555  07C1               	addwf	___ftmul@f3_as_product+2,f
  3546  0556                     l1452:	
  3547  0556  3001               	movlw	1
  3548  0557                     u1845:	
  3549  0557  1003               	clrc
  3550  0558  0CB6               	rrf	___ftmul@f1+2,f
  3551  0559  0CB5               	rrf	___ftmul@f1+1,f
  3552  055A  0CB4               	rrf	___ftmul@f1,f
  3553  055B  3EFF               	addlw	-1
  3554  055C  1D03               	skipz
  3555  055D  2D57               	goto	u1845
  3556  055E  3001               	movlw	1
  3557  055F                     u1855:	
  3558  055F  1003               	clrc
  3559  0560  0DB7               	rlf	___ftmul@f2,f
  3560  0561  0DB8               	rlf	___ftmul@f2+1,f
  3561  0562  0DB9               	rlf	___ftmul@f2+2,f
  3562  0563  3EFF               	addlw	-1
  3563  0564  1D03               	skipz
  3564  0565  2D5F               	goto	u1855
  3565  0566  3001               	movlw	1
  3566  0567  02C2               	subwf	___ftmul@cntr,f
  3567  0568  1D03               	btfss	3,2
  3568  0569  2D46               	goto	l1448
  3569  056A  3009               	movlw	9
  3570  056B  00BA               	movwf	??___ftmul
  3571  056C  083A               	movf	??___ftmul,w
  3572  056D  00C2               	movwf	___ftmul@cntr
  3573  056E                     l1460:	
  3574  056E  1C34               	btfss	___ftmul@f1,0
  3575  056F  2D7E               	goto	l1464
  3576  0570  0837               	movf	___ftmul@f2,w
  3577  0571  07BF               	addwf	___ftmul@f3_as_product,f
  3578  0572  0838               	movf	___ftmul@f2+1,w
  3579  0573  1103               	clrz
  3580  0574  1803               	skipnc
  3581  0575  0A38               	incf	___ftmul@f2+1,w
  3582  0576  1D03               	btfss	3,2
  3583  0577  07C0               	addwf	___ftmul@f3_as_product+1,f
  3584  0578  0839               	movf	___ftmul@f2+2,w
  3585  0579  1103               	clrz
  3586  057A  1803               	skipnc
  3587  057B  0A39               	incf	___ftmul@f2+2,w
  3588  057C  1D03               	btfss	3,2
  3589  057D  07C1               	addwf	___ftmul@f3_as_product+2,f
  3590  057E                     l1464:	
  3591  057E  3001               	movlw	1
  3592  057F                     u1895:	
  3593  057F  1003               	clrc
  3594  0580  0CB6               	rrf	___ftmul@f1+2,f
  3595  0581  0CB5               	rrf	___ftmul@f1+1,f
  3596  0582  0CB4               	rrf	___ftmul@f1,f
  3597  0583  3EFF               	addlw	-1
  3598  0584  1D03               	skipz
  3599  0585  2D7F               	goto	u1895
  3600  0586  3001               	movlw	1
  3601  0587                     u1905:	
  3602  0587  1003               	clrc
  3603  0588  0CC1               	rrf	___ftmul@f3_as_product+2,f
  3604  0589  0CC0               	rrf	___ftmul@f3_as_product+1,f
  3605  058A  0CBF               	rrf	___ftmul@f3_as_product,f
  3606  058B  3EFF               	addlw	-1
  3607  058C  1D03               	skipz
  3608  058D  2D87               	goto	u1905
  3609  058E  3001               	movlw	1
  3610  058F  02C2               	subwf	___ftmul@cntr,f
  3611  0590  1D03               	btfss	3,2
  3612  0591  2D6E               	goto	l1460
  3613  0592  083F               	movf	___ftmul@f3_as_product,w
  3614  0593  00A6               	movwf	___ftpack@arg
  3615  0594  0840               	movf	___ftmul@f3_as_product+1,w
  3616  0595  00A7               	movwf	___ftpack@arg+1
  3617  0596  0841               	movf	___ftmul@f3_as_product+2,w
  3618  0597  00A8               	movwf	___ftpack@arg+2
  3619  0598  083E               	movf	___ftmul@exp,w
  3620  0599  00BA               	movwf	??___ftmul
  3621  059A  083A               	movf	??___ftmul,w
  3622  059B  00A9               	movwf	___ftpack@exp
  3623  059C  0843               	movf	___ftmul@sign,w
  3624  059D  00BB               	movwf	??___ftmul+1
  3625  059E  083B               	movf	??___ftmul+1,w
  3626  059F  00AA               	movwf	___ftpack@sign
  3627  05A0  120A  158A  2578   	fcall	___ftpack
  3628  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3629  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3630  05A5  0826               	movf	?___ftpack,w
  3631  05A6  00B4               	movwf	?___ftmul
  3632  05A7  0827               	movf	?___ftpack+1,w
  3633  05A8  00B5               	movwf	?___ftmul+1
  3634  05A9  0828               	movf	?___ftpack+2,w
  3635  05AA  00B6               	movwf	?___ftmul+2
  3636  05AB  0008               	return
  3637  05AC                     __end_of___ftmul:	
  3638                           
  3639                           	psect	text14
  3640  0B2C                     __ptext14:	
  3641 ;; *************** function ___bmul *****************
  3642 ;; Defined at:
  3643 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  multiplier      1    wreg     unsigned char 
  3646 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  multiplier      1    9[BANK0 ] unsigned char 
  3649 ;;  product         1    8[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      unsigned char 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       1       0       0       0
  3660 ;;      Locals:         0       2       0       0       0
  3661 ;;      Temps:          0       1       0       0       0
  3662 ;;      Totals:         0       4       0       0       0
  3663 ;;Total ram usage:        4 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    2
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_eval_poly
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           
  3674                           ;psect for function ___bmul
  3675  0B2C                     ___bmul:	
  3676                           
  3677                           ;incstack = 0
  3678                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3679                           ;___bmul@multiplier stored from wreg
  3680  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0B2E  00A9               	movwf	___bmul@multiplier
  3683  0B2F  01A8               	clrf	___bmul@product
  3684  0B30                     l1306:	
  3685  0B30  1C29               	btfss	___bmul@multiplier,0
  3686  0B31  2B36               	goto	l1310
  3687  0B32  0826               	movf	___bmul@multiplicand,w
  3688  0B33  00A7               	movwf	??___bmul
  3689  0B34  0827               	movf	??___bmul,w
  3690  0B35  07A8               	addwf	___bmul@product,f
  3691  0B36                     l1310:	
  3692  0B36  1003               	clrc
  3693  0B37  0DA6               	rlf	___bmul@multiplicand,f
  3694  0B38  1003               	clrc
  3695  0B39  0CA9               	rrf	___bmul@multiplier,f
  3696  0B3A  0829               	movf	___bmul@multiplier,w
  3697  0B3B  1D03               	btfss	3,2
  3698  0B3C  2B30               	goto	l1306
  3699  0B3D  0828               	movf	___bmul@product,w
  3700  0B3E  0008               	return
  3701  0B3F                     __end_of___bmul:	
  3702                           
  3703                           	psect	text15
  3704  0B3F                     __ptext15:	
  3705 ;; *************** function ___ftsub *****************
  3706 ;; Defined at:
  3707 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  f2              3   49[BANK0 ] float 
  3710 ;;  f1              3   52[BANK0 ] float 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  3   49[BANK0 ] float 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       6       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0
  3725 ;;      Totals:         0       6       0       0       0
  3726 ;;Total ram usage:        6 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    4
  3729 ;; This function calls:
  3730 ;;		___ftadd
  3731 ;; This function is called by:
  3732 ;;		_exp
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function ___ftsub
  3738  0B3F                     ___ftsub:	
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3742  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0B41  0853               	movf	___ftsub@f2+2,w
  3745  0B42  0452               	iorwf	___ftsub@f2+1,w
  3746  0B43  0451               	iorwf	___ftsub@f2,w
  3747  0B44  1903               	skipnz
  3748  0B45  2B48               	goto	l1602
  3749  0B46  3080               	movlw	128
  3750  0B47  06D3               	xorwf	___ftsub@f2+2,f
  3751  0B48                     l1602:	
  3752  0B48  0854               	movf	___ftsub@f1,w
  3753  0B49  00C4               	movwf	___ftadd@f1
  3754  0B4A  0855               	movf	___ftsub@f1+1,w
  3755  0B4B  00C5               	movwf	___ftadd@f1+1
  3756  0B4C  0856               	movf	___ftsub@f1+2,w
  3757  0B4D  00C6               	movwf	___ftadd@f1+2
  3758  0B4E  0851               	movf	___ftsub@f2,w
  3759  0B4F  00C7               	movwf	___ftadd@f2
  3760  0B50  0852               	movf	___ftsub@f2+1,w
  3761  0B51  00C8               	movwf	___ftadd@f2+1
  3762  0B52  0853               	movf	___ftsub@f2+2,w
  3763  0B53  00C9               	movwf	___ftadd@f2+2
  3764  0B54  120A  118A  23D0   	fcall	___ftadd
  3765  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0B59  0844               	movf	?___ftadd,w
  3768  0B5A  00D1               	movwf	?___ftsub
  3769  0B5B  0845               	movf	?___ftadd+1,w
  3770  0B5C  00D2               	movwf	?___ftsub+1
  3771  0B5D  0846               	movf	?___ftadd+2,w
  3772  0B5E  00D3               	movwf	?___ftsub+2
  3773  0B5F  0008               	return
  3774  0B60                     __end_of___ftsub:	
  3775                           
  3776                           	psect	text16
  3777  03D0                     __ptext16:	
  3778 ;; *************** function ___ftadd *****************
  3779 ;; Defined at:
  3780 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  f1              3   36[BANK0 ] float 
  3783 ;;  f2              3   39[BANK0 ] float 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  exp1            1   48[BANK0 ] unsigned char 
  3786 ;;  exp2            1   47[BANK0 ] unsigned char 
  3787 ;;  sign            1   46[BANK0 ] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  3   36[BANK0 ] float 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0, pclath, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3797 ;;      Params:         0       6       0       0       0
  3798 ;;      Locals:         0       3       0       0       0
  3799 ;;      Temps:          0       4       0       0       0
  3800 ;;      Totals:         0      13       0       0       0
  3801 ;;Total ram usage:       13 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    3
  3804 ;; This function calls:
  3805 ;;		___ftpack
  3806 ;; This function is called by:
  3807 ;;		___ftsub
  3808 ;;		_floor
  3809 ;;		_log
  3810 ;;		_eval_poly
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function ___ftadd
  3816  03D0                     ___ftadd:	
  3817                           
  3818                           ;incstack = 0
  3819                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3820  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3821  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3822  03D2  0844               	movf	___ftadd@f1,w
  3823  03D3  00CA               	movwf	??___ftadd
  3824  03D4  0845               	movf	___ftadd@f1+1,w
  3825  03D5  00CB               	movwf	??___ftadd+1
  3826  03D6  0846               	movf	___ftadd@f1+2,w
  3827  03D7  00CC               	movwf	??___ftadd+2
  3828  03D8  1003               	clrc
  3829  03D9  0D4B               	rlf	??___ftadd+1,w
  3830  03DA  0D4C               	rlf	??___ftadd+2,w
  3831  03DB  00CD               	movwf	??___ftadd+3
  3832  03DC  084D               	movf	??___ftadd+3,w
  3833  03DD  00D0               	movwf	___ftadd@exp1
  3834  03DE  0847               	movf	___ftadd@f2,w
  3835  03DF  00CA               	movwf	??___ftadd
  3836  03E0  0848               	movf	___ftadd@f2+1,w
  3837  03E1  00CB               	movwf	??___ftadd+1
  3838  03E2  0849               	movf	___ftadd@f2+2,w
  3839  03E3  00CC               	movwf	??___ftadd+2
  3840  03E4  1003               	clrc
  3841  03E5  0D4B               	rlf	??___ftadd+1,w
  3842  03E6  0D4C               	rlf	??___ftadd+2,w
  3843  03E7  00CD               	movwf	??___ftadd+3
  3844  03E8  084D               	movf	??___ftadd+3,w
  3845  03E9  00CF               	movwf	___ftadd@exp2
  3846  03EA  0850               	movf	___ftadd@exp1,w
  3847  03EB  1903               	btfsc	3,2
  3848  03EC  2BF9               	goto	l1340
  3849  03ED  084F               	movf	___ftadd@exp2,w
  3850  03EE  0250               	subwf	___ftadd@exp1,w
  3851  03EF  1803               	skipnc
  3852  03F0  2C00               	goto	l1344
  3853  03F1  0350               	decf	___ftadd@exp1,w
  3854  03F2  3AFF               	xorlw	255
  3855  03F3  074F               	addwf	___ftadd@exp2,w
  3856  03F4  00CA               	movwf	??___ftadd
  3857  03F5  3019               	movlw	25
  3858  03F6  024A               	subwf	??___ftadd,w
  3859  03F7  1C03               	skipc
  3860  03F8  2C00               	goto	l1344
  3861  03F9                     l1340:	
  3862  03F9  0847               	movf	___ftadd@f2,w
  3863  03FA  00C4               	movwf	?___ftadd
  3864  03FB  0848               	movf	___ftadd@f2+1,w
  3865  03FC  00C5               	movwf	?___ftadd+1
  3866  03FD  0849               	movf	___ftadd@f2+2,w
  3867  03FE  00C6               	movwf	?___ftadd+2
  3868  03FF  0008               	return
  3869  0400                     l1344:	
  3870  0400  084F               	movf	___ftadd@exp2,w
  3871  0401  1903               	btfsc	3,2
  3872  0402  0008               	return
  3873  0403  0850               	movf	___ftadd@exp1,w
  3874  0404  024F               	subwf	___ftadd@exp2,w
  3875  0405  1803               	skipnc
  3876  0406  2C0F               	goto	l1350
  3877  0407  034F               	decf	___ftadd@exp2,w
  3878  0408  3AFF               	xorlw	255
  3879  0409  0750               	addwf	___ftadd@exp1,w
  3880  040A  00CA               	movwf	??___ftadd
  3881  040B  3019               	movlw	25
  3882  040C  024A               	subwf	??___ftadd,w
  3883  040D  1803               	btfsc	3,0
  3884  040E  0008               	return
  3885  040F                     l1350:	
  3886  040F  3006               	movlw	6
  3887  0410  00CA               	movwf	??___ftadd
  3888  0411  084A               	movf	??___ftadd,w
  3889  0412  00CE               	movwf	___ftadd@sign
  3890  0413  1BC6               	btfsc	___ftadd@f1+2,7
  3891  0414  17CE               	bsf	___ftadd@sign,7
  3892  0415  1BC9               	btfsc	___ftadd@f2+2,7
  3893  0416  174E               	bsf	___ftadd@sign,6
  3894  0417  17C5               	bsf	___ftadd@f1+1,7
  3895  0418  30FF               	movlw	255
  3896  0419  05C4               	andwf	___ftadd@f1,f
  3897  041A  30FF               	movlw	255
  3898  041B  05C5               	andwf	___ftadd@f1+1,f
  3899  041C  3000               	movlw	0
  3900  041D  05C6               	andwf	___ftadd@f1+2,f
  3901  041E  17C8               	bsf	___ftadd@f2+1,7
  3902  041F  30FF               	movlw	255
  3903  0420  05C7               	andwf	___ftadd@f2,f
  3904  0421  30FF               	movlw	255
  3905  0422  05C8               	andwf	___ftadd@f2+1,f
  3906  0423  3000               	movlw	0
  3907  0424  05C9               	andwf	___ftadd@f2+2,f
  3908  0425  084F               	movf	___ftadd@exp2,w
  3909  0426  0250               	subwf	___ftadd@exp1,w
  3910  0427  1803               	skipnc
  3911  0428  2C4F               	goto	l1372
  3912  0429                     l1362:	
  3913  0429  3001               	movlw	1
  3914  042A                     u1585:	
  3915  042A  1003               	clrc
  3916  042B  0DC7               	rlf	___ftadd@f2,f
  3917  042C  0DC8               	rlf	___ftadd@f2+1,f
  3918  042D  0DC9               	rlf	___ftadd@f2+2,f
  3919  042E  3EFF               	addlw	-1
  3920  042F  1D03               	skipz
  3921  0430  2C2A               	goto	u1585
  3922  0431  3001               	movlw	1
  3923  0432  02CF               	subwf	___ftadd@exp2,f
  3924  0433  084F               	movf	___ftadd@exp2,w
  3925  0434  0650               	xorwf	___ftadd@exp1,w
  3926  0435  1903               	skipnz
  3927  0436  2C4A               	goto	l1370
  3928  0437  3001               	movlw	1
  3929  0438  02CE               	subwf	___ftadd@sign,f
  3930  0439  084E               	movf	___ftadd@sign,w
  3931  043A  3907               	andlw	7
  3932  043B  1903               	btfsc	3,2
  3933  043C  2C4A               	goto	l1370
  3934  043D  2C29               	goto	l1362
  3935  043E                     l1368:	
  3936  043E  3001               	movlw	1
  3937  043F                     u1615:	
  3938  043F  1003               	clrc
  3939  0440  0CC6               	rrf	___ftadd@f1+2,f
  3940  0441  0CC5               	rrf	___ftadd@f1+1,f
  3941  0442  0CC4               	rrf	___ftadd@f1,f
  3942  0443  3EFF               	addlw	-1
  3943  0444  1D03               	skipz
  3944  0445  2C3F               	goto	u1615
  3945  0446  3001               	movlw	1
  3946  0447  00CA               	movwf	??___ftadd
  3947  0448  084A               	movf	??___ftadd,w
  3948  0449  07D0               	addwf	___ftadd@exp1,f
  3949  044A                     l1370:	
  3950  044A  0850               	movf	___ftadd@exp1,w
  3951  044B  064F               	xorwf	___ftadd@exp2,w
  3952  044C  1903               	btfsc	3,2
  3953  044D  2C78               	goto	l323
  3954  044E  2C3E               	goto	l1368
  3955  044F                     l1372:	
  3956  044F  0850               	movf	___ftadd@exp1,w
  3957  0450  024F               	subwf	___ftadd@exp2,w
  3958  0451  1803               	skipnc
  3959  0452  2C78               	goto	l323
  3960  0453                     l1374:	
  3961  0453  3001               	movlw	1
  3962  0454                     u1645:	
  3963  0454  1003               	clrc
  3964  0455  0DC4               	rlf	___ftadd@f1,f
  3965  0456  0DC5               	rlf	___ftadd@f1+1,f
  3966  0457  0DC6               	rlf	___ftadd@f1+2,f
  3967  0458  3EFF               	addlw	-1
  3968  0459  1D03               	skipz
  3969  045A  2C54               	goto	u1645
  3970  045B  3001               	movlw	1
  3971  045C  02D0               	subwf	___ftadd@exp1,f
  3972  045D  084F               	movf	___ftadd@exp2,w
  3973  045E  0650               	xorwf	___ftadd@exp1,w
  3974  045F  1903               	skipnz
  3975  0460  2C74               	goto	l1382
  3976  0461  3001               	movlw	1
  3977  0462  02CE               	subwf	___ftadd@sign,f
  3978  0463  084E               	movf	___ftadd@sign,w
  3979  0464  3907               	andlw	7
  3980  0465  1903               	btfsc	3,2
  3981  0466  2C74               	goto	l1382
  3982  0467  2C53               	goto	l1374
  3983  0468                     l1380:	
  3984  0468  3001               	movlw	1
  3985  0469                     u1675:	
  3986  0469  1003               	clrc
  3987  046A  0CC9               	rrf	___ftadd@f2+2,f
  3988  046B  0CC8               	rrf	___ftadd@f2+1,f
  3989  046C  0CC7               	rrf	___ftadd@f2,f
  3990  046D  3EFF               	addlw	-1
  3991  046E  1D03               	skipz
  3992  046F  2C69               	goto	u1675
  3993  0470  3001               	movlw	1
  3994  0471  00CA               	movwf	??___ftadd
  3995  0472  084A               	movf	??___ftadd,w
  3996  0473  07CF               	addwf	___ftadd@exp2,f
  3997  0474                     l1382:	
  3998  0474  0850               	movf	___ftadd@exp1,w
  3999  0475  064F               	xorwf	___ftadd@exp2,w
  4000  0476  1D03               	skipz
  4001  0477  2C68               	goto	l1380
  4002  0478                     l323:	
  4003  0478  1FCE               	btfss	___ftadd@sign,7
  4004  0479  2C8A               	goto	l1386
  4005  047A  30FF               	movlw	255
  4006  047B  06C4               	xorwf	___ftadd@f1,f
  4007  047C  30FF               	movlw	255
  4008  047D  06C5               	xorwf	___ftadd@f1+1,f
  4009  047E  30FF               	movlw	255
  4010  047F  06C6               	xorwf	___ftadd@f1+2,f
  4011  0480  3001               	movlw	1
  4012  0481  07C4               	addwf	___ftadd@f1,f
  4013  0482  3000               	movlw	0
  4014  0483  1803               	skipnc
  4015  0484  3001               	movlw	1
  4016  0485  07C5               	addwf	___ftadd@f1+1,f
  4017  0486  3000               	movlw	0
  4018  0487  1803               	skipnc
  4019  0488  3001               	movlw	1
  4020  0489  07C6               	addwf	___ftadd@f1+2,f
  4021  048A                     l1386:	
  4022  048A  1F4E               	btfss	___ftadd@sign,6
  4023  048B  2C9C               	goto	l1390
  4024  048C  30FF               	movlw	255
  4025  048D  06C7               	xorwf	___ftadd@f2,f
  4026  048E  30FF               	movlw	255
  4027  048F  06C8               	xorwf	___ftadd@f2+1,f
  4028  0490  30FF               	movlw	255
  4029  0491  06C9               	xorwf	___ftadd@f2+2,f
  4030  0492  3001               	movlw	1
  4031  0493  07C7               	addwf	___ftadd@f2,f
  4032  0494  3000               	movlw	0
  4033  0495  1803               	skipnc
  4034  0496  3001               	movlw	1
  4035  0497  07C8               	addwf	___ftadd@f2+1,f
  4036  0498  3000               	movlw	0
  4037  0499  1803               	skipnc
  4038  049A  3001               	movlw	1
  4039  049B  07C9               	addwf	___ftadd@f2+2,f
  4040  049C                     l1390:	
  4041  049C  01CE               	clrf	___ftadd@sign
  4042  049D  0844               	movf	___ftadd@f1,w
  4043  049E  07C7               	addwf	___ftadd@f2,f
  4044  049F  0845               	movf	___ftadd@f1+1,w
  4045  04A0  1103               	clrz
  4046  04A1  1803               	skipnc
  4047  04A2  0A45               	incf	___ftadd@f1+1,w
  4048  04A3  1D03               	btfss	3,2
  4049  04A4  07C8               	addwf	___ftadd@f2+1,f
  4050  04A5  0846               	movf	___ftadd@f1+2,w
  4051  04A6  1103               	clrz
  4052  04A7  1803               	skipnc
  4053  04A8  0A46               	incf	___ftadd@f1+2,w
  4054  04A9  1D03               	btfss	3,2
  4055  04AA  07C9               	addwf	___ftadd@f2+2,f
  4056  04AB  1FC9               	btfss	___ftadd@f2+2,7
  4057  04AC  2CBF               	goto	l1400
  4058  04AD  30FF               	movlw	255
  4059  04AE  06C7               	xorwf	___ftadd@f2,f
  4060  04AF  30FF               	movlw	255
  4061  04B0  06C8               	xorwf	___ftadd@f2+1,f
  4062  04B1  30FF               	movlw	255
  4063  04B2  06C9               	xorwf	___ftadd@f2+2,f
  4064  04B3  3001               	movlw	1
  4065  04B4  07C7               	addwf	___ftadd@f2,f
  4066  04B5  3000               	movlw	0
  4067  04B6  1803               	skipnc
  4068  04B7  3001               	movlw	1
  4069  04B8  07C8               	addwf	___ftadd@f2+1,f
  4070  04B9  3000               	movlw	0
  4071  04BA  1803               	skipnc
  4072  04BB  3001               	movlw	1
  4073  04BC  07C9               	addwf	___ftadd@f2+2,f
  4074  04BD  01CE               	clrf	___ftadd@sign
  4075  04BE  0ACE               	incf	___ftadd@sign,f
  4076  04BF                     l1400:	
  4077  04BF  0847               	movf	___ftadd@f2,w
  4078  04C0  00A6               	movwf	___ftpack@arg
  4079  04C1  0848               	movf	___ftadd@f2+1,w
  4080  04C2  00A7               	movwf	___ftpack@arg+1
  4081  04C3  0849               	movf	___ftadd@f2+2,w
  4082  04C4  00A8               	movwf	___ftpack@arg+2
  4083  04C5  0850               	movf	___ftadd@exp1,w
  4084  04C6  00CA               	movwf	??___ftadd
  4085  04C7  084A               	movf	??___ftadd,w
  4086  04C8  00A9               	movwf	___ftpack@exp
  4087  04C9  084E               	movf	___ftadd@sign,w
  4088  04CA  00CB               	movwf	??___ftadd+1
  4089  04CB  084B               	movf	??___ftadd+1,w
  4090  04CC  00AA               	movwf	___ftpack@sign
  4091  04CD  120A  158A  2578   	fcall	___ftpack
  4092  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  4093  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  4094  04D2  0826               	movf	?___ftpack,w
  4095  04D3  00C4               	movwf	?___ftadd
  4096  04D4  0827               	movf	?___ftpack+1,w
  4097  04D5  00C5               	movwf	?___ftadd+1
  4098  04D6  0828               	movf	?___ftpack+2,w
  4099  04D7  00C6               	movwf	?___ftadd+2
  4100  04D8  0008               	return
  4101  04D9                     __end_of___ftadd:	
  4102                           
  4103                           	psect	text17
  4104  0B22                     __ptext17:	
  4105 ;; *************** function ___ftneg *****************
  4106 ;; Defined at:
  4107 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  f1              3    6[BANK0 ] float 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  3    6[BANK0 ] float 
  4114 ;; Registers used:
  4115 ;;		wreg
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4121 ;;      Params:         0       3       0       0       0
  4122 ;;      Locals:         0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0
  4124 ;;      Totals:         0       3       0       0       0
  4125 ;;Total ram usage:        3 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    2
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_pow
  4132 ;;		_exp
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function ___ftneg
  4138  0B22                     ___ftneg:	
  4139                           
  4140                           ;incstack = 0
  4141                           ; Regs used in ___ftneg: [wreg]
  4142  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0B24  0828               	movf	___ftneg@f1+2,w
  4145  0B25  0427               	iorwf	___ftneg@f1+1,w
  4146  0B26  0426               	iorwf	___ftneg@f1,w
  4147  0B27  1903               	skipnz
  4148  0B28  0008               	return
  4149  0B29  3080               	movlw	128
  4150  0B2A  06A8               	xorwf	___ftneg@f1+2,f
  4151  0B2B  0008               	return
  4152  0B2C                     __end_of___ftneg:	
  4153                           
  4154                           	psect	text18
  4155  0674                     __ptext18:	
  4156 ;; *************** function ___ftdiv *****************
  4157 ;; Defined at:
  4158 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  f2              3   14[BANK0 ] float 
  4161 ;;  f1              3   17[BANK0 ] float 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  f3              3   25[BANK0 ] float 
  4164 ;;  sign            1   29[BANK0 ] unsigned char 
  4165 ;;  exp             1   28[BANK0 ] unsigned char 
  4166 ;;  cntr            1   24[BANK0 ] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  3   14[BANK0 ] float 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4176 ;;      Params:         0       6       0       0       0
  4177 ;;      Locals:         0       6       0       0       0
  4178 ;;      Temps:          0       4       0       0       0
  4179 ;;      Totals:         0      16       0       0       0
  4180 ;;Total ram usage:       16 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    3
  4183 ;; This function calls:
  4184 ;;		___ftpack
  4185 ;; This function is called by:
  4186 ;;		_exp
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function ___ftdiv
  4192  0674                     ___ftdiv:	
  4193                           
  4194                           ;incstack = 0
  4195                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4196  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4198  0676  0831               	movf	___ftdiv@f1,w
  4199  0677  00B4               	movwf	??___ftdiv
  4200  0678  0832               	movf	___ftdiv@f1+1,w
  4201  0679  00B5               	movwf	??___ftdiv+1
  4202  067A  0833               	movf	___ftdiv@f1+2,w
  4203  067B  00B6               	movwf	??___ftdiv+2
  4204  067C  1003               	clrc
  4205  067D  0D35               	rlf	??___ftdiv+1,w
  4206  067E  0D36               	rlf	??___ftdiv+2,w
  4207  067F  00B7               	movwf	??___ftdiv+3
  4208  0680  0837               	movf	??___ftdiv+3,w
  4209  0681  00BC               	movwf	___ftdiv@exp
  4210  0682  083C               	movf	___ftdiv@exp,w
  4211  0683  1D03               	btfss	3,2
  4212  0684  2E8C               	goto	l1554
  4213  0685  3000               	movlw	0
  4214  0686  00AE               	movwf	?___ftdiv
  4215  0687  3000               	movlw	0
  4216  0688  00AF               	movwf	?___ftdiv+1
  4217  0689  3000               	movlw	0
  4218  068A  00B0               	movwf	?___ftdiv+2
  4219  068B  0008               	return
  4220  068C                     l1554:	
  4221  068C  082E               	movf	___ftdiv@f2,w
  4222  068D  00B4               	movwf	??___ftdiv
  4223  068E  082F               	movf	___ftdiv@f2+1,w
  4224  068F  00B5               	movwf	??___ftdiv+1
  4225  0690  0830               	movf	___ftdiv@f2+2,w
  4226  0691  00B6               	movwf	??___ftdiv+2
  4227  0692  1003               	clrc
  4228  0693  0D35               	rlf	??___ftdiv+1,w
  4229  0694  0D36               	rlf	??___ftdiv+2,w
  4230  0695  00B7               	movwf	??___ftdiv+3
  4231  0696  0837               	movf	??___ftdiv+3,w
  4232  0697  00BD               	movwf	___ftdiv@sign
  4233  0698  083D               	movf	___ftdiv@sign,w
  4234  0699  1D03               	btfss	3,2
  4235  069A  2EA2               	goto	l1560
  4236  069B  3000               	movlw	0
  4237  069C  00AE               	movwf	?___ftdiv
  4238  069D  3000               	movlw	0
  4239  069E  00AF               	movwf	?___ftdiv+1
  4240  069F  3000               	movlw	0
  4241  06A0  00B0               	movwf	?___ftdiv+2
  4242  06A1  0008               	return
  4243  06A2                     l1560:	
  4244  06A2  3000               	movlw	0
  4245  06A3  00B9               	movwf	___ftdiv@f3
  4246  06A4  3000               	movlw	0
  4247  06A5  00BA               	movwf	___ftdiv@f3+1
  4248  06A6  3000               	movlw	0
  4249  06A7  00BB               	movwf	___ftdiv@f3+2
  4250  06A8  3089               	movlw	137
  4251  06A9  073D               	addwf	___ftdiv@sign,w
  4252  06AA  00B4               	movwf	??___ftdiv
  4253  06AB  0834               	movf	??___ftdiv,w
  4254  06AC  02BC               	subwf	___ftdiv@exp,f
  4255  06AD  0831               	movf	___ftdiv@f1,w
  4256  06AE  00B4               	movwf	??___ftdiv
  4257  06AF  0832               	movf	___ftdiv@f1+1,w
  4258  06B0  00B5               	movwf	??___ftdiv+1
  4259  06B1  0833               	movf	___ftdiv@f1+2,w
  4260  06B2  00B6               	movwf	??___ftdiv+2
  4261  06B3  3010               	movlw	16
  4262  06B4                     u2065:	
  4263  06B4  1003               	clrc
  4264  06B5  0CB6               	rrf	??___ftdiv+2,f
  4265  06B6  0CB5               	rrf	??___ftdiv+1,f
  4266  06B7  0CB4               	rrf	??___ftdiv,f
  4267  06B8  3EFF               	addlw	-1
  4268  06B9  1D03               	skipz
  4269  06BA  2EB4               	goto	u2065
  4270  06BB  0834               	movf	??___ftdiv,w
  4271  06BC  00B7               	movwf	??___ftdiv+3
  4272  06BD  0837               	movf	??___ftdiv+3,w
  4273  06BE  00BD               	movwf	___ftdiv@sign
  4274  06BF  082E               	movf	___ftdiv@f2,w
  4275  06C0  00B4               	movwf	??___ftdiv
  4276  06C1  082F               	movf	___ftdiv@f2+1,w
  4277  06C2  00B5               	movwf	??___ftdiv+1
  4278  06C3  0830               	movf	___ftdiv@f2+2,w
  4279  06C4  00B6               	movwf	??___ftdiv+2
  4280  06C5  3010               	movlw	16
  4281  06C6                     u2075:	
  4282  06C6  1003               	clrc
  4283  06C7  0CB6               	rrf	??___ftdiv+2,f
  4284  06C8  0CB5               	rrf	??___ftdiv+1,f
  4285  06C9  0CB4               	rrf	??___ftdiv,f
  4286  06CA  3EFF               	addlw	-1
  4287  06CB  1D03               	skipz
  4288  06CC  2EC6               	goto	u2075
  4289  06CD  0834               	movf	??___ftdiv,w
  4290  06CE  00B7               	movwf	??___ftdiv+3
  4291  06CF  0837               	movf	??___ftdiv+3,w
  4292  06D0  06BD               	xorwf	___ftdiv@sign,f
  4293  06D1  3080               	movlw	128
  4294  06D2  00B4               	movwf	??___ftdiv
  4295  06D3  0834               	movf	??___ftdiv,w
  4296  06D4  05BD               	andwf	___ftdiv@sign,f
  4297  06D5  17B2               	bsf	___ftdiv@f1+1,7
  4298  06D6  30FF               	movlw	255
  4299  06D7  05B1               	andwf	___ftdiv@f1,f
  4300  06D8  30FF               	movlw	255
  4301  06D9  05B2               	andwf	___ftdiv@f1+1,f
  4302  06DA  3000               	movlw	0
  4303  06DB  05B3               	andwf	___ftdiv@f1+2,f
  4304  06DC  17AF               	bsf	___ftdiv@f2+1,7
  4305  06DD  30FF               	movlw	255
  4306  06DE  05AE               	andwf	___ftdiv@f2,f
  4307  06DF  30FF               	movlw	255
  4308  06E0  05AF               	andwf	___ftdiv@f2+1,f
  4309  06E1  3000               	movlw	0
  4310  06E2  05B0               	andwf	___ftdiv@f2+2,f
  4311  06E3  3018               	movlw	24
  4312  06E4  00B4               	movwf	??___ftdiv
  4313  06E5  0834               	movf	??___ftdiv,w
  4314  06E6  00B8               	movwf	___ftdiv@cntr
  4315  06E7                     l1574:	
  4316  06E7  3001               	movlw	1
  4317  06E8                     u2085:	
  4318  06E8  1003               	clrc
  4319  06E9  0DB9               	rlf	___ftdiv@f3,f
  4320  06EA  0DBA               	rlf	___ftdiv@f3+1,f
  4321  06EB  0DBB               	rlf	___ftdiv@f3+2,f
  4322  06EC  3EFF               	addlw	-1
  4323  06ED  1D03               	skipz
  4324  06EE  2EE8               	goto	u2085
  4325  06EF  0830               	movf	___ftdiv@f2+2,w
  4326  06F0  0233               	subwf	___ftdiv@f1+2,w
  4327  06F1  1D03               	skipz
  4328  06F2  2EF9               	goto	u2095
  4329  06F3  082F               	movf	___ftdiv@f2+1,w
  4330  06F4  0232               	subwf	___ftdiv@f1+1,w
  4331  06F5  1D03               	skipz
  4332  06F6  2EF9               	goto	u2095
  4333  06F7  082E               	movf	___ftdiv@f2,w
  4334  06F8  0231               	subwf	___ftdiv@f1,w
  4335  06F9                     u2095:	
  4336  06F9  1C03               	skipc
  4337  06FA  2F06               	goto	l1582
  4338  06FB  082E               	movf	___ftdiv@f2,w
  4339  06FC  02B1               	subwf	___ftdiv@f1,f
  4340  06FD  082F               	movf	___ftdiv@f2+1,w
  4341  06FE  1C03               	skipc
  4342  06FF  0F2F               	incfsz	___ftdiv@f2+1,w
  4343  0700  02B2               	subwf	___ftdiv@f1+1,f
  4344  0701  0830               	movf	___ftdiv@f2+2,w
  4345  0702  1C03               	skipc
  4346  0703  0A30               	incf	___ftdiv@f2+2,w
  4347  0704  02B3               	subwf	___ftdiv@f1+2,f
  4348  0705  1439               	bsf	___ftdiv@f3,0
  4349  0706                     l1582:	
  4350  0706  3001               	movlw	1
  4351  0707                     u2105:	
  4352  0707  1003               	clrc
  4353  0708  0DB1               	rlf	___ftdiv@f1,f
  4354  0709  0DB2               	rlf	___ftdiv@f1+1,f
  4355  070A  0DB3               	rlf	___ftdiv@f1+2,f
  4356  070B  3EFF               	addlw	-1
  4357  070C  1D03               	skipz
  4358  070D  2F07               	goto	u2105
  4359  070E  3001               	movlw	1
  4360  070F  02B8               	subwf	___ftdiv@cntr,f
  4361  0710  1D03               	btfss	3,2
  4362  0711  2EE7               	goto	l1574
  4363  0712  0839               	movf	___ftdiv@f3,w
  4364  0713  00A6               	movwf	___ftpack@arg
  4365  0714  083A               	movf	___ftdiv@f3+1,w
  4366  0715  00A7               	movwf	___ftpack@arg+1
  4367  0716  083B               	movf	___ftdiv@f3+2,w
  4368  0717  00A8               	movwf	___ftpack@arg+2
  4369  0718  083C               	movf	___ftdiv@exp,w
  4370  0719  00B4               	movwf	??___ftdiv
  4371  071A  0834               	movf	??___ftdiv,w
  4372  071B  00A9               	movwf	___ftpack@exp
  4373  071C  083D               	movf	___ftdiv@sign,w
  4374  071D  00B5               	movwf	??___ftdiv+1
  4375  071E  0835               	movf	??___ftdiv+1,w
  4376  071F  00AA               	movwf	___ftpack@sign
  4377  0720  120A  158A  2578   	fcall	___ftpack
  4378  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0724  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0725  0826               	movf	?___ftpack,w
  4381  0726  00AE               	movwf	?___ftdiv
  4382  0727  0827               	movf	?___ftpack+1,w
  4383  0728  00AF               	movwf	?___ftdiv+1
  4384  0729  0828               	movf	?___ftpack+2,w
  4385  072A  00B0               	movwf	?___ftdiv+2
  4386  072B  0008               	return
  4387  072C                     __end_of___ftdiv:	
  4388                           
  4389                           	psect	text19
  4390  0B60                     __ptext19:	
  4391 ;; *************** function ___awtoft *****************
  4392 ;; Defined at:
  4393 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  c               2   14[BANK0 ] int 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  sign            1   19[BANK0 ] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  3   14[BANK0 ] float 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0, pclath, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4407 ;;      Params:         0       3       0       0       0
  4408 ;;      Locals:         0       1       0       0       0
  4409 ;;      Temps:          0       2       0       0       0
  4410 ;;      Totals:         0       6       0       0       0
  4411 ;;Total ram usage:        6 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    3
  4414 ;; This function calls:
  4415 ;;		___ftpack
  4416 ;; This function is called by:
  4417 ;;		_main
  4418 ;;		_exp
  4419 ;;		_log
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function ___awtoft
  4425  0B60                     ___awtoft:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4429  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  4431  0B62  01B3               	clrf	___awtoft@sign
  4432  0B63  1FAF               	btfss	___awtoft@c+1,7
  4433  0B64  2B6C               	goto	l1544
  4434  0B65  09AE               	comf	___awtoft@c,f
  4435  0B66  09AF               	comf	___awtoft@c+1,f
  4436  0B67  0AAE               	incf	___awtoft@c,f
  4437  0B68  1903               	skipnz
  4438  0B69  0AAF               	incf	___awtoft@c+1,f
  4439  0B6A  01B3               	clrf	___awtoft@sign
  4440  0B6B  0AB3               	incf	___awtoft@sign,f
  4441  0B6C                     l1544:	
  4442  0B6C  082E               	movf	___awtoft@c,w
  4443  0B6D  00A6               	movwf	___ftpack@arg
  4444  0B6E  082F               	movf	___awtoft@c+1,w
  4445  0B6F  00A7               	movwf	___ftpack@arg+1
  4446  0B70  01A8               	clrf	___ftpack@arg+2
  4447  0B71  308E               	movlw	142
  4448  0B72  00B1               	movwf	??___awtoft
  4449  0B73  0831               	movf	??___awtoft,w
  4450  0B74  00A9               	movwf	___ftpack@exp
  4451  0B75  0833               	movf	___awtoft@sign,w
  4452  0B76  00B2               	movwf	??___awtoft+1
  4453  0B77  0832               	movf	??___awtoft+1,w
  4454  0B78  00AA               	movwf	___ftpack@sign
  4455  0B79  120A  158A  2578   	fcall	___ftpack
  4456  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0B7E  0826               	movf	?___ftpack,w
  4459  0B7F  00AE               	movwf	?___awtoft
  4460  0B80  0827               	movf	?___ftpack+1,w
  4461  0B81  00AF               	movwf	?___awtoft+1
  4462  0B82  0828               	movf	?___ftpack+2,w
  4463  0B83  00B0               	movwf	?___awtoft+2
  4464  0B84  0008               	return
  4465  0B85                     __end_of___awtoft:	
  4466                           
  4467                           	psect	text20
  4468  0B85                     __ptext20:	
  4469 ;; *************** function ___lltoft *****************
  4470 ;; Defined at:
  4471 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  c               4   14[BANK0 ] unsigned long 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  exp             1   19[BANK0 ] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  3   14[BANK0 ] float 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0, pclath, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         0       4       0       0       0
  4486 ;;      Locals:         0       1       0       0       0
  4487 ;;      Temps:          0       1       0       0       0
  4488 ;;      Totals:         0       6       0       0       0
  4489 ;;Total ram usage:        6 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    3
  4492 ;; This function calls:
  4493 ;;		___ftpack
  4494 ;; This function is called by:
  4495 ;;		_pow
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function ___lltoft
  4501  0B85                     ___lltoft:	
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4505  0B85  308E               	movlw	142
  4506  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0B88  00B2               	movwf	??___lltoft
  4509  0B89  0832               	movf	??___lltoft,w
  4510  0B8A  00B3               	movwf	___lltoft@exp
  4511  0B8B                     l1700:	
  4512  0B8B  30FF               	movlw	255
  4513  0B8C  0531               	andwf	___lltoft@c+3,w
  4514  0B8D  1903               	btfsc	3,2
  4515  0B8E  2B9D               	goto	l1702
  4516  0B8F  3001               	movlw	1
  4517  0B90                     u2285:	
  4518  0B90  1003               	clrc
  4519  0B91  0CB1               	rrf	___lltoft@c+3,f
  4520  0B92  0CB0               	rrf	___lltoft@c+2,f
  4521  0B93  0CAF               	rrf	___lltoft@c+1,f
  4522  0B94  0CAE               	rrf	___lltoft@c,f
  4523  0B95  3EFF               	addlw	-1
  4524  0B96  1D03               	skipz
  4525  0B97  2B90               	goto	u2285
  4526  0B98  3001               	movlw	1
  4527  0B99  00B2               	movwf	??___lltoft
  4528  0B9A  0832               	movf	??___lltoft,w
  4529  0B9B  07B3               	addwf	___lltoft@exp,f
  4530  0B9C  2B8B               	goto	l1700
  4531  0B9D                     l1702:	
  4532  0B9D  082E               	movf	___lltoft@c,w
  4533  0B9E  00A6               	movwf	___ftpack@arg
  4534  0B9F  082F               	movf	___lltoft@c+1,w
  4535  0BA0  00A7               	movwf	___ftpack@arg+1
  4536  0BA1  0830               	movf	___lltoft@c+2,w
  4537  0BA2  00A8               	movwf	___ftpack@arg+2
  4538  0BA3  0833               	movf	___lltoft@exp,w
  4539  0BA4  00B2               	movwf	??___lltoft
  4540  0BA5  0832               	movf	??___lltoft,w
  4541  0BA6  00A9               	movwf	___ftpack@exp
  4542  0BA7  01AA               	clrf	___ftpack@sign
  4543  0BA8  120A  158A  2578   	fcall	___ftpack
  4544  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  4546  0BAD  0826               	movf	?___ftpack,w
  4547  0BAE  00AE               	movwf	?___lltoft
  4548  0BAF  0827               	movf	?___ftpack+1,w
  4549  0BB0  00AF               	movwf	?___lltoft+1
  4550  0BB1  0828               	movf	?___ftpack+2,w
  4551  0BB2  00B0               	movwf	?___lltoft+2
  4552  0BB3  0008               	return
  4553  0BB4                     __end_of___lltoft:	
  4554                           
  4555                           	psect	text21
  4556  0D78                     __ptext21:	
  4557 ;; *************** function ___ftpack *****************
  4558 ;; Defined at:
  4559 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  arg             3    6[BANK0 ] unsigned um
  4562 ;;  exp             1    9[BANK0 ] unsigned char 
  4563 ;;  sign            1   10[BANK0 ] unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  3    6[BANK0 ] float 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         0       5       0       0       0
  4576 ;;      Locals:         0       0       0       0       0
  4577 ;;      Temps:          0       3       0       0       0
  4578 ;;      Totals:         0       8       0       0       0
  4579 ;;Total ram usage:        8 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    2
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		___altoft
  4586 ;;		___awtoft
  4587 ;;		___ftadd
  4588 ;;		___ftdiv
  4589 ;;		___ftmul
  4590 ;;		___lltoft
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           
  4595                           ;psect for function ___ftpack
  4596  0D78                     ___ftpack:	
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4600  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0D7A  0829               	movf	___ftpack@exp,w
  4603  0D7B  1903               	btfsc	3,2
  4604  0D7C  2D82               	goto	l1276
  4605  0D7D  0828               	movf	___ftpack@arg+2,w
  4606  0D7E  0427               	iorwf	___ftpack@arg+1,w
  4607  0D7F  0426               	iorwf	___ftpack@arg,w
  4608  0D80  1D03               	skipz
  4609  0D81  2D95               	goto	l1282
  4610  0D82                     l1276:	
  4611  0D82  3000               	movlw	0
  4612  0D83  00A6               	movwf	?___ftpack
  4613  0D84  3000               	movlw	0
  4614  0D85  00A7               	movwf	?___ftpack+1
  4615  0D86  3000               	movlw	0
  4616  0D87  00A8               	movwf	?___ftpack+2
  4617  0D88  0008               	return
  4618  0D89                     l1280:	
  4619  0D89  3001               	movlw	1
  4620  0D8A  00AB               	movwf	??___ftpack
  4621  0D8B  082B               	movf	??___ftpack,w
  4622  0D8C  07A9               	addwf	___ftpack@exp,f
  4623  0D8D  3001               	movlw	1
  4624  0D8E                     u1345:	
  4625  0D8E  1003               	clrc
  4626  0D8F  0CA8               	rrf	___ftpack@arg+2,f
  4627  0D90  0CA7               	rrf	___ftpack@arg+1,f
  4628  0D91  0CA6               	rrf	___ftpack@arg,f
  4629  0D92  3EFF               	addlw	-1
  4630  0D93  1D03               	skipz
  4631  0D94  2D8E               	goto	u1345
  4632  0D95                     l1282:	
  4633  0D95  30FE               	movlw	254
  4634  0D96  0528               	andwf	___ftpack@arg+2,w
  4635  0D97  1903               	btfsc	3,2
  4636  0D98  2DB0               	goto	l292
  4637  0D99  2D89               	goto	l1280
  4638  0D9A                     l1284:	
  4639  0D9A  3001               	movlw	1
  4640  0D9B  00AB               	movwf	??___ftpack
  4641  0D9C  082B               	movf	??___ftpack,w
  4642  0D9D  07A9               	addwf	___ftpack@exp,f
  4643  0D9E  3001               	movlw	1
  4644  0D9F  07A6               	addwf	___ftpack@arg,f
  4645  0DA0  3000               	movlw	0
  4646  0DA1  1803               	skipnc
  4647  0DA2  3001               	movlw	1
  4648  0DA3  07A7               	addwf	___ftpack@arg+1,f
  4649  0DA4  3000               	movlw	0
  4650  0DA5  1803               	skipnc
  4651  0DA6  3001               	movlw	1
  4652  0DA7  07A8               	addwf	___ftpack@arg+2,f
  4653  0DA8  3001               	movlw	1
  4654  0DA9                     u1365:	
  4655  0DA9  1003               	clrc
  4656  0DAA  0CA8               	rrf	___ftpack@arg+2,f
  4657  0DAB  0CA7               	rrf	___ftpack@arg+1,f
  4658  0DAC  0CA6               	rrf	___ftpack@arg,f
  4659  0DAD  3EFF               	addlw	-1
  4660  0DAE  1D03               	skipz
  4661  0DAF  2DA9               	goto	u1365
  4662  0DB0                     l292:	
  4663  0DB0  30FF               	movlw	255
  4664  0DB1  0528               	andwf	___ftpack@arg+2,w
  4665  0DB2  1903               	btfsc	3,2
  4666  0DB3  2DBF               	goto	l1292
  4667  0DB4  2D9A               	goto	l1284
  4668  0DB5                     l1290:	
  4669  0DB5  3001               	movlw	1
  4670  0DB6  02A9               	subwf	___ftpack@exp,f
  4671  0DB7  3001               	movlw	1
  4672  0DB8                     u1385:	
  4673  0DB8  1003               	clrc
  4674  0DB9  0DA6               	rlf	___ftpack@arg,f
  4675  0DBA  0DA7               	rlf	___ftpack@arg+1,f
  4676  0DBB  0DA8               	rlf	___ftpack@arg+2,f
  4677  0DBC  3EFF               	addlw	-1
  4678  0DBD  1D03               	skipz
  4679  0DBE  2DB8               	goto	u1385
  4680  0DBF                     l1292:	
  4681  0DBF  1BA7               	btfsc	___ftpack@arg+1,7
  4682  0DC0  2DC5               	goto	l299
  4683  0DC1  3002               	movlw	2
  4684  0DC2  0229               	subwf	___ftpack@exp,w
  4685  0DC3  1803               	skipnc
  4686  0DC4  2DB5               	goto	l1290
  4687  0DC5                     l299:	
  4688  0DC5  1829               	btfsc	___ftpack@exp,0
  4689  0DC6  2DCD               	goto	l300
  4690  0DC7  30FF               	movlw	255
  4691  0DC8  05A6               	andwf	___ftpack@arg,f
  4692  0DC9  307F               	movlw	127
  4693  0DCA  05A7               	andwf	___ftpack@arg+1,f
  4694  0DCB  30FF               	movlw	255
  4695  0DCC  05A8               	andwf	___ftpack@arg+2,f
  4696  0DCD                     l300:	
  4697  0DCD  1003               	clrc
  4698  0DCE  0CA9               	rrf	___ftpack@exp,f
  4699  0DCF  0829               	movf	___ftpack@exp,w
  4700  0DD0  00AB               	movwf	??___ftpack
  4701  0DD1  01AC               	clrf	??___ftpack+1
  4702  0DD2  01AD               	clrf	??___ftpack+2
  4703  0DD3  3010               	movlw	16
  4704  0DD4                     u1425:	
  4705  0DD4  1003               	clrc
  4706  0DD5  0DAB               	rlf	??___ftpack,f
  4707  0DD6  0DAC               	rlf	??___ftpack+1,f
  4708  0DD7  0DAD               	rlf	??___ftpack+2,f
  4709  0DD8  3EFF               	addlw	-1
  4710  0DD9  1D03               	skipz
  4711  0DDA  2DD4               	goto	u1425
  4712  0DDB  082B               	movf	??___ftpack,w
  4713  0DDC  04A6               	iorwf	___ftpack@arg,f
  4714  0DDD  082C               	movf	??___ftpack+1,w
  4715  0DDE  04A7               	iorwf	___ftpack@arg+1,f
  4716  0DDF  082D               	movf	??___ftpack+2,w
  4717  0DE0  04A8               	iorwf	___ftpack@arg+2,f
  4718  0DE1  082A               	movf	___ftpack@sign,w
  4719  0DE2  1903               	btfsc	3,2
  4720  0DE3  0008               	return
  4721  0DE4  17A8               	bsf	___ftpack@arg+2,7
  4722  0DE5  0008               	return
  4723  0DE6                     __end_of___ftpack:	
  4724                           
  4725                           	psect	text22
  4726  07C5                     __ptext22:	
  4727 ;; *************** function _interr *****************
  4728 ;; Defined at:
  4729 ;;		line 18 in file "JuegoGatoRaton.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4743 ;;      Params:         0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0
  4745 ;;      Temps:          0       6       0       0       0
  4746 ;;      Totals:         0       6       0       0       0
  4747 ;;Total ram usage:        6 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    1
  4750 ;; This function calls:
  4751 ;;		___awdiv
  4752 ;; This function is called by:
  4753 ;;		Interrupt level 1
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _interr
  4759  07C5                     _interr:	
  4760                           
  4761                           ;JuegoGatoRaton.c: 19: if (PORTBbits.RB4 == 1&&PORTC!=1){
  4762  07C5  1E06               	btfss	6,4	;volatile
  4763  07C6  2FE0               	goto	i1l1874
  4764  07C7  0307               	decf	7,w	;volatile
  4765  07C8  1903               	btfsc	3,2
  4766  07C9  2FE0               	goto	i1l1874
  4767  07CA                     i1l32:	
  4768                           ;JuegoGatoRaton.c: 20: while(PORTBbits.RB4==1){}
  4769                           
  4770  07CA  1A06               	btfsc	6,4	;volatile
  4771  07CB  2FCA               	goto	i1l32
  4772                           
  4773                           ;JuegoGatoRaton.c: 21: PORTC = PORTC/2;
  4774  07CC  3002               	movlw	2
  4775  07CD  00F0               	movwf	___awdiv@divisor
  4776  07CE  3000               	movlw	0
  4777  07CF  00F1               	movwf	___awdiv@divisor+1
  4778  07D0  0807               	movf	7,w	;volatile
  4779  07D1  00A0               	movwf	??_interr
  4780  07D2  01A1               	clrf	??_interr+1
  4781  07D3  0820               	movf	??_interr,w
  4782  07D4  00F2               	movwf	___awdiv@dividend
  4783  07D5  0821               	movf	??_interr+1,w
  4784  07D6  00F3               	movwf	___awdiv@dividend+1
  4785  07D7  120A  158A  24C0  120A  118A  	fcall	___awdiv
  4786  07DC  0870               	movf	?___awdiv,w
  4787  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  4788  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  4789  07DF  0087               	movwf	7	;volatile
  4790  07E0                     i1l1874:	
  4791                           
  4792                           ;JuegoGatoRaton.c: 22: }
  4793                           ;JuegoGatoRaton.c: 24: if (PORTBbits.RB7 == 1&&PORTC!=128){
  4794  07E0  1F86               	btfss	6,7	;volatile
  4795  07E1  2FEC               	goto	i1l1882
  4796  07E2  3080               	movlw	128
  4797  07E3  0607               	xorwf	7,w	;volatile
  4798  07E4  1903               	btfsc	3,2
  4799  07E5  2FEC               	goto	i1l1882
  4800  07E6                     i1l36:	
  4801                           ;JuegoGatoRaton.c: 25: while(PORTBbits.RB7==1){}
  4802                           
  4803  07E6  1B86               	btfsc	6,7	;volatile
  4804  07E7  2FE6               	goto	i1l36
  4805                           
  4806                           ;JuegoGatoRaton.c: 26: PORTC = PORTC*2;
  4807  07E8  0807               	movf	7,w	;volatile
  4808  07E9  00A0               	movwf	??_interr
  4809  07EA  0720               	addwf	??_interr,w
  4810  07EB  0087               	movwf	7	;volatile
  4811  07EC                     i1l1882:	
  4812                           
  4813                           ;JuegoGatoRaton.c: 27: }
  4814                           ;JuegoGatoRaton.c: 28: INTCON = 10001000;
  4815  07EC  3068               	movlw	104
  4816  07ED  008B               	movwf	11	;volatile
  4817  07EE  0825               	movf	??_interr+5,w
  4818  07EF  00FF               	movwf	127
  4819  07F0  0824               	movf	??_interr+4,w
  4820  07F1  008A               	movwf	10
  4821  07F2  0823               	movf	??_interr+3,w
  4822  07F3  0084               	movwf	4
  4823  07F4  0E22               	swapf	(??_interr+2)^0,w
  4824  07F5  0083               	movwf	3
  4825  07F6  0EFE               	swapf	126,f
  4826  07F7  0E7E               	swapf	126,w
  4827  07F8  0009               	retfie
  4828  07F9                     __end_of_interr:	
  4829                           
  4830                           	psect	intentry
  4831  0004                     __pintentry:	
  4832                           ;incstack = 0
  4833                           ; Regs used in _interr: [wreg+status,2+status,0+pclath+cstack]
  4834                           
  4835  0004                     interrupt_function:	
  4836  007E                     saved_w	set	btemp
  4837  0004  00FE               	movwf	btemp
  4838  0005  0E03               	swapf	3,w
  4839  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4840  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4841  0008  00A2               	movwf	??_interr+2
  4842  0009  0804               	movf	4,w
  4843  000A  00A3               	movwf	??_interr+3
  4844  000B  080A               	movf	10,w
  4845  000C  00A4               	movwf	??_interr+4
  4846  000D  087F               	movf	btemp+1,w
  4847  000E  00A5               	movwf	??_interr+5
  4848  000F  120A  118A  2FC5   	ljmp	_interr
  4849                           
  4850                           	psect	text23
  4851  0CC0                     __ptext23:	
  4852 ;; *************** function ___awdiv *****************
  4853 ;; Defined at:
  4854 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  divisor         2    0[COMMON] int 
  4857 ;;  dividend        2    2[COMMON] int 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  quotient        2    7[COMMON] int 
  4860 ;;  sign            1    6[COMMON] unsigned char 
  4861 ;;  counter         1    5[COMMON] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  2    0[COMMON] int 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4871 ;;      Params:         4       0       0       0       0
  4872 ;;      Locals:         4       0       0       0       0
  4873 ;;      Temps:          1       0       0       0       0
  4874 ;;      Totals:         9       0       0       0       0
  4875 ;;Total ram usage:        9 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_interr
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           
  4885                           ;psect for function ___awdiv
  4886  0CC0                     ___awdiv:	
  4887                           
  4888                           ;incstack = 0
  4889                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4890  0CC0  01F6               	clrf	___awdiv@sign
  4891  0CC1  1FF1               	btfss	___awdiv@divisor+1,7
  4892  0CC2  2CCA               	goto	i1l1830
  4893  0CC3  09F0               	comf	___awdiv@divisor,f
  4894  0CC4  09F1               	comf	___awdiv@divisor+1,f
  4895  0CC5  0AF0               	incf	___awdiv@divisor,f
  4896  0CC6  1903               	skipnz
  4897  0CC7  0AF1               	incf	___awdiv@divisor+1,f
  4898  0CC8  01F6               	clrf	___awdiv@sign
  4899  0CC9  0AF6               	incf	___awdiv@sign,f
  4900  0CCA                     i1l1830:	
  4901  0CCA  1FF3               	btfss	___awdiv@dividend+1,7
  4902  0CCB  2CD5               	goto	i1l1836
  4903  0CCC  09F2               	comf	___awdiv@dividend,f
  4904  0CCD  09F3               	comf	___awdiv@dividend+1,f
  4905  0CCE  0AF2               	incf	___awdiv@dividend,f
  4906  0CCF  1903               	skipnz
  4907  0CD0  0AF3               	incf	___awdiv@dividend+1,f
  4908  0CD1  3001               	movlw	1
  4909  0CD2  00F4               	movwf	??___awdiv
  4910  0CD3  0874               	movf	??___awdiv,w
  4911  0CD4  06F6               	xorwf	___awdiv@sign,f
  4912  0CD5                     i1l1836:	
  4913  0CD5  01F7               	clrf	___awdiv@quotient
  4914  0CD6  01F8               	clrf	___awdiv@quotient+1
  4915  0CD7  0870               	movf	___awdiv@divisor,w
  4916  0CD8  0471               	iorwf	___awdiv@divisor+1,w
  4917  0CD9  1903               	btfsc	3,2
  4918  0CDA  2D0C               	goto	i1l1858
  4919  0CDB  01F5               	clrf	___awdiv@counter
  4920  0CDC  0AF5               	incf	___awdiv@counter,f
  4921  0CDD                     i1l1846:	
  4922  0CDD  1BF1               	btfsc	___awdiv@divisor+1,7
  4923  0CDE  2CEB               	goto	i1l1848
  4924  0CDF  3001               	movlw	1
  4925  0CE0                     u250_25:	
  4926  0CE0  1003               	clrc
  4927  0CE1  0DF0               	rlf	___awdiv@divisor,f
  4928  0CE2  0DF1               	rlf	___awdiv@divisor+1,f
  4929  0CE3  3EFF               	addlw	-1
  4930  0CE4  1D03               	skipz
  4931  0CE5  2CE0               	goto	u250_25
  4932  0CE6  3001               	movlw	1
  4933  0CE7  00F4               	movwf	??___awdiv
  4934  0CE8  0874               	movf	??___awdiv,w
  4935  0CE9  07F5               	addwf	___awdiv@counter,f
  4936  0CEA  2CDD               	goto	i1l1846
  4937  0CEB                     i1l1848:	
  4938  0CEB  3001               	movlw	1
  4939  0CEC                     u252_25:	
  4940  0CEC  1003               	clrc
  4941  0CED  0DF7               	rlf	___awdiv@quotient,f
  4942  0CEE  0DF8               	rlf	___awdiv@quotient+1,f
  4943  0CEF  3EFF               	addlw	-1
  4944  0CF0  1D03               	skipz
  4945  0CF1  2CEC               	goto	u252_25
  4946  0CF2  0871               	movf	___awdiv@divisor+1,w
  4947  0CF3  0273               	subwf	___awdiv@dividend+1,w
  4948  0CF4  1D03               	skipz
  4949  0CF5  2CF8               	goto	u253_25
  4950  0CF6  0870               	movf	___awdiv@divisor,w
  4951  0CF7  0272               	subwf	___awdiv@dividend,w
  4952  0CF8                     u253_25:	
  4953  0CF8  1C03               	skipc
  4954  0CF9  2D01               	goto	i1l1854
  4955  0CFA  0870               	movf	___awdiv@divisor,w
  4956  0CFB  02F2               	subwf	___awdiv@dividend,f
  4957  0CFC  0871               	movf	___awdiv@divisor+1,w
  4958  0CFD  1C03               	skipc
  4959  0CFE  03F3               	decf	___awdiv@dividend+1,f
  4960  0CFF  02F3               	subwf	___awdiv@dividend+1,f
  4961  0D00  1477               	bsf	___awdiv@quotient,0
  4962  0D01                     i1l1854:	
  4963  0D01  3001               	movlw	1
  4964  0D02                     u254_25:	
  4965  0D02  1003               	clrc
  4966  0D03  0CF1               	rrf	___awdiv@divisor+1,f
  4967  0D04  0CF0               	rrf	___awdiv@divisor,f
  4968  0D05  3EFF               	addlw	-1
  4969  0D06  1D03               	skipz
  4970  0D07  2D02               	goto	u254_25
  4971  0D08  3001               	movlw	1
  4972  0D09  02F5               	subwf	___awdiv@counter,f
  4973  0D0A  1D03               	btfss	3,2
  4974  0D0B  2CEB               	goto	i1l1848
  4975  0D0C                     i1l1858:	
  4976  0D0C  0876               	movf	___awdiv@sign,w
  4977  0D0D  1903               	btfsc	3,2
  4978  0D0E  2D14               	goto	i1l1862
  4979  0D0F  09F7               	comf	___awdiv@quotient,f
  4980  0D10  09F8               	comf	___awdiv@quotient+1,f
  4981  0D11  0AF7               	incf	___awdiv@quotient,f
  4982  0D12  1903               	skipnz
  4983  0D13  0AF8               	incf	___awdiv@quotient+1,f
  4984  0D14                     i1l1862:	
  4985  0D14  0878               	movf	___awdiv@quotient+1,w
  4986  0D15  00F1               	movwf	?___awdiv+1
  4987  0D16  0877               	movf	___awdiv@quotient,w
  4988  0D17  00F0               	movwf	?___awdiv
  4989  0D18  0008               	return
  4990  0D19                     __end_of___awdiv:	
  4991  007E                     btemp	set	126	;btemp
  4992  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    57
    Data        4
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     68      74
    BANK1            80     37      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interr in COMMON

    _interr->___awdiv

Critical Paths under _main in BANK0

    _main->_pow
    _rand->___lmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _interr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow
    _pow->_exp

Critical Paths under _interr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   54089
                                             26 BANK1     11    11      0
                           ___awtoft
                            ___fttol
                                _pow
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     198
                                             19 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     198
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   51287
                                             67 BANK0      1     1      0
                                              9 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16227
                                             59 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 10     7      3   28027
                                             66 BANK0      1     1      0
                                              0 BANK1      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5    1444
                                             59 BANK0      7     2      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    7425
                                             49 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     436
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     464
                                             20 BANK0     14    10      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1090
                                              6 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1976
                                             34 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    6532
                                             49 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2721
                                             20 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     160
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3328
                                             49 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3155
                                             36 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     204
                                              6 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2171
                                             14 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2035
                                             14 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1907
                                             14 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1785
                                              6 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interr                                               6     6      0     406
                                              0 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___fttol
     ___awtoft (ARG)
       ___ftpack
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___awtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___awtoft (ARG)
             ___ftpack
         _frexp
       _ldexp
         ___ftge
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _rand
     ___lmul

 _interr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     25      25       7       46.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     44      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      78      12        0.0%
ABS                  0      0      78       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Sep 23 21:04:30 2017

            ___altoft@exp 0048                         pc 0002            ___bmul@product 0028  
             __CFG_CP$OFF 0000             ___altoft@sign 0049              ___awdiv@sign 0076  
                      fsr 0004              ___ftadd@exp1 0050              ___ftadd@exp2 004F  
            ___ftadd@sign 004E                       l300 0DCD                       l323 0478  
                     l292 0DB0                       l383 0F55                       l299 0DC5  
                     l495 025F              __CFG_CPD$OFF 0000                       _exp 0031  
                     _log 05AC                       _pow 0230                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000              ___ftdiv@cntr 0038  
            ___ftdiv@sign 003D                      l1310 0B36                      l1400 04BF  
                    l2024 0F8B                      l1306 0B30                      l1330 0C1D  
                    l1340 03F9                      l1412 0D69                      l1500 0F3D  
                    l1350 040F                      l1430 04F1                      l1280 0D89  
                    l1344 0400                      l1328 0C0B                      l1408 0D42  
                    l1512 0F66                      l1290 0DB5                      l1282 0D95  
                    l1370 044A                      l1362 0429                      l1602 0B48  
                    l1506 0F4A                      l1292 0DBF                      l1284 0D9A  
                    l1276 0D82                      l1700 0B8B                      l1380 0468  
                    l1372 044F                      l1460 056E                      l1452 0556  
                    l1436 0507                      l1508 0F58                      l1524 0C4B  
                    l1620 0766                      l1702 0B9D                      l1390 049C  
                    l1382 0474                      l1374 0453                      l1630 07BC  
                    l1544 0B6C                      l1560 06A2                      l1368 043E  
                    l1464 057E                      l1448 0546                      l1640 0E58  
                    l1480 0EFB                      l1616 075D                      l1712 05CE  
                    l1554 068C                      l1386 048A                      l1650 0E6D  
                    l1660 0E92                      l1582 0706                      l1574 06E7  
                    l1718 05E0                      l1672 0EBF                      l1498 0F2D  
                    l1922 003F                      l1676 0EC8                      l1940 00F0  
                    l1684 0BBE                      l1934 009D                      l1928 006F  
                    l1688 0BD4                      l1972 0268                      l1958 0204  
                    l1990 0332                      l1986 0300                      l1978 0274  
                    ?_exp 00A0                      ?_log 005B                      ?_pow 00A9  
            __CFG_WDTE$ON 0000                      u2105 0707                      u2215 0E9B  
                    u1425 0DD4                      u1345 0D8E                      u2065 06B4  
                    u2075 06C6                      u1365 0DA9                      u2085 06E8  
                    u2405 0CB2                      u2095 06F9                      u1615 043F  
                    u2255 0BD6                      u1385 0DB8                      u2265 0BDE  
                    u1475 0C10                      u2285 0B90                      u1645 0454  
                    u1805 0513                      u1741 0D35                      u1742 0D36  
                    u1815 0525                      u1743 0D3B                      u1744 0D3C  
                    u1585 042A                      u1905 0587                      u1761 0D5C  
                    u1762 0D5D                      u1675 0469                      u1763 0D62  
                    u1764 0D63                      u2660 00BE                      u1845 0557  
                    u2670 00BF                      u1855 055F                      u1935 0F02  
                    u2755 02F1                      u1965 0F2E                      u1895 057F  
                    i1l32 07CA                      u2777 0FF9                      u1995 0F4C  
                    i1l36 07E6              __CFG_WRT$OFF 0000                      _main 0F6F  
            ___ftpack@arg 0026                      _rand 0C79              ___ftpack@exp 0029  
                    btemp 007E                      exp@x 00A0                      log@x 005B  
                    pow@x 00A9                      pow@y 00AC                      start 0012  
           __CFG_IESO$OFF 0000         ___bmul@multiplier 0029             __CFG_MCLRE$ON 0000  
            ___ftmul@cntr 0042              ___ftmul@sign 0043              ___fttol@exp1 0041  
                   ??_exp 0062                     ??_log 005E              ___fttol@lval 003D  
                   ??_pow 0063                     ?_main 0070                     ?_rand 0033  
         __end_of___awdiv 0D19           __end_of___ftadd 04D9           __end_of___ftdiv 072C  
         __end_of___ftneg 0B2C                     _ANSEL 0188           __end_of___ftmul 05AC  
         ___awdiv@divisor 0070           __end_of___ftsub 0B60           __end_of___fttol 0F6F  
         ___awdiv@counter 0075                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
     ___lmul@multiplicand 002A              ___lltoft@exp 0033            __CFG_FCMEN$OFF 0000  
           ___awtoft@sign 0033                     _floor 072C                     _ldexp 0E5F  
                   _frexp 0C37                     _errno 0068                     _randx 0064  
           ___ftpack@sign 002A            __CFG_BOREN$OFF 0000                     pclath 000A  
                   pow@yi 00B6                     status 0003                     wtemp0 007E  
             exp@exponent 00A6               ldexp@newexp 005E           __initialization 0015  
             log@exponent 005F              __end_of_main 1000              __end_of_rand 0CC0  
                  ??_main 00BA             ___fttol@sign1 003C                    ??_rand 0035  
                  ?_floor 0051                    ?_ldexp 005B                    ?_frexp 0026  
        __end_of___altoft 0C37          ___awdiv@dividend 0072          __end_of___awtoft 0B85  
        __end_of___ftpack 0DE6                    _ANSELH 0189          __end_of___lltoft 0BB4  
                  i1l1830 0CCA                    i1l1836 0CD5                    i1l1862 0D14  
                  i1l1854 0D01                    i1l1846 0CDD                    i1l1848 0CEB  
                  i1l1858 0D0C                    i1l1882 07EC                    i1l1874 07E0  
                  _INTCON 000B                    u250_25 0CE0                    u252_25 0CEC  
                  u253_25 0CF8                    u254_25 0D02            __CFG_PWRTE$OFF 0000  
                  ___bmul 0B2C                    ___ftge 0D19                    ___lmul 0BB4  
               ??___awdiv 0074                 ??___ftadd 004A                 ??___ftdiv 0034  
               ??___ftneg 0029                 ??___ftmul 003A                 ??___ftsub 0057  
               ??___fttol 0038                    _interr 07C5          ___awdiv@quotient 0077  
                  floor@i 0055                    floor@x 0051     ___ftmul@f3_as_product 003F  
                  saved_w 007E          __end_ofexp@coeff 0824          __end_oflog@coeff 083F  
 __end_of__initialization 002D                ___altoft@c 0042                ___ftadd@f1 0044  
              ___ftadd@f2 0047                ___ftge@ff1 0026                ___ftge@ff2 0029  
            eval_poly@res 0058                ___ftdiv@f1 0031                ___ftdiv@f2 002E  
              ___ftdiv@f3 0039                ___ftneg@f1 0026                ___awtoft@c 002E  
     ___bmul@multiplicand 0026                ___ftmul@f1 0034                ___ftmul@f2 0037  
              ___ftsub@f1 0054                ___ftsub@f2 0051                ___fttol@f1 0034  
          __pcstackCOMMON 0070              __pidataBANK0 07F9                ___lltoft@c 002E  
           __end_of_floor 07C5             __end_of_ldexp 0EE1             __end_of_frexp 0C79  
                 ??_floor 0054                   ??_ldexp 0060                   ??_frexp 002A  
              __pbssBANK0 0068        __size_of_eval_poly 0079                __pmaintext 0F6F  
                 ?___bmul 0026                   ?___ftge 0026                   ?___lmul 0026  
              __pintentry 0004                 ?___altoft 0042            ___lmul@product 002F  
                 ?_interr 0070                 ?___awtoft 002E                 ?___ftpack 0026  
               ?___lltoft 002E                __stringtab 0800           __size_of___bmul 0013  
         __size_of___ftge 005F                   ___awdiv 0CC0           __size_of___lmul 0041  
                 ___ftadd 03D0                   ___ftdiv 0674                   ___ftneg 0B22  
                 ___ftmul 04D9                   ___ftsub 0B3F                   ___fttol 0EE1  
              ??___altoft 0046                   _exp$612 00A3                ??___awtoft 0031  
              ??___ftpack 002B         __end_of_eval_poly 0E5F           __size_of_interr 0034  
              ??___lltoft 0032                   __ptext1 0C79                   __ptext2 0BB4  
                 __ptext3 0230                   __ptext4 05AC                   __ptext5 0031  
                 __ptext6 0E5F                   __ptext7 072C                   __ptext8 0C37  
                 __ptext9 0EE1                   _pow$610 00AF                   _pow$611 00B2  
            __size_of_exp 01FF              __size_of_log 00C8              __size_of_pow 01A0  
    end_of_initialization 002D                   exp@sign 00A8                   pow@sign 00B5  
               _PORTBbits 0006               ___ftdiv@exp 003C                main@random 00C3  
             ___ftmul@exp 003E            __end_of___bmul 0B3F            __end_of___ftge 0D78  
          __end_of___lmul 0BF5            __end_of_interr 07F9                floor@expon 0058  
     start_initialization 0015                eval_poly@d 0054                eval_poly@n 0055  
              eval_poly@x 0051                ldexp@value 005B               __end_of_exp 0230  
             __end_of_log 0674               __end_of_pow 03D0                frexp@value 0026  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0027                  ??___ftge 002C  
                ??___lmul 002E               __pdataBANK0 0064                  ??_interr 0020  
       __size_of___altoft 0042         __size_of___awtoft 0025         __size_of___ftpack 006E  
       __size_of___lltoft 002F                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?___awdiv 0070                  ?___ftadd 0044  
                ?___ftdiv 002E                  ?___ftneg 0026                  ?___ftmul 0034  
                ?___ftsub 0051                  ?___fttol 0034                 __pstrings 0800  
               _eval_poly 0DE6            __size_of_floor 0099            __size_of_ldexp 0082  
          __size_of_frexp 0042         interrupt_function 0004               __stringbase 0805  
              ?_eval_poly 0051         ___lmul@multiplier 0026                 frexp@eptr 0029  
        __size_of___awdiv 0059          __size_of___ftadd 0109          __size_of___ftdiv 00B8  
        __size_of___ftneg 000A                  ___altoft 0BF5          __size_of___ftmul 00D3  
        __size_of___ftsub 0021          __size_of___fttol 008E                  ___awtoft 0B60  
                ___ftpack 0D78        __end_of__stringtab 0806                  ___lltoft 0B85  
                _main$608 00BD                  _main$609 00C0                  __ptext10 0D19  
                __ptext11 0BF5                  __ptext20 0B85                  __ptext12 0DE6  
                __ptext21 0D78                  __ptext13 04D9                  __ptext22 07C5  
                __ptext14 0B2C                  __ptext23 0CC0                  __ptext15 0B3F  
                __ptext16 03D0                  __ptext17 0B22                  __ptext18 0674  
                __ptext19 0B60         __CFG_BOR4V$BOR40V 0000             __size_of_main 0091  
           __size_of_rand 0047                  exp@coeff 0806                  log@coeff 0824  
              _INTCONbits 000B               ??_eval_poly 0057                  intlevel1 0000  
               stringcode 0800                  stringdir 0800                  stringtab 0800  
